{"version":3,"file":"main.8cfe0b6898d0ddd876f6.hot-update.js","sources":["webpack:///./src/p1/FileUploadPage.js"],"sourcesContent":["/**@jsx jsx */\nimport { jsx } from '@emotion/core'\nimport PropTypes from 'prop-types'\nimport { Component } from 'react'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { I18n } from '@lingui/react'\nimport { ApolloConsumer } from 'react-apollo'\nimport { Container } from '../components/container'\nimport { Text } from '../components/text'\nimport { H1, H2 } from '../components/header'\nimport { Button } from '../components/button'\nimport { Link } from '../components/link'\nimport { FileUpload } from '../components/file-upload'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { Layout } from '../components/layout'\nimport { Steps } from '../components/stepper'\nimport { P } from '../components/paragraph'\nimport { getDoneForms, getFiles } from '../utils/queriesAndMutations'\n\nclass FileUploadInternal extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      files: getFiles(props.client).map(name => ({ name })),\n    }\n  }\n\n  onChange = e => {\n    this.setState({ files: this.state.files.concat(e.target.files[0]) })\n  }\n\n  removeFile = index => {\n    let newFiles = this.state.files\n    newFiles.splice(index, 1)\n    this.setState({ files: newFiles })\n  }\n\n  submitAndNavigate = client => {\n    const files = this.state.files.map(file => file.name)\n    const data = { files }\n    client.writeData({ data }) // TODO: actually upload files\n    navigate(getDoneForms(client) ? 'confirmation' : 'contactinfoquestion')\n  }\n\n  render() {\n    const { files } = this.state\n\n    return (\n      <Layout>\n        <TrackPageViews />\n        <Container\n          display=\"flex\"\n          width=\"90%\"\n          flexDirection=\"row\"\n          marginBottom=\"20px\"\n        >\n          <Steps activeStep={3} steps={[{}, {}, {}, {}, {}]} />\n        </Container>\n        <H1>\n          <Trans>Attach supporting files</Trans>\n        </H1>\n        <P>\n          <Trans>\n            This could include copies of emails, conversations, recordings, or\n            receipts that could serve as evidence for police.\n          </Trans>\n        </P>\n        <Container\n          width=\"300px\"\n          marginTop={[2, null, 5]}\n          marginBottom={[2, null, 5]}\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n        >\n          <FileUpload\n            onChange={this.onChange}\n            paddingLeft=\"15px\"\n            paddingRight=\"15px\"\n          >\n            <Trans>Add file</Trans>\n          </FileUpload>\n        </Container>\n        <P>\n          <Trans> </Trans>\n        </P>\n        <hr />\n\n        <I18n>\n          {({ i18n }) => (\n            <H2 fontSize={[3, null, 5]}>\n              {i18n.plural({\n                value: files.length,\n                one: '# file attached',\n                other: '# files attached',\n              })}\n            </H2>\n          )}\n        </I18n>\n\n        <Container>\n          {files.map((f, index) => (\n            <Container\n              width=\"300px\"\n              marginBottom={[2, null, 3]}\n              key={index}\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent=\"space-between\"\n            >\n              <Text>{f.name}</Text>\n              <Button\n                float=\"right\"\n                marginTop={0}\n                backgroundColor=\"crimson\"\n                type=\"button\"\n                onClick={() => this.removeFile(index)}\n              >\n                <Trans>Remove file</Trans>\n              </Button>\n            </Container>\n          ))}\n        </Container>\n\n        <ApolloConsumer>\n          {client => (\n            <Container>\n              <Container\n                width=\"300px\"\n                marginTop={[7, null, 8]}\n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"space-between\"\n              >\n                <Button onClick={() => this.submitAndNavigate(client)}>\n                  <Trans>Continue</Trans>\n                </Button>\n              </Container>\n\n              <Container\n                width=\"300px\"\n                marginTop={[2, null, 3]}\n                display=\"flex\"\n                flexDirection=\"column\"\n                justifyContent=\"space-between\"\n              >\n                <Link type=\"button\" color=\"black\" to=\"/p1\" textAlign=\"center\">\n                  <Trans>Cancel report</Trans>\n                </Link>\n              </Container>\n            </Container>\n          )}\n        </ApolloConsumer>\n      </Layout>\n    )\n  }\n}\n\nFileUploadInternal.propTypes = {\n  client: PropTypes.object.isRequired,\n}\n\nexport const FileUploadPage = () => (\n  <ApolloConsumer>\n    {client => <FileUploadInternal client={client} />}\n  </ApolloConsumer>\n)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AAAA;AAAA;AACA;AACA;AAVA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAhBA;AAkBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AArBA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAKA;AACA;;;AAkBA;AAAA;AACA;AADA;AAGA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAGA;AAAA;AAGA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAHA;AAKA;AAAA;AAIA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAFA;AAYA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAjBA;AAwBA;AAGA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAtBA;AA8BA;;;;AAxIA;AACA;AA0IA;AACA;AADA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAFA;;;;A","sourceRoot":""}