{"version":3,"file":"main.c4630203fb43775fc3ff.hot-update.js","sources":["webpack:///./src/p1/FileUploadPage.js"],"sourcesContent":["/**@jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport PropTypes from 'prop-types'\nimport { Component } from 'react'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { I18n } from '@lingui/react'\nimport { ApolloConsumer } from 'react-apollo'\nimport { Container } from '../components/container'\nimport { Text } from '../components/text'\nimport { H1, H2 } from '../components/header'\nimport { Button } from '../components/button'\nimport { Link } from '../components/link'\nimport { FileUpload } from '../components/file-upload'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { Layout } from '../components/layout'\nimport { Steps } from '../components/stepper'\nimport { P } from '../components/paragraph'\nimport { getDoneForms, getFiles } from '../utils/queriesAndMutations'\nimport upload from '../images/upload.svg'\nimport { BackButton } from '../components/backbutton'\n\nclass FileUploadInternal extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      files: getFiles(props.client).map(name => ({ name })),\n    }\n  }\n\n  onChange = e => {\n    this.setState({ files: this.state.files.concat(e.target.files[0]) })\n  }\n\n  removeFile = index => {\n    let newFiles = this.state.files\n    newFiles.splice(index, 1)\n    this.setState({ files: newFiles })\n  }\n\n  submitAndNavigate = client => {\n    const files = this.state.files.map(file => file.name)\n    const data = { files }\n    client.writeData({ data }) // TODO: actually upload files\n    navigate(getDoneForms(client) ? 'confirmation' : 'contactinfoquestion')\n  }\n\n  render() {\n    const { files } = this.state\n\n    return (\n      <Layout>\n        <TrackPageViews />\n        <BackButton route=\"/p1/uploadfilesquestion\">\n          <Trans>supporting files</Trans>\n        </BackButton>\n        <Steps activeStep={4} totalSteps={6} />\n        <H1>\n          <Trans>Attach supporting files</Trans>\n        </H1>\n        <P>\n          <Trans>\n            Include any messages, conversations, receipts, or other evidence\n            that shows what happened.\n          </Trans>\n        </P>\n        <P>\n          <Trans>Please attach one file at a time.</Trans>\n        </P>\n        <Container\n          marginTop={[2, null, 5]}\n          marginBottom={[2, 5, 5]}\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent={['flex-start', 'center', 'flex-start']}\n          textAlign=\"center\"\n        >\n          <FileUpload\n            onChange={this.onChange}\n            width={['auto', '100%', 'auto']}\n            paddingLeft=\"1.5rem\"\n            paddingRight=\"1.5rem\"\n            paddingBottom=\"0.6rem\"\n            paddingTop=\"0.6rem\"\n            css={css`\n              display: flex;\n              justify-content: center;\n              img {\n                width: 1rem;\n                margin-right: 0.6rem;\n              }\n            `}\n          >\n            <img alt=\"upload icon\" src={upload} />\n            <span>\n              <Trans>Attach file</Trans>\n            </span>\n          </FileUpload>\n        </Container>\n        <P>\n          <Trans> </Trans>\n        </P>\n        <hr />\n\n        <I18n>\n          {({ i18n }) => (\n            <H2 fontSize={[3, null, 5]}>\n              {i18n.plural({\n                value: files.length,\n                one: '# file attached',\n                other: '# files attached',\n              })}\n            </H2>\n          )}\n        </I18n>\n\n        <Container>\n          {files.map((f, index) => (\n            <Container\n              marginBottom={[2, null, 3]}\n              key={index}\n              display=\"flex\"\n              flexDirection=\"row\"\n              alignItems=\"center\"\n            >\n              <Button\n                float=\"right\"\n                marginTop={0}\n                backgroundColor=\"crimson\"\n                type=\"button\"\n                onClick={() => this.removeFile(index)}\n              >\n                <Trans>Remove file</Trans>\n              </Button>\n\n              <Text marginLeft=\"3rem\">{f.name}</Text>\n            </Container>\n          ))}\n        </Container>\n\n        <ApolloConsumer>\n          {client => (\n            <Container>\n              <Container\n                mt=\"1rem\"\n                mb=\"4rem\"\n                display={['flex', 'block', 'flex']}\n                alignItems=\"center\"\n                css={css`\n                  button,\n                  div[name='buttonlink-container'] a {\n                    padding: 0.7rem 1.5rem;\n                    width: 100%;\n                    text-align: center;\n                  }\n\n                  @media (max-width: 640px) {\n                    div[name='buttonlink-container'] a {\n                      padding: 0.7rem 0;\n                    }\n                  }\n                `}\n              >\n                <Container mt=\"1rem\">\n                  <Button\n                    onClick={() => this.submitAndNavigate(client)}\n                    type=\"submit\"\n                  >\n                    <Trans>Next: Contact Info</Trans>\n                  </Button>\n                </Container>\n\n                <Container mt=\"1.9rem\" ml={['3rem', '0', '3rem']}>\n                  <Link\n                    type=\"button\"\n                    color=\"black\"\n                    to=\"/p1/\"\n                    textAlign=\"center\"\n                  >\n                    <Trans>Cancel report</Trans>\n                  </Link>\n                </Container>\n              </Container>\n            </Container>\n          )}\n        </ApolloConsumer>\n      </Layout>\n    )\n  }\n}\n\nFileUploadInternal.propTypes = {\n  client: PropTypes.object.isRequired,\n}\n\nexport const FileUploadPage = () => (\n  <ApolloConsumer>\n    {client => <FileUploadInternal client={client} />}\n  </ApolloConsumer>\n)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AAAA;AAAA;AACA;AACA;AAVA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAhBA;AAkBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AArBA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAKA;AACA;;;AAkBA;AAAA;AACA;AADA;AAGA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAMA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAgBA;AAAA;AAAA;AAEA;AAAA;AAKA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAFA;AAYA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAGA;AAAA;AAlBA;AAwBA;AAGA;AACA;AACA;AACA;AACA;AALA;AAoBA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAtCA;AA+CA;;;;AAtKA;AACA;AAwKA;AACA;AADA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAFA;;;;A","sourceRoot":""}