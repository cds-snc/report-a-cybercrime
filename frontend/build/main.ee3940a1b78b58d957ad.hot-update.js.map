{"version":3,"file":"main.ee3940a1b78b58d957ad.hot-update.js","sources":["webpack:///./src/p2/TimeFramePage.js","webpack:///./src/p2/forms/TimeFrameInfoForm.js"],"sourcesContent":["import { navigate } from '@reach/router'\nimport React from 'react'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { P } from '../components/paragraph'\nimport { Layout } from '../components/layout'\nimport { TimeFrameInfoForm } from './forms/TimeFrameInfoForm'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { getDoneForms } from '../utils/queriesAndMutations'\nimport { BackButton } from '../components/backbutton'\nimport { Steps } from '../components/stepper'\n\nconst submitAndNavigate = (client, data) => {\n  client.writeData({ data: { scamInfo: JSON.stringify(data) } })\n  navigate(getDoneForms(client) ? 'confirmation' : 'whathappened')\n}\n\nexport const TimeFramePage = () => (\n  <Layout>\n    <BackButton route=\"/p2\">\n      <Trans>the start page</Trans>\n    </BackButton>\n    <Steps activeStep={1} totalSteps={6} />\n\n    {/* <Link type=\"button\" color=\"black\" to=\"/p2/\" textAlign=\"center\">\n                <Trans>Cancel report</Trans>\n              </Link> */}\n\n    <H1>\n      <Trans>When did the scam happen?</Trans>\n    </H1>\n    <P>\n      <Trans>\n        It’s okay if you don’t know exactly when it took place. You can give\n        your best guess or leave this blank.\n      </Trans>\n    </P>\n    <TrackPageViews />\n    <TimeFrameInfoForm onSubmit={submitAndNavigate} />\n  </Layout>\n)\n","/** @jsx jsx */\nimport { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx } from '@emotion/core'\nimport { ApolloConsumer } from 'react-apollo'\nimport { I18n } from '@lingui/react'\nimport { Trans } from '@lingui/macro'\nimport { Form, Field } from 'react-final-form'\nimport { P } from '../../components/paragraph'\nimport { Text } from '../../components/text'\nimport { ButtonsContainer } from '../../components/buttons-container'\nimport { DateSelector } from '../../components/date-picker'\nimport { finalFormAdapter } from '../../utils/finalFormAdapter'\nimport { getTimeFrame } from '../../utils/queriesAndMutations'\n\nconst DateSelectorAdapter = finalFormAdapter(DateSelector)\n\nconst validate = () => {\n  return {}\n}\nclass TimeFrameInfoFormWrapped extends Component {\n  constructor(props) {\n    super(props)\n    const { startDate, endDate } = getTimeFrame(props.client)\n    this.startDate = new Date(startDate)\n    this.endDate = new Date(endDate)\n  }\n\n  handleChange = date => {\n    this.startDate = date\n  }\n  handleChangeDate = date => {\n    this.endDate = date\n  }\n\n  localOnSubmit = (client, data) => {\n    const { onSubmit } = this.props\n    if (this.startDate != null && this.startDate.length > 0) {\n      data.startDate = this.startDate.toISOString()\n    } else {\n      data.startDate = ''\n    }\n\n    if (this.endDate != null && this.endDate.length > 0) {\n      data.endDate = this.endDate.toISOString()\n    } else {\n      data.endDate = ''\n    }\n\n    onSubmit(client, data)\n  }\n\n  render() {\n    return (\n      <Form\n        onSubmit={data => this.localOnSubmit(this.props.client, data)}\n        validate={validate}\n        render={({ handleSubmit }) => (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"whenDidItStart\">\n              <P marginTop={[5, null, 6]}>\n                <Trans>\n                  <strong>Approximate start</strong>\n                </Trans>\n              </P>\n            </label>\n            <div>\n              <I18n>\n                {({ i18n }) => (\n                  <Field\n                    name=\"whenDidItStart\"\n                    id=\"whenDidItStart\"\n                    component={DateSelectorAdapter}\n                    locale={i18n._('en')}\n                    selected={this.startDate}\n                    onChange={this.handleChange}\n                    height=\"25px\"\n                    width=\"300px\"\n                  />\n                )}\n              </I18n>\n            </div>\n\n            <label htmlFor=\"whenWasLastInteraction\">\n              <P marginTop={[5, null, 6]}>\n                <Trans>\n                  <strong>Approximate end</strong>\n                </Trans>\n              </P>\n              <Text fontSize={1, null, 2}>\n              <Trans>MM/DD/YYYY</Trans>\n              </Text>\n            </label>\n            <div>\n              <I18n>\n                {({ i18n }) => (\n                  <Field\n                    name=\"whenWasLastInteraction\"\n                    id=\"whenWasLastInteraction\"\n                    component={DateSelectorAdapter}\n                    locale={i18n._('en')}\n                    selected={this.endDate}\n                    onChange={this.handleChangeDate}\n                    height=\"25px\"\n                    width=\"300px\"\n                  />\n                )}\n              </I18n>\n            </div>\n            <ButtonsContainer\n              cancel={true}\n              buttonLink={false}\n              nextPage=\"What happened\"\n            />\n          </form>\n        )}\n      />\n    )\n  }\n}\n\nTimeFrameInfoFormWrapped.propTypes = {\n  client: PropTypes.any.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n}\n\nexport const TimeFrameInfoForm = props => (\n  <ApolloConsumer>\n    {client => <TimeFrameInfoFormWrapped client={client} {...props} />}\n  </ApolloConsumer>\n)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAOA;AAAA;AAGA;AAAA;AAMA;AAAA;AArBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AACA;AACA;AAVA;AAWA;AACA;AACA;AAbA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAAA;AAAA;AACA;AAEA;AACA;AAJA;AAKA;AACA;;;AAyBA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAeA;AACA;AACA;AAHA;AApDA;AAHA;AAgEA;;;;AAlGA;AACA;AAoGA;AACA;AACA;AAFA;AAKA;AAAA;AAEA;AAAA;AAAA;AAAA;AAFA;;;;A","sourceRoot":""}