{"version":3,"file":"main.96d772983c2f19fad853.hot-update.js","sources":["webpack:///./src/p1/forms/MoneyLostForm.js"],"sourcesContent":["/** @jsx jsx */\nimport React from 'react'\n\nimport PropTypes from 'prop-types'\nimport { css, jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { I18n, i18nMark } from '@lingui/react'\nimport { Form, Field } from 'react-final-form'\nimport { Container } from '../../components/container'\nimport { Checkbox } from '../../components/checkbox'\nimport { RadioButton } from '../../components/radio-button'\nimport { TextArea } from '../../components/text-area'\nimport { Button } from '../../components/button'\nimport { Link } from '../../components/link'\nimport { Text } from '../../components/text'\nimport { ApolloConsumer } from 'react-apollo'\nimport { finalFormAdapter } from '../../utils/finalFormAdapter'\nimport { getLostMoney } from '../../utils/queriesAndMutations'\n\nconst CheckboxAdapter = finalFormAdapter(Checkbox)\nconst RadioButtonAdapter = finalFormAdapter(RadioButton)\nconst TextAreaAdapter = finalFormAdapter(TextArea)\n\nconst methodsOfPayment = [\n  i18nMark('Cash'),\n  i18nMark('Credit card'),\n  i18nMark('E-transfer'),\n  i18nMark('Gift card'),\n  i18nMark('Other method'),\n]\n\nconst currencies = [\n  i18nMark('Canadian dollar'),\n  i18nMark('U.S. dollar'),\n  i18nMark('Euro'),\n  i18nMark('Other currency'),\n]\n\nconst CheckboxStyle = styled('label')`\n  margin-bottom: 8pt;\n`\n\nconst Fieldset = styled('fieldset')`\n  margin: 0;\n  padding: 0;\n  border: none;\n`\n\nconst validate = () => {\n  return {}\n}\n\nexport const MoneyLostForm = ({ onSubmit }) => (\n  <ApolloConsumer>\n    {client => (\n      <Form\n        initialValues={getLostMoney(client)}\n        onSubmit={data => onSubmit(client, data)}\n        validate={validate}\n        render={({ handleSubmit, values }) => (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"lostAmount\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans><strong>Amount</strong></Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"lostAmount\"\n                id=\"lostAmount\"\n                component={TextAreaAdapter}\n                height=\"25px\"\n                width=\"200px\"\n              />\n            </div>\n\n            <Fieldset>\n              <legend>\n                <Text marginTop={[4, null, 5]}>\n                  <Trans><strong>Currency</strong></Trans>\n                </Text>\n              </legend>\n              <I18n>\n                {({ i18n }) =>\n                  currencies.map(key => {\n                    return (\n                      <CheckboxStyle key={key}>\n                        <Field\n                          name=\"lostCurrency\"\n                          component={RadioButtonAdapter}\n                          type=\"radio\"\n                          value={key}\n                          label={i18n._(key)}\n                        />\n                      </CheckboxStyle>\n                    )\n                  })\n                }\n              </I18n>\n            </Fieldset>\n\n            {values.lostCurrency &&\n            values.lostCurrency.indexOf('Other currency') > -1 ? (\n              <React.Fragment>\n                <label htmlFor=\"lostOtherCurrency\">\n                  <Text>\n                    <Trans>Other currency</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <Field\n                    name=\"lostOtherCurrency\"\n                    id=\"lostOtherCurrency\"\n                    component={TextAreaAdapter}\n                    height=\"25px\"\n                    width=\"200px\"\n                  />\n                </div>\n              </React.Fragment>\n            ) : (\n              ''\n            )}\n\n            <Fieldset>\n              <legend>\n                <Text marginTop={[4, null, 5]}>\n                  <Trans><strong>How did you pay the scammer?</strong></Trans>\n                </Text>\n              </legend>\n              <div>\n                <I18n>\n                  {({ i18n }) =>\n                    methodsOfPayment.map(key => {\n                      return (\n                        <CheckboxStyle key={key}>\n                          <Field\n                            name=\"lostMethodsOfPayment\"\n                            component={CheckboxAdapter}\n                            type=\"checkbox\"\n                            value={key}\n                            label={i18n._(key)}\n                          />\n                        </CheckboxStyle>\n                      )\n                    })\n                  }\n                </I18n>\n              </div>\n            </Fieldset>\n\n            {values.lostMethodsOfPayment &&\n            values.lostMethodsOfPayment.indexOf('Other method') > -1 ? (\n              <React.Fragment>\n                <label htmlFor=\"lostOtherMethodOfPayment\">\n                  <Text>\n                    <Trans>Other method of payment</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <Field\n                    name=\"lostOtherMethodOfPayment\"\n                    id=\"lostOtherMethodOfPayment\"\n                    component={TextAreaAdapter}\n                    height=\"25px\"\n                    width=\"200px\"\n                  />\n                </div>\n              </React.Fragment>\n            ) : (\n              ''\n            )}\n\n            <Container\n              width=\"305px\"\n              marginTop={[3, null, 4]}\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n              `}\n            >\n              <Button type=\"submit\">\n                <Trans>Continue</Trans>\n              </Button>\n            </Container>\n\n            <Container\n              width=\"300px\"\n              marginTop={[2, null, 3]}\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n              `}\n            >\n              <Link type=\"button\" color=\"black\" to=\"/p1/\" textAlign=\"center\">\n                <Trans>Cancel report</Trans>\n              </Link>\n            </Container>\n          </form>\n        )}\n      />\n    )}\n  </ApolloConsumer>\n)\n\nMoneyLostForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAQA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAWA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AAbA;AAqBA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAeA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AAbA;AAsBA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAcA;AACA;AACA;AAHA;AASA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAzIA;AAJA;AADA;AAFA;AA0JA;AACA;AADA;;;;A","sourceRoot":""}