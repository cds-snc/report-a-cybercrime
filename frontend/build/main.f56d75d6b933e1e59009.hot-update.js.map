{"version":3,"file":"main.f56d75d6b933e1e59009.hot-update.js","sources":["webpack:///./src/ConfirmationPage.js","webpack:///./src/FileUploadPage.js","webpack:///./src/FilesToUpload.js","webpack:///./src/Home.js","webpack:///./src/LandingPage.js","webpack:///./src/ThankYou.js","webpack:///./src/Willbecontacted.js","webpack:///./src/components/date-picker/index.js","webpack:///./src/components/date-picker/locale/_lib/buildFormatLongFn/index.js","webpack:///./src/components/date-picker/locale/_lib/buildLocalizeFn/index.js","webpack:///./src/components/date-picker/locale/_lib/buildMatchFn/index.js","webpack:///./src/components/date-picker/locale/_lib/buildMatchPatternFn/index.js","webpack:///./src/components/date-picker/locale/en-CA/_lib/formatDistance/index.js","webpack:///./src/components/date-picker/locale/en-CA/_lib/formatLong/index.js","webpack:///./src/components/date-picker/locale/en-CA/index.js","webpack:///./src/components/date-picker/locale/en-US/_lib/formatRelative/index.js","webpack:///./src/components/date-picker/locale/en-US/_lib/localize/index.js","webpack:///./src/components/date-picker/locale/en-US/_lib/match/index.js","webpack:///./src/components/date-picker/locale/fr/_lib/formatDistance/index.js","webpack:///./src/components/date-picker/locale/fr/_lib/formatLong/index.js","webpack:///./src/components/date-picker/locale/fr/_lib/formatRelative/index.js","webpack:///./src/components/date-picker/locale/fr/_lib/localize/index.js","webpack:///./src/components/date-picker/locale/fr/_lib/match/index.js","webpack:///./src/components/date-picker/locale/fr/index.js","webpack:///./src/forms/ContactInfoForm.js","webpack:///./src/forms/MoneyLostForm.js","webpack:///./src/forms/ScamInfoForm.js","webpack:///./src/forms/SuspectInfoForm.js","webpack:///./src/server.js"],"sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport React from 'react'\nimport { navigate } from '@reach/router'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { ApolloConsumer } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { H1, H2 } from './components/header'\nimport { Container } from './components/container'\nimport { Text } from './components/text'\nimport { Button } from './components/button'\nimport { ButtonLink } from './components/button-link'\nimport { TrackPageViews } from './TrackPageViews'\n\nconst CenterContent = styled('div')`\n  max-width: 750px;\n  margin: auto;\n`\n\nconst scamEventSummary = client => {\n  let {\n    howWereYouContacted,\n    otherMethodOfContact,\n    whenWereYouContacted,\n    scamDetails,\n  } = client.readQuery({\n    query: gql`\n      query readCache {\n        howWereYouContacted\n        otherMethodOfContact\n        whenWereYouContacted\n        scamDetails\n      }\n    `,\n  })\n  if (\n    (howWereYouContacted && howWereYouContacted.length) ||\n    whenWereYouContacted ||\n    scamDetails\n  ) {\n    if (otherMethodOfContact) {\n      howWereYouContacted = howWereYouContacted.concat(otherMethodOfContact)\n    }\n    howWereYouContacted = howWereYouContacted\n      .filter(s => s !== 'other')\n      .join(', ')\n    return (\n      <React.Fragment>\n        <H2 fontSize={[3, null, 4]} marginBottom={[1, null, 1]}>\n          <Trans>Scam event</Trans>\n        </H2>\n        <Text>\n          <Trans>Contacted by: {howWereYouContacted}</Trans>\n        </Text>\n        <Text>\n          <Trans>Event Occured on: {whenWereYouContacted}</Trans>\n        </Text>\n        <Text>\n          <Trans>Details: {scamDetails}</Trans>\n        </Text>\n      </React.Fragment>\n    )\n  } else {\n    return null\n  }\n}\n\nconst lostMoneySummary = client => {\n  let {\n    lostAmount,\n    lostCurrency,\n    lostMethodsOfPayment,\n    lostOtherMethodOfPayment,\n  } = client.readQuery({\n    query: gql`\n      query readCache {\n        lostAmount\n        lostCurrency\n        lostMethodsOfPayment\n        lostOtherMethodOfPayment\n      }\n    `,\n  })\n  if (\n    lostAmount ||\n    lostCurrency ||\n    (lostMethodsOfPayment && lostMethodsOfPayment.length)\n  ) {\n    if (lostOtherMethodOfPayment) {\n      lostMethodsOfPayment = lostMethodsOfPayment.concat(\n        lostOtherMethodOfPayment,\n      )\n    }\n    lostMethodsOfPayment = lostMethodsOfPayment\n      .filter(s => s !== 'other')\n      .join(', ')\n    return (\n      <React.Fragment>\n        <H2\n          fontSize={[3, null, 4]}\n          marginTop={[3, null, 4]}\n          marginBottom={[1, null, 1]}\n        >\n          <Trans>Money lost</Trans>\n        </H2>\n        <Text>\n          <Trans>Amount: {lostAmount}</Trans>\n        </Text>\n        <Text>\n          <Trans>Currency: {lostCurrency}</Trans>\n        </Text>\n        <Text>\n          <Trans>Method: {lostMethodsOfPayment}</Trans>\n        </Text>\n      </React.Fragment>\n    )\n  } else {\n    return null\n  }\n}\n\nconst suspectInfoSummary = client => {\n  let {\n    suspectName,\n    suspectAddress,\n    suspectLanguage,\n    otherSuspectLanguage,\n    suspectPhone,\n    suspectEmail,\n    suspectWebsite,\n    suspectIP,\n  } = client.readQuery({\n    query: gql`\n      query readCache {\n        suspectName\n        suspectAddress\n        suspectLanguage\n        otherSuspectLanguage\n        suspectPhone\n        suspectEmail\n        suspectWebsite\n        suspectIP\n      }\n    `,\n  })\n  if (\n    suspectName ||\n    suspectAddress ||\n    (suspectLanguage && suspectLanguage.length) ||\n    suspectPhone ||\n    suspectEmail ||\n    suspectWebsite ||\n    suspectIP\n  ) {\n    if (otherSuspectLanguage) {\n      suspectLanguage = suspectLanguage.concat(otherSuspectLanguage)\n    }\n    suspectLanguage = suspectLanguage.filter(s => s !== 'other').join(', ')\n    return (\n      <React.Fragment>\n        <H2\n          fontSize={[3, null, 4]}\n          marginTop={[3, null, 4]}\n          marginBottom={[1, null, 1]}\n        >\n          <Trans>Suspect Information</Trans>\n        </H2>\n        <Text>\n          <Trans>Name: {suspectName}</Trans>\n        </Text>\n        <Text>\n          <Trans>Address: {suspectAddress}</Trans>\n        </Text>\n        <Text>\n          <Trans>Language: {suspectLanguage}</Trans>\n        </Text>\n        <Text>\n          <Trans>Phone number: {suspectPhone}</Trans>\n        </Text>\n        <Text>\n          <Trans>Email address: {suspectEmail}</Trans>\n        </Text>\n        <Text>\n          <Trans>Website: {suspectWebsite}</Trans>\n        </Text>\n        <Text>\n          <Trans>IP address: {suspectIP}</Trans>\n        </Text>\n      </React.Fragment>\n    )\n  } else {\n    return null\n  }\n}\n\nconst fileUploadSummary = client => {\n  const { files } = client.readQuery({\n    query: gql`\n      query readCache {\n        files\n      }\n    `,\n  })\n  if (files && files.length) {\n    const fileList = files.join(', ')\n    return (\n      <React.Fragment>\n        <H2\n          fontSize={[3, null, 4]}\n          marginTop={[3, null, 4]}\n          marginBottom={[1, null, 1]}\n        >\n          <Trans>Evidence</Trans>\n        </H2>\n        <Text>\n          <Trans>Files: {fileList}</Trans>\n        </Text>\n      </React.Fragment>\n    )\n  } else {\n    return null\n  }\n}\nconst contactInfoSummary = client => {\n  const {\n    userIsTheVictim,\n    contactInfoName,\n    contactInfoEmail,\n    contactInfoPhone,\n  } = client.readQuery({\n    query: gql`\n      query readCache {\n        userIsTheVictim\n        contactInfoName\n        contactInfoEmail\n        contactInfoPhone\n      }\n    `,\n  })\n  if (\n    userIsTheVictim ||\n    contactInfoName ||\n    contactInfoEmail ||\n    contactInfoPhone\n  ) {\n    return (\n      <React.Fragment>\n        <H2\n          fontSize={[3, null, 4]}\n          marginTop={[3, null, 4]}\n          marginBottom={[1, null, 1]}\n        >\n          <Trans>If the police have any questions</Trans>\n        </H2>\n        <Text>\n          <Trans>You are the victim: {userIsTheVictim}</Trans>\n        </Text>\n        <Text>\n          <Trans>Name: {contactInfoName}</Trans>\n        </Text>\n        <Text>\n          <Trans>Email: {contactInfoEmail}</Trans>\n        </Text>\n        <Text>\n          <Trans>Phone: {contactInfoPhone}</Trans>\n        </Text>\n      </React.Fragment>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const ConfirmationPage = () => (\n  <CenterContent>\n    <H1>\n      <Trans>Would you like to submit this report?</Trans>\n    </H1>\n    <TrackPageViews />\n    <ApolloConsumer>\n      {client => (\n        <React.Fragment>\n          {scamEventSummary(client)}\n          {lostMoneySummary(client)}\n          {suspectInfoSummary(client)}\n          {fileUploadSummary(client)}\n          {contactInfoSummary(client)}\n        </React.Fragment>\n      )}\n    </ApolloConsumer>\n\n    <Container\n      maxWidth=\"305px\"\n      marginTop={[3, null, 4]}\n      css={css`\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n      `}\n    >\n      <Button type=\"submit\" onClick={() => navigate('/thankyou')}>\n        <Trans>Submit</Trans>\n      </Button>\n    </Container>\n\n    <Container\n      maxWidth=\"300px\"\n      marginTop={[2, null, 3]}\n      css={css`\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n      `}\n    >\n      <ButtonLink type=\"button\" color=\"black\">\n        <Trans>Cancel Report</Trans>\n      </ButtonLink>\n    </Container>\n  </CenterContent>\n)\n","/** @jsx jsx */\nimport { Component } from 'react'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { css, jsx } from '@emotion/core'\nimport { ApolloConsumer } from 'react-apollo'\nimport { Container } from './components/container'\nimport { Text } from './components/text'\nimport { H1, H2 } from './components/header'\nimport { Button } from './components/button'\nimport { ButtonLink } from './components/button-link'\nimport { FileUpload } from './components/file-upload'\nimport { TrackPageViews } from './TrackPageViews'\nimport { P } from './components/paragraph'\n\nexport class FileUploadPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      files: [],\n    }\n  }\n\n  onChange = e => {\n    this.setState({ files: this.state.files.concat(e.target.files[0]) })\n  }\n\n  removeFile = index => {\n    let newFiles = this.state.files\n    newFiles.splice(index, 1)\n    this.setState({ files: newFiles })\n  }\n\n  submitAndNavigate = client => {\n    const files = this.state.files.map(file => file.name)\n    const data = { files }\n    client.writeData({ data }) // TODO: actually upload files\n    navigate('/contactinfoquestion')\n  }\n\n  render() {\n    const { files } = this.state\n\n    return (\n      <Container>\n        <TrackPageViews />\n        <H1 fontSize={[5, null, 6]} marginBottom=\"70px\">\n          <Trans>Upload supporting files</Trans>\n        </H1>\n        <Container\n          width=\"300px\"\n          marginBottom={[2, null, 3]}\n          css={css`\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n          `}\n        >\n          <FileUpload\n            onChange={this.onChange}\n            paddingLeft=\"15px\"\n            paddingRight=\"15px\"\n          >\n            <Trans>Attach file</Trans>\n          </FileUpload>\n        </Container>\n        <P>\n          <Trans>\n            {' '}\n            Supporting files could include copies of emails, text messages, and\n            receipts. Any documentation could serve as evidence for police.\n          </Trans>\n        </P>\n        <H2 fontSize={[3, null, 5]} marginTop={[5, null, 6]}>\n          {files.length} <Trans>files attached</Trans>\n        </H2>\n\n        <Container>\n          {files.map((f, index) => (\n            <Container\n              width=\"300px\"\n              marginBottom={[2, null, 3]}\n              key={index}\n              css={css`\n                display: flex;\n                flex-direction: row;\n                justify-content: space-between;\n              `}\n            >\n              <Text>{f.name}</Text>\n              <Button\n                float=\"right\"\n                marginTop={0}\n                backgroundColor=\"crimson\"\n                type=\"button\"\n                onClick={() => this.removeFile(index)}\n              >\n                <Trans>Remove</Trans>\n              </Button>\n            </Container>\n          ))}\n        </Container>\n\n        <ApolloConsumer>\n          {client => (\n            <Container>\n              <Container\n                width=\"300px\"\n                marginTop={[7, null, 8]}\n                css={css`\n                  display: flex;\n                  flex-direction: column;\n                  justify-content: space-between;\n                `}\n              >\n                <Button onClick={() => this.submitAndNavigate(client)}>\n                  <Trans>Next</Trans>\n                </Button>\n              </Container>\n\n              <Container\n                width=\"300px\"\n                marginTop={[2, null, 3]}\n                css={css`\n                  display: flex;\n                  flex-direction: column;\n                  justify-content: space-between;\n                `}\n              >\n                <ButtonLink type=\"button\" color=\"black\">\n                  <Trans>Cancel Report</Trans>\n                </ButtonLink>\n              </Container>\n            </Container>\n          )}\n        </ApolloConsumer>\n      </Container>\n    )\n  }\n}\n","/**@jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from './components/header'\nimport { P } from './components/paragraph'\nimport { ButtonLink } from './components/link'\nimport { TrackPageViews } from './TrackPageViews'\nimport { Container } from './components/container'\n\nconst CenterContent = styled('div')`\n  max-width: 750px;\n  margin: auto;\n`\n\nconst bottomBarContainer = css`\n  display: flex;\n  width: 50%;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\nexport const FilesToUpload = () => (\n  <CenterContent>\n    <TrackPageViews />\n    <H1 fontSize={[5, null, 6]}>\n      <Trans>Upload suppporting files</Trans>\n    </H1>\n    <P>\n      <Trans>\n        Do you have any documents, images, screenshots, or receipts?\n      </Trans>\n    </P>\n    <Container css={bottomBarContainer}>\n      <ButtonLink mb={[3, null, 5]} to=\"/uploadfiles\">\n        <Trans>Yes</Trans>\n      </ButtonLink>\n      <ButtonLink mb={[3, null, 5]} to=\"/contactinfoquestion\">\n        <Trans>No</Trans>\n      </ButtonLink>\n    </Container>\n  </CenterContent>\n)\n","import React from 'react'\nimport { Router } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport styled from '@emotion/styled'\nimport { PhaseBanner } from './components/phase-banner'\nimport { PageNotFound } from './PageNotFound'\nimport { Urgency } from './Urgency'\nimport { FileUploadPage } from './FileUploadPage'\nimport { AmountOfInfoPage } from './amountOfInfoPage'\nimport { HowToTellPolice } from './HowToTellPolice'\nimport { IdentityPage } from './identityPage'\nimport { Option1Page } from './Option1Page'\nimport { Option2Page } from './Option2Page'\nimport { Option3Page } from './Option3Page'\nimport { Suspectinfo } from './Suspectinfo'\nimport { DemoPage } from './DemoPage'\nimport { ScamInfoPage } from './ScamInfoPage'\nimport { MoneyLostPage } from './MoneyLostPage'\nimport { ConfirmationPage } from './ConfirmationPage'\nimport { SuspectInfoPage } from './SuspectInfoPage'\nimport { ContactInfoPage } from './ContactInfoPage'\nimport { LoseMoney } from './LoseMoney'\nimport { ThankYou } from './ThankYou'\nimport { Willbecontacted } from './Willbecontacted'\nimport { LandingPage } from './LandingPage'\nimport { FilesToUpload } from './FilesToUpload'\n\nconst Root = styled('div')`\n  margin: 20pt;\n`\nconst Screen = styled('div')`\n  margin-top: 30pt;\n`\nexport const Home = () => (\n  <Root>\n    <PhaseBanner phase={<Trans>ALPHA</Trans>} phaseColor=\"purple\">\n      <Trans>This site will change as we test ideas.</Trans>\n    </PhaseBanner>\n    <Screen>\n      <Router>\n        <PageNotFound default />\n        <DemoPage path=\"/demo\" />\n        <Option1Page path=\"/option1\" />\n        <Option2Page path=\"/option2\" />\n        <Option3Page path=\"/option3\" />\n        <HowToTellPolice path=\"/howtotell\" />\n        <Urgency path=\"/urgency\" />\n        <AmountOfInfoPage path=\"/amountofinfo\" />\n        <IdentityPage path=\"/identity\" />\n        <LandingPage path=\"/\" />\n        <ScamInfoPage path=\"/scaminfo\" />\n        <Suspectinfo path=\"/suspectinfoquestion\" />\n        <SuspectInfoPage path=\"/suspectinfo\" />\n        <LoseMoney path=\"/moneylostquestion\" />\n        <MoneyLostPage path=\"/moneylost\" />\n        <FilesToUpload path=\"/uploadfilesquestion\" />\n        <FileUploadPage path=\"/uploadfiles\" />\n        <Willbecontacted path=\"/contactinfoquestion\" />\n        <ContactInfoPage path=\"/contactinfo\" />\n        <ConfirmationPage path=\"/confirmation\" />\n        <ThankYou path=\"/thankyou\" />\n      </Router>\n    </Screen>\n  </Root>\n)\n","/* eslint-disable react/no-unescaped-entities */\nimport React from 'react'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { P } from './components/paragraph'\nimport { H1, H2 } from './components/header'\nimport { ButtonLink } from './components/link'\nimport { TrackPageViews } from './TrackPageViews'\n\nconst CenterContent = styled('div')`\n  max-width: 750px;\n  margin: auto;\n`\n\nexport const LandingPage = () => (\n  <CenterContent>\n    <TrackPageViews />\n    <H1 fontSize={[5, null, 6]}>\n      <Trans>Report a scam</Trans>\n    </H1>\n    <P>\n      <Trans>\n        Tell the RCMP's National Cybercrime Coordination Unit (NC3) about a\n        scam.\n      </Trans>\n    </P>\n    <P>\n      <Trans>\n        NC3 will analyze your report and work with police across Canada to stop\n        this from happening again.\n      </Trans>\n\n    </P>\n    <H2 fontSize={[4, null, 5]}>\n      <Trans>You will be asked to:</Trans>\n    </H2>\n    <P>\n      <ul fontSize={[8, null, 8]}>\n        <li>\n          <Trans>Describe what happened</Trans>\n        </li>\n        <li>\n          <Trans>Specify whether money was lost</Trans>\n        </li>\n        <li>\n          <Trans>Add scammer details</Trans>\n        </li>\n        <li>\n          <Trans>Attach supporting files</Trans>\n        </li>\n      </ul>\n    </P>\n    <P>\n      <ButtonLink color=\"black\" mb={[3, null, 5]} to=\"scaminfo\">\n        <Trans>Report now</Trans>\n      </ButtonLink>\n    </P>\n  </CenterContent>\n)\n","/**@jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { H1, H2, H3 } from './components/header'\nimport { P } from './components/paragraph'\nimport { A } from './components/link'\nimport { TrackPageViews } from './TrackPageViews'\n\nconst CenterContent = styled('div')`\n  max-width: 750px;\n  margin: auto;\n`\nexport const ThankYou = () => (\n  <CenterContent>\n    <TrackPageViews />\n    <H1 fontSize={[5, null, 6]}>\n      <Trans>Thank you for reporting</Trans>\n    </H1>\n\n    <P>\n      <Trans>Your report has been submitted</Trans>\n    </P>\n    <H2>\n      <Trans>What happens next?</Trans>\n    </H2>\n    <P>\n      <Trans>\n        If your complaint becomes an investigation, an officer will be in touch\n      </Trans>\n    </P>\n    <H3>\n      <Trans>Helpful Links</Trans>\n    </H3>\n    <P fontSize={[4, null, 5]}>\n      <Trans>\n        <strong>RCMP has received your report.</strong>\n      </Trans>\n    </P>\n    <P>\n      <Trans>\n        An analyst will assess the information, combine it with other reports,\n        and decide whether the report can become a police investigation.\n      </Trans>\n    </P>\n    <P>\n      <Trans>\n        If your report becomes an investigation, a local police officer may be\n        in touch to get more information.\n      </Trans>\n    </P>\n    <H2 fontSize={[4, null, 5]}>\n      <Trans>You may also want to:</Trans>\n    </H2>\n    <P>\n      <ul>\n        <li>Report to the service provider where the scam took place.</li>\n        <br></br>\n        <li>Report to your financial institution if you lost money.</li>\n        <br></br>\n        <li>\n          Report to{' '}\n          <A href=\"https://www.consumer.equifax.ca/personal/\">Equifax</A> and{' '}\n          <A href=\"https://www.transunion.ca/\">TransUnion</A> if your identity\n          was stolen.\n        </li>\n      </ul>\n    </P>\n  </CenterContent>\n)\n","/**@jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from './components/header'\nimport { ButtonLink } from './components/link'\nimport { TrackPageViews } from './TrackPageViews'\nimport { Container } from './components/container'\n\nconst CenterContent = styled('div')`\n  max-width: 750px;\n  margin: AudioTrack;\n`\n\nconst bottomBarContainer = css`\n  display: flex;\n  width: 50%;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\nexport const Willbecontacted = () => (\n  <CenterContent>\n    <TrackPageViews />\n    <H1 fontSize={[5, null, 6]}>\n      <Trans>\n        If the police need more information, would you like to be contacted\n      </Trans>\n    </H1>\n\n    <Container css={bottomBarContainer}>\n      <ButtonLink mb={[3, null, 5]} to=\"/contactinfo\">\n        <Trans>Yes</Trans>\n      </ButtonLink>\n      <ButtonLink mb={[3, null, 5]} to=\"/confirmation\">\n        <Trans>No</Trans>\n      </ButtonLink>\n    </Container>\n  </CenterContent>\n)\n","/** @jsx jsx */\nimport PropTypes from 'prop-types'\nimport DatePicker, { registerLocale } from 'react-datepicker'\nimport { css, jsx } from '@emotion/core'\nimport fr from './locale/fr'\nimport en from './locale/en-CA'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nregisterLocale('fr', fr)\nregisterLocale('en', en)\n\nexport const DateSelector = ({ value, onChange, locale, ...props }) => {\n  return (\n    <DatePicker\n      css={css`\n        font-size: 18px;\n      `}\n      locale={locale}\n      selected={value}\n      onChange={onChange}\n      {...props}\n    />\n  )\n}\n\nDateSelector.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  locale: PropTypes.string,\n}\n","export default function buildFormatLongFn(args) {\n  return function(dirtyOptions) {\n    var options = dirtyOptions || {}\n    var width = options.width ? String(options.width) : args.defaultWidth\n    var format = args.formats[width] || args.formats[args.defaultWidth]\n    return format\n  }\n}\n","export default function buildLocalizeFn(args) {\n  return function(dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {}\n\n    var context = options.context ? String(options.context) : 'standalone'\n\n    var valuesArray\n    if (context === 'formatting' && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth\n      const width = options.width ? String(options.width) : defaultWidth\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth]\n    } else {\n      const defaultWidth = args.defaultWidth\n      const width = options.width ? String(options.width) : args.defaultWidth\n      valuesArray = args.values[width] || args.values[defaultWidth]\n    }\n    var index = args.argumentCallback\n      ? args.argumentCallback(dirtyIndex)\n      : dirtyIndex\n    return valuesArray[index]\n  }\n}\n","export default function buildMatchFn(args) {\n  return function(dirtyString, dirtyOptions) {\n    var string = String(dirtyString)\n    var options = dirtyOptions || {}\n    var width = options.width\n\n    var matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth]\n    var matchResult = string.match(matchPattern)\n\n    if (!matchResult) {\n      return null\n    }\n    var matchedString = matchResult[0]\n\n    var parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth]\n\n    var value\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = parsePatterns.findIndex(function(pattern) {\n        return pattern.test(string)\n      })\n    } else {\n      value = findKey(parsePatterns, function(pattern) {\n        return pattern.test(string)\n      })\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value\n    value = options.valueCallback ? options.valueCallback(value) : value\n\n    return {\n      value: value,\n      rest: string.slice(matchedString.length),\n    }\n  }\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key\n    }\n  }\n}\n","export default function buildMatchPatternFn(args) {\n  return function(dirtyString, dirtyOptions) {\n    var string = String(dirtyString)\n    var options = dirtyOptions || {}\n\n    var matchResult = string.match(args.matchPattern)\n    if (!matchResult) {\n      return null\n    }\n    var matchedString = matchResult[0]\n\n    var parseResult = string.match(args.parsePattern)\n    if (!parseResult) {\n      return null\n    }\n    var value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0]\n    value = options.valueCallback ? options.valueCallback(value) : value\n\n    return {\n      value: value,\n      rest: string.slice(matchedString.length),\n    }\n  }\n}\n","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds',\n  },\n\n  xSeconds: {\n    one: 'a second',\n    other: '{{count}} seconds',\n  },\n\n  halfAMinute: 'half a minute',\n\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes',\n  },\n\n  xMinutes: {\n    one: 'a minute',\n    other: '{{count}} minutes',\n  },\n\n  aboutXHours: {\n    one: 'about an hour',\n    other: 'about {{count}} hours',\n  },\n\n  xHours: {\n    one: 'an hour',\n    other: '{{count}} hours',\n  },\n\n  xDays: {\n    one: 'a day',\n    other: '{{count}} days',\n  },\n\n  aboutXMonths: {\n    one: 'about a month',\n    other: 'about {{count}} months',\n  },\n\n  xMonths: {\n    one: 'a month',\n    other: '{{count}} months',\n  },\n\n  aboutXYears: {\n    one: 'about a year',\n    other: 'about {{count}} years',\n  },\n\n  xYears: {\n    one: 'a year',\n    other: '{{count}} years',\n  },\n\n  overXYears: {\n    one: 'over a year',\n    other: 'over {{count}} years',\n  },\n\n  almostXYears: {\n    one: 'almost a year',\n    other: 'almost {{count}} years',\n  },\n}\n\nexport default function formatDistance(token, count, options) {\n  options = options || {}\n\n  var result\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token]\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count)\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result\n    } else {\n      return result + ' ago'\n    }\n  }\n\n  return result\n}\n","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js'\n\nvar dateFormats = {\n  full: 'EEEE, MMMM do, yyyy',\n  long: 'MMMM do, yyyy',\n  medium: 'MMM d, yyyy',\n  short: 'yyyy-MM-dd',\n}\n\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a',\n}\n\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}',\n}\n\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full',\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full',\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full',\n  }),\n}\n\nexport default formatLong\n","import formatDistance from './_lib/formatDistance/index.js'\nimport formatLong from './_lib/formatLong/index.js'\nimport formatRelative from '../en-US/_lib/formatRelative/index.js'\nimport localize from '../en-US/_lib/localize/index.js'\nimport match from '../en-US/_lib/match/index.js'\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (Canada).\n * @language English\n * @iso-639-2 eng\n * @author Mark Owsiak [@markowsiak]{@link https://github.com/markowsiak}\n * @author Marco Imperatore [@mimperatore]{@link https://github.com/mimperatore}\n */\nvar locale = {\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n}\n\nexport default locale\n","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P',\n}\n\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token]\n}\n","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js'\n\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini'],\n}\n\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'],\n}\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ],\n  wide: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ],\n}\n\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ],\n}\n\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night',\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night',\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night',\n  },\n}\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night',\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night',\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night',\n  },\n}\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber)\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide',\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function(quarter) {\n      return Number(quarter) - 1\n    },\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide',\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide',\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide',\n  }),\n}\n\nexport default localize\n","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js'\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js'\n\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i\nvar parseOrdinalNumberPattern = /\\d+/i\n\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n}\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n}\n\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n}\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n}\n\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n}\nvar parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n}\n\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n}\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n}\n\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n}\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n}\n\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function(value) {\n      return parseInt(value, 10)\n    },\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any',\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function(index) {\n      return index + 1\n    },\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any',\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any',\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any',\n  }),\n}\n\nexport default match\n","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'moins d’une seconde',\n    other: 'moins de {{count}} secondes',\n  },\n\n  xSeconds: {\n    one: '1 seconde',\n    other: '{{count}} secondes',\n  },\n\n  halfAMinute: '30 secondes',\n\n  lessThanXMinutes: {\n    one: 'moins d’une minute',\n    other: 'moins de {{count}} minutes',\n  },\n\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes',\n  },\n\n  aboutXHours: {\n    one: 'environ 1 heure',\n    other: 'environ {{count}} heures',\n  },\n\n  xHours: {\n    one: '1 heure',\n    other: '{{count}} heures',\n  },\n\n  xDays: {\n    one: '1 jour',\n    other: '{{count}} jours',\n  },\n\n  aboutXMonths: {\n    one: 'environ 1 mois',\n    other: 'environ {{count}} mois',\n  },\n\n  xMonths: {\n    one: '1 mois',\n    other: '{{count}} mois',\n  },\n\n  aboutXYears: {\n    one: 'environ 1 an',\n    other: 'environ {{count}} ans',\n  },\n\n  xYears: {\n    one: '1 an',\n    other: '{{count}} ans',\n  },\n\n  overXYears: {\n    one: 'plus d’un an',\n    other: 'plus de {{count}} ans',\n  },\n\n  almostXYears: {\n    one: 'presqu’un an',\n    other: 'presque {{count}} ans',\n  },\n}\n\nexport default function formatDistance(token, count, options) {\n  options = options || {}\n\n  var result\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token]\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count)\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'dans ' + result\n    } else {\n      return 'il y a ' + result\n    }\n  }\n\n  return result\n}\n","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js'\n\nvar dateFormats = {\n  full: 'EEEE d MMMM y',\n  long: 'd MMMM y',\n  medium: 'd MMM y',\n  short: 'dd/MM/y',\n}\n\nvar timeFormats = {\n  full: 'HH:mm:ss zzzz',\n  long: 'HH:mm:ss z',\n  medium: 'HH:mm:ss',\n  short: 'HH:mm',\n}\n\nvar dateTimeFormats = {\n  full: \"{{date}} 'à' {{time}}\",\n  long: \"{{date}} 'à' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}',\n}\n\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full',\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full',\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full',\n  }),\n}\n\nexport default formatLong\n","var formatRelativeLocale = {\n  lastWeek: \"eeee 'dernier à' p\",\n  yesterday: \"'hier à' p\",\n  today: \"'aujourd’hui à' p\",\n  tomorrow: \"'demain à' p'\",\n  nextWeek: \"eeee 'prochain à' p\",\n  other: 'P',\n}\n\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token]\n}\n","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js'\n\nvar eraValues = {\n  narrow: ['av. J.-C', 'ap. J.-C'],\n  abbreviated: ['av. J.-C', 'ap. J.-C'],\n  wide: ['avant Jésus-Christ', 'après Jésus-Christ'],\n}\n\nvar quarterValues = {\n  narrow: ['T1', 'T2', 'T3', 'T4'],\n  abbreviated: ['1er trim.', '2ème trim.', '3ème trim.', '4ème trim.'],\n  wide: ['1er trimestre', '2ème trimestre', '3ème trimestre', '4ème trimestre'],\n}\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: [\n    'janv.',\n    'févr.',\n    'mars',\n    'avr.',\n    'mai',\n    'juin',\n    'juil.',\n    'août',\n    'sept.',\n    'oct.',\n    'nov.',\n    'déc.',\n  ],\n  wide: [\n    'janvier',\n    'février',\n    'mars',\n    'avril',\n    'mai',\n    'juin',\n    'juillet',\n    'août',\n    'septembre',\n    'octobre',\n    'novembre',\n    'décembre',\n  ],\n}\n\nvar dayValues = {\n  narrow: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],\n  short: ['di', 'lu', 'ma', 'me', 'je', 've', 'sa'],\n  abbreviated: ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],\n  wide: [\n    'dimanche',\n    'lundi',\n    'mardi',\n    'mercredi',\n    'jeudi',\n    'vendredi',\n    'samedi',\n  ],\n}\n\nvar dayPeriodValues = {\n  narrow: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'minuit',\n    noon: 'midi',\n    morning: 'mat.',\n    afternoon: 'ap.m.',\n    evening: 'soir',\n    night: 'mat.',\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'minuit',\n    noon: 'midi',\n    morning: 'matin',\n    afternoon: 'après-midi',\n    evening: 'soir',\n    night: 'matin',\n  },\n  wide: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'minuit',\n    noon: 'midi',\n    morning: 'du matin',\n    afternoon: 'de l’après-midi',\n    evening: 'du soir',\n    night: 'du matin',\n  },\n}\n\nfunction ordinalNumber(dirtyNumber, dirtyOptions) {\n  var number = Number(dirtyNumber)\n\n  var options = dirtyOptions || {}\n  var unit = String(options.unit)\n  var suffix\n\n  if (number === 0) {\n    return number\n  }\n\n  if (unit === 'year' || unit === 'hour' || unit === 'week') {\n    if (number === 1) {\n      suffix = 'ère'\n    } else {\n      suffix = 'ème'\n    }\n  } else {\n    if (number === 1) {\n      suffix = 'er'\n    } else {\n      suffix = 'ème'\n    }\n  }\n\n  return number + suffix\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide',\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function(quarter) {\n      return Number(quarter) - 1\n    },\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide',\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide',\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n  }),\n}\n\nexport default localize\n","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js'\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js'\n\nvar matchOrdinalNumberPattern = /^(\\d+)(ième|ère|ème|er|e)?/i\nvar parseOrdinalNumberPattern = /\\d+/i\n\nvar matchEraPatterns = {\n  narrow: /^(av\\.J\\.C|ap\\.J\\.C|ap\\.J\\.-C)/i,\n  abbreviated: /^(av\\.J\\.-C|av\\.J-C|apr\\.J\\.-C|apr\\.J-C|ap\\.J-C)/i,\n  wide: /^(avant Jésus-Christ|après Jésus-Christ)/i,\n}\nvar parseEraPatterns = {\n  any: [/^av/i, /^ap/i],\n}\n\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^t[1234]/i,\n  wide: /^[1234](er|ème|e)? trimestre/i,\n}\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n}\n\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(janv|févr|mars|avr|mai|juin|juill|juil|août|sept|oct|nov|déc)\\.?/i,\n  wide: /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,\n}\nvar parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^av/i,\n    /^ma/i,\n    /^jui/i,\n    /^juil/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n}\n\nvar matchDayPatterns = {\n  narrow: /^[lmjvsd]/i,\n  short: /^(di|lu|ma|me|je|ve|sa)/i,\n  abbreviated: /^(dim|lun|mar|mer|jeu|ven|sam)\\.?/i,\n  wide: /^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i,\n}\nvar parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],\n  any: [/^di/i, /^lu/i, /^ma/i, /^me/i, /^je/i, /^ve/i, /^sa/i],\n}\n\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|minuit|midi|mat\\.?|ap\\.?m\\.?|soir|nuit)/i,\n  any: /^([ap]\\.?\\s?m\\.?|du matin|de l'après[-\\s]midi|du soir|de la nuit)/i,\n}\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^min/i,\n    noon: /^mid/i,\n    morning: /mat/i,\n    afternoon: /ap/i,\n    evening: /soir/i,\n    night: /nuit/i,\n  },\n}\n\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function(value) {\n      return parseInt(value, 10)\n    },\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any',\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function(index) {\n      return index + 1\n    },\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any',\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any',\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any',\n  }),\n}\n\nexport default match\n","import formatDistance from './_lib/formatDistance/index.js'\nimport formatLong from './_lib/formatLong/index.js'\nimport formatRelative from './_lib/formatRelative/index.js'\nimport localize from './_lib/localize/index.js'\nimport match from './_lib/match/index.js'\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary French locale.\n * @language French\n * @iso-639-2 fra\n * @author Jean Dupouy [@izeau]{@link https://github.com/izeau}\n * @author François B [@fbonzon]{@link https://github.com/fbonzon}\n */\n\nvar locale = {\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n}\n\nexport default locale\n","/** @jsx jsx */\nimport PropTypes from 'prop-types'\nimport { navigate } from '@reach/router'\nimport styled from '@emotion/styled'\nimport { css, jsx } from '@emotion/core'\nimport { Trans } from '@lingui/macro'\nimport { I18n, i18nMark } from '@lingui/react'\nimport { Form, Field } from 'react-final-form'\nimport { Container } from '../components/container'\nimport { TextArea } from '../components/text-area'\nimport { Button } from '../components/button'\nimport { ButtonLink } from '../components/button-link'\nimport { RadioButton } from '../components/radio-button'\nimport { Text } from '../components/text'\nimport { ApolloConsumer } from 'react-apollo'\nimport { finalFormAdapter } from '../utils/finalFormAdapter'\n\nconst TextAreaAdapter = finalFormAdapter(TextArea)\nconst RadioButtonAdapter = finalFormAdapter(RadioButton)\n\nconst CheckboxStyle = styled('label')`\n  margin-bottom: 8pt;\n  font-size: 1.25rem;\n  display: block;\n`\n\nconst victimOptions = [i18nMark('yes'), i18nMark('no')]\n\nconst validate = () => {\n  return {}\n}\n\nexport const ContactInfoForm = ({ onSubmit }) => (\n  <ApolloConsumer>\n    {client => (\n      <Form\n        onSubmit={data => onSubmit(client, data)}\n        validate={validate}\n        render={({ handleSubmit }) => (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"userIsTheVictim\">\n              <Text>\n                <Trans>Are you the victim?</Trans>\n              </Text>\n            </label>\n            <I18n>\n              {({ i18n }) =>\n                victimOptions.map(key => {\n                  return (\n                    <CheckboxStyle key={key}>\n                      <Field\n                        name=\"userIsTheVictim\"\n                        id=\"userIsTheVictim\"\n                        component={RadioButtonAdapter}\n                        type=\"radio\"\n                        value={key}\n                        label={i18n._(key)}\n                      />\n                    </CheckboxStyle>\n                  )\n                })\n              }\n            </I18n>\n\n            <label htmlFor=\"contactInfoName\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>Name</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"contactInfoName\"\n                id=\"contactInfoName\"\n                component={TextAreaAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"contactInfoEmail\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>Email address</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"contactInfoEmail\"\n                id=\"contactInfoEmail\"\n                component={TextAreaAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"contactInfoPhone\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>Phone number</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"contactInfoPhone\"\n                id=\"contactInfoPhone\"\n                component={TextAreaAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <Container\n              width=\"305px\"\n              marginTop={[3, null, 4]}\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n              `}\n            >\n              <Button type=\"submit\" onClick={() => navigate('/confirmation')}>\n                <Trans>Next</Trans>\n              </Button>\n            </Container>\n\n            <Container\n              width=\"300px\"\n              marginTop={[2, null, 3]}\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n              `}\n            >\n              <ButtonLink type=\"button\" color=\"black\">\n                <Trans>Cancel Report</Trans>\n              </ButtonLink>\n\n              <ButtonLink type=\"button\" color=\"black\" marginTop={[1, null, 1]}>\n                <Trans>Save Report</Trans>\n              </ButtonLink>\n            </Container>\n          </form>\n        )}\n      />\n    )}\n  </ApolloConsumer>\n)\n\nContactInfoForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n","/** @jsx jsx */\nimport React from 'react'\n\nimport PropTypes from 'prop-types'\nimport { css, jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { I18n, i18nMark } from '@lingui/react'\nimport { Form, Field } from 'react-final-form'\nimport { Container } from '../components/container'\nimport { Checkbox } from '../components/checkbox'\nimport { TextArea } from '../components/text-area'\nimport { Button } from '../components/button'\nimport { ButtonLink } from '../components/button-link'\nimport { Text } from '../components/text'\nimport { ApolloConsumer } from 'react-apollo'\nimport { finalFormAdapter } from '../utils/finalFormAdapter'\n\nconst CheckboxAdapter = finalFormAdapter(Checkbox)\nconst TextAreaAdapter = finalFormAdapter(TextArea)\n\nconst methodsOfPayment = [\n  i18nMark('credit card'),\n  i18nMark('cash'),\n  i18nMark('gift card'),\n  i18nMark('other'),\n]\n\nconst CheckboxStyle = styled('label')`\n  margin-bottom: 8pt;\n`\n\nconst validate = () => {\n  return {}\n}\n\nexport const MoneyLostForm = ({ onSubmit }) => (\n  <ApolloConsumer>\n    {client => (\n      <Form\n        onSubmit={data => onSubmit(client, data)}\n        validate={validate}\n        render={({ handleSubmit, values }) => (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"lostAmount\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>How much money was lost?</Trans>\n              </Text>\n              <Text>\n                <br></br>\n                <Trans>Amount</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"lostAmount\"\n                id=\"lostAmount\"\n                component={TextAreaAdapter}\n                height=\"25px\"\n                width=\"200px\"\n              />\n            </div>\n\n            <label htmlFor=\"lostCurrency\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>Currency</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"lostCurrency\"\n                id=\"lostCurrency\"\n                component={TextAreaAdapter}\n                height=\"25px\"\n                width=\"200px\"\n              />\n            </div>\n\n            <label htmlFor=\"lostMethodsOfPayment\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>What method of payment was used?</Trans>\n              </Text>\n              <br></br>\n            </label>\n            <div>\n              <I18n>\n                {({ i18n }) =>\n                  methodsOfPayment.map(key => {\n                    return (\n                      <CheckboxStyle key={key}>\n                        <Field\n                          name=\"lostMethodsOfPayment\"\n                          id=\"lostMethodsOfPayment\"\n                          component={CheckboxAdapter}\n                          type=\"checkbox\"\n                          value={key}\n                          label={i18n._(key)}\n                        />\n                      </CheckboxStyle>\n                    )\n                  })\n                }\n              </I18n>\n            </div>\n\n            {values.lostMethodsOfPayment &&\n            values.lostMethodsOfPayment.indexOf('other') > -1 ? (\n              <React.Fragment>\n                <label htmlFor=\"lostOtherMethodOfPayment\">\n                  <Text>\n                    <Trans>Other</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <Field\n                    name=\"lostOtherMethodOfPayment\"\n                    id=\"lostOtherMethodOfPayment\"\n                    component={TextAreaAdapter}\n                    height=\"25px\"\n                    width=\"200px\"\n                  />\n                </div>\n              </React.Fragment>\n            ) : (\n              ''\n            )}\n\n            <Container\n              width=\"305px\"\n              marginTop={[3, null, 4]}\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n              `}\n            >\n              <Button type=\"submit\">\n                <Trans>Next</Trans>\n              </Button>\n            </Container>\n\n            <Container\n              width=\"300px\"\n              marginTop={[2, null, 3]}\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n              `}\n            >\n              <ButtonLink type=\"button\" color=\"black\">\n                <Trans>Cancel Report</Trans>\n              </ButtonLink>\n            </Container>\n          </form>\n        )}\n      />\n    )}\n  </ApolloConsumer>\n)\n\nMoneyLostForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n","/** @jsx jsx */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { css, jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { ApolloConsumer } from 'react-apollo'\nimport { I18n, i18nMark } from '@lingui/react'\nimport { Trans } from '@lingui/macro'\nimport { Form, Field } from 'react-final-form'\nimport { Checkbox } from '../components/checkbox'\nimport { Container } from '../components/container'\nimport { TextArea } from '../components/text-area'\nimport { Button } from '../components/button'\nimport { ButtonLink } from '../components/button-link'\nimport { Text } from '../components/text'\nimport { DateSelector } from '../components/date-picker'\nimport { finalFormAdapter } from '../utils/finalFormAdapter'\n\nconst CheckboxAdapter = finalFormAdapter(Checkbox)\nconst TextAreaAdapter = finalFormAdapter(TextArea)\nconst DateSelectorAdapter = finalFormAdapter(DateSelector)\n\nconst howContacted = [\n  i18nMark('phone'),\n  i18nMark('email'),\n  i18nMark('website link'),\n  i18nMark('other'),\n]\n\nconst CheckboxStyle = styled('label')`\n  margin-bottom: 8pt;\n`\n\nconst validate = () => {\n  return {}\n}\nexport class ScamInfoForm extends Component {\n  state = {\n    startDate: new Date(),\n  }\n\n  handleChange = date => {\n    this.setState({\n      startDate: date,\n    })\n  }\n\n  localOnSubmit = (client, data) => {\n    const { onSubmit } = this.props\n    // data.whenWereYouContacted = `${this.state.startDate}`.substr(0, 15)\n\n    data.whenWereYouContacted = this.state.startDate.toISOString().slice(0, 10)\n\n    onSubmit(client, data)\n  }\n\n  render() {\n    return (\n      <ApolloConsumer>\n        {client => (\n          <Form\n            onSubmit={data => this.localOnSubmit(client, data)}\n            validate={validate}\n            render={({\n              handleSubmit,\n              // reset,\n              // submitting,\n              // pristine,\n              values,\n              // invalid,\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <label htmlFor=\"scamDetails\">\n                  <Text marginTop={[5, null, 6]}>\n                    <Trans>What happened?</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <Field\n                    name=\"scamDetails\"\n                    id=\"scamDetails\"\n                    component={TextAreaAdapter}\n                    height=\"100px\"\n                    width=\"300px\"\n                  />\n                </div>\n\n                <label htmlFor=\"whenWereYouContacted\">\n                  <Text marginTop={[5, null, 6]}>\n                    <Trans>When did it happen?</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <I18n>\n                    {({ i18n }) => (\n                      <Field\n                        name=\"whenWereYouContacted\"\n                        id=\"whenWereYouContacted\"\n                        component={DateSelectorAdapter}\n                        locale={i18n._('en')}\n                        selected={this.state.startDate}\n                        onChange={this.handleChange}\n                        height=\"25px\"\n                        width=\"300px\"\n                      />\n                    )}\n                  </I18n>\n                </div>\n\n                <label htmlFor=\"howWereYouContacted\">\n                  <Text marginTop={[5, null, 6]}>\n                    <Trans>How did it start?</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <I18n>\n                    {({ i18n }) =>\n                      howContacted.map(key => {\n                        return (\n                          <CheckboxStyle key={key}>\n                            <Field\n                              name=\"howWereYouContacted\"\n                              id=\"howWereYouContacted\"\n                              component={CheckboxAdapter}\n                              type=\"checkbox\"\n                              value={key}\n                              label={i18n._(key)}\n                            />\n                          </CheckboxStyle>\n                        )\n                      })\n                    }\n                  </I18n>\n                </div>\n\n                {values.howWereYouContacted &&\n                values.howWereYouContacted.indexOf('other') > -1 ? (\n                  <React.Fragment>\n                    <label htmlFor=\"otherMethodOfContact\">\n                      <Text>\n                        <Trans>Other channel</Trans>\n                      </Text>\n                    </label>\n                    <div>\n                      <Field\n                        name=\"otherMethodOfContact\"\n                        id=\"otherMethodOfContact\"\n                        component={TextAreaAdapter}\n                        height=\"50px\"\n                        width=\"300px\"\n                      />\n                    </div>\n                  </React.Fragment>\n                ) : (\n                  ''\n                )}\n\n                <Text>\n                  {JSON.stringify(validate(values)) === JSON.stringify({}) ? (\n                    ''\n                  ) : (\n                    <Text>\n                      <Trans>Please fill out all fields</Trans>\n                    </Text>\n                  )}\n                </Text>\n                <Container\n                  width=\"305px\"\n                  marginTop={[1, null, 1]}\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: space-between;\n                  `}\n                >\n                  <Button type=\"submit\">\n                    <Trans>Continue</Trans>\n                  </Button>\n                </Container>\n\n                <Container\n                  width=\"300px\"\n                  marginTop={[1, null, 1]}\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: space-between;\n                  `}\n                >\n                  <ButtonLink type=\"button\" color=\"black\">\n                    <Trans>Cancel Report</Trans>\n                  </ButtonLink>\n                </Container>\n              </form>\n            )}\n          />\n        )}\n      </ApolloConsumer>\n    )\n  }\n}\n\nScamInfoForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n","/** @jsx jsx */\nimport React from 'react'\n\nimport PropTypes from 'prop-types'\nimport { css, jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { I18n, i18nMark } from '@lingui/react'\nimport { Form, Field } from 'react-final-form'\nimport { Checkbox } from '../components/checkbox'\nimport { TextArea } from '../components/text-area'\nimport { Button } from '../components/button'\nimport { ButtonLink } from '../components/button-link'\nimport { Text } from '../components/text'\nimport { ApolloConsumer } from 'react-apollo'\nimport { finalFormAdapter } from '../utils/finalFormAdapter'\nimport { Container } from '../components/container'\n\nconst CheckboxAdapter = finalFormAdapter(Checkbox)\nconst TextAreaAdapter = finalFormAdapter(TextArea)\n\nconst languages = [\n  i18nMark('English'),\n  i18nMark('French'),\n  i18nMark('Other language'),\n]\n\nconst CheckboxStyle = styled('label')`\n  margin-bottom: 8pt;\n`\n\nconst validate = () => {\n  return {}\n}\n\nexport const SuspectInfoForm = ({ onSubmit }) => (\n  <ApolloConsumer>\n    {client => (\n      <Form\n        onSubmit={data => onSubmit(client, data)}\n        validate={validate}\n        render={({ handleSubmit, values }) => (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"suspectName\">\n              <Text>\n                <Trans>Name</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"suspectName\"\n                id=\"suspectName\"\n                component={TextAreaAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"suspectEmail\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>Email address</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"suspectEmail\"\n                id=\"suspectEmail\"\n                component={TextAreaAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"suspectPhone\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>Phone number</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"suspectPhone\"\n                id=\"suspectPhone\"\n                component={TextAreaAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"suspectWebsite\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>Website link</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"suspectWebsite\"\n                id=\"suspectWebsite\"\n                component={TextAreaAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"suspectAddress\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>Address</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"suspectAddress\"\n                id=\"suspectAddress\"\n                component={TextAreaAdapter}\n                height=\"100px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"suspectIP\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>IP address</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"suspectIP\"\n                id=\"suspectIP\"\n                component={TextAreaAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"suspectLanguage\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>Language</Trans>\n              </Text>\n            </label>\n            <div>\n              <I18n>\n                {({ i18n }) =>\n                  languages.map(key => {\n                    return (\n                      <CheckboxStyle key={key}>\n                        <Field\n                          name=\"suspectLanguage\"\n                          id=\"suspectLanguage\"\n                          component={CheckboxAdapter}\n                          type=\"checkbox\"\n                          value={key}\n                          label={i18n._(key)}\n                        />\n                      </CheckboxStyle>\n                    )\n                  })\n                }\n              </I18n>\n            </div>\n\n            {values.suspectLanguage &&\n            values.suspectLanguage.indexOf('other') > -1 ? (\n              <React.Fragment>\n                <label htmlFor=\"otherSuspectLanguage\">\n                  <Text>\n                    <Trans>Other language</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <Field\n                    name=\"otherSuspectLanguage\"\n                    id=\"otherSuspectLanguage\"\n                    component={TextAreaAdapter}\n                    height=\"25px\"\n                    width=\"300px\"\n                  />\n                </div>\n              </React.Fragment>\n            ) : (\n              ''\n            )}\n\n            <Container\n              width=\"305px\"\n              marginTop={[3, null, 4]}\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n              `}\n            >\n              <Button type=\"submit\">\n                <Trans>Next</Trans>\n              </Button>\n            </Container>\n\n            <Container\n              width=\"300px\"\n              marginTop={[2, null, 3]}\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n              `}\n            >\n              <ButtonLink type=\"button\" color=\"black\">\n                <Trans>Cancel Report</Trans>\n              </ButtonLink>\n            </Container>\n          </form>\n        )}\n      />\n    )}\n  </ApolloConsumer>\n)\n\nSuspectInfoForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport { HttpLink } from 'apollo-link-http'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport fetch from 'isomorphic-unfetch'\nimport { ApolloProvider, renderToStringWithData } from 'react-apollo'\nimport { LanguageSwitching } from './LanguageSwitching'\nimport { HelmetProvider } from 'react-helmet-async'\nimport express from 'express'\nimport requestLanguage from 'express-request-language'\nimport { ServerLocation } from '@reach/router'\nimport App from './App'\n\nlet assets, publicDir\n\nconst {\n  RAZZLE_SERVER_SIDE_API_URI, // Razzle strips env vars that are not prefixed\n} = process.env\n\nif (process.env.NODE_ENV === 'test') {\n  assets = { client: { css: {} } }\n  publicDir = 'public'\n} else {\n  assets = require(process.env.RAZZLE_ASSETS_MANIFEST)\n  publicDir = process.env.RAZZLE_PUBLIC_DIR\n}\n\nconst server = express()\nserver\n  .disable('x-powered-by')\n  .use(express.static(publicDir))\n  .use(\n    requestLanguage({\n      languages: ['en', 'fr'],\n    }),\n  )\n  .get('/assets', (req, res) => {\n    res.status(200).send(JSON.stringify(assets))\n  })\n  .get('/monitoring/alive', (req, res) => {\n    res.status(200).send('yes')\n  })\n  .use('/public', express.static(__dirname + '/public'))\n  .use('/static', express.static('static'))\n  .get('/monitoring/ready', (req, res) => {\n    res.status(200).send('yes')\n  })\n  .get('/*', async (req, res) => {\n    const cache = new InMemoryCache()\n\n    // Add defaults for form fields\n    cache.writeData({\n      data: {\n        language: req.language,\n\n        howWereYouContacted: [],\n        otherMethodOfContact: '',\n        whenWereYouContacted: '',\n        scamDetails: '',\n\n        lostAmount: '',\n        lostCurrency: '',\n        lostMethodsOfPayment: [],\n        lostOtherMethodOfPayment: '',\n\n        suspectName: '',\n        suspectAddress: '',\n        suspectLanguage: [],\n        otherSuspectLanguage: '',\n        suspectPhone: '',\n        suspectEmail: '',\n        suspectWebsite: '',\n        suspectIP: '',\n\n        files: [],\n\n        userIsTheVictim: '',\n        contactInfoName: '',\n        contactInfoEmail: '',\n        contactInfoPhone: '',\n      },\n    })\n\n    const client = new ApolloClient({\n      ssrMode: true,\n      link: new HttpLink({\n        uri: RAZZLE_SERVER_SIDE_API_URI,\n        fetch,\n      }),\n      cache,\n      resolvers: {},\n    })\n\n    const helmetContext = {}\n\n    let markup\n    try {\n      markup = await renderToStringWithData(\n        <HelmetProvider context={helmetContext}>\n          <ApolloProvider client={client}>\n            <ServerLocation url={req.url}>\n              <LanguageSwitching>\n                <App />\n              </LanguageSwitching>\n            </ServerLocation>\n          </ApolloProvider>\n        </HelmetProvider>,\n      )\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error('Data fetching during SSR Failed:', e)\n    }\n\n    const { helmet } = helmetContext\n\n    res\n      .set({ 'Content-Language': req.language })\n      .status(200)\n      .send(\n        `<!DOCTYPE html>\n      <html ${helmet.htmlAttributes.toString()}>\n        <head>\n          ${helmet.title.toString()} ${helmet.meta.toString()}\n          ${helmet.link.toString()}\n          ${\n            assets.client.css\n              ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">`\n              : ''\n          }\n          ${\n            process.env.NODE_ENV === 'production'\n              ? `<script src=\"${assets.client.js}\" defer></script>`\n              : `<script src=\"${assets.client.js}\" defer crossorigin></script>`\n          }\n        </head>\n        <body ${helmet.bodyAttributes.toString()}>\n          <div id=\"root\">${markup}</div>\n        </body>\n      </html>`,\n      )\n  })\n\nexport default server\n"],"mappings":"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;;;;;;;;;;;;ACbA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAGA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAdA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AANA;AAUA;AAEA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/CA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AAFA;AAIA;AACA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AA/DA;AAqEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1FA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAXA;AAiBA;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAEA;AAFA;AANA;AAYA;;;;;;;;;;;;AC3BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAVA;AAUA;AACA;AACA;AAcA;AAhBA;AAgCA;AACA;AACA;AACA;AACA;AAJA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AArBA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AArBA;AACA;AAgCA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAJA;AA1BA;AAkCA;;;;;;;;;;;;AC/LA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAcA;AAfA;AA+BA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAxCA;AAgDA;;;;;;;;;;;;ACxIA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AA/DA;AAqEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1FA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAXA;AAiBA;;;;;;;;;;;;ACxCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAcA;AAhBA;AAgCA;AACA;AACA;AACA;AACA;AAJA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AArBA;AACA;AAgCA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AA1BA;AAgCA;;;;;;;;;;;;AC1JA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAcA;AAfA;AA+BA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAxCA;AAgDA;;;;;;;;;;;;ACxIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAEA;AAFA;AANA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAdA;AAkBA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAnGA;AAHA;AADA;AAFA;AAmHA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnJA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAdA;AAsBA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAcA;AACA;AACA;AAHA;AASA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AACA;AAAA;AA7GA;AAHA;AADA;AAFA;AA6HA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AADA;AACA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AAVA;AAWA;AACA;AAGA;AAEA;AACA;AACA;AAnBA;AAAA;AACA;AADA;AAAA;AAAA;AAoBA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAdA;AAsBA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAkBA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AACA;AAAA;AA/HA;AAHA;AADA;AA4IA;AAnKA;AACA;AADA;AAAA;AAsKA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1MA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAdA;AAsBA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAcA;AACA;AACA;AAHA;AASA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AACA;AAAA;AApKA;AAHA;AADA;AAFA;AAoLA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA,aAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AADA;AAKA;AACA;AAEA;AACA;AAIA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AA3BA;AADA;AAgCA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAUA;AA9CA;AAAA;AAAA;AAmDA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAtDA;AAkDA;AAlDA;AAAA;AACA;AADA;AAAA;AAAA;AA8DA;AACA;AACA;AAhEA;AAkEA;AAEA;AACA;AAAA;AACA;AAtEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AAAA;AAAA;AAkHA;;;;A","sourceRoot":""}