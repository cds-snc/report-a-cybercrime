{"version":3,"file":"main.b3b74fe48d78ad02e069.hot-update.js","sources":["webpack:///./src/forms/ScamInfoForm.js"],"sourcesContent":["/** @jsx jsx */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { css, jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { ApolloConsumer } from 'react-apollo'\nimport { I18n, i18nMark } from '@lingui/react'\nimport { Trans } from '@lingui/macro'\nimport { Form, Field } from 'react-final-form'\nimport { Checkbox } from '../components/checkbox'\nimport { Container } from '../components/container'\nimport { TextArea } from '../components/text-area'\nimport { Button } from '../components/button'\nimport { ButtonLink } from '../components/button-link'\nimport { Text } from '../components/text'\nimport { DateSelector } from '../components/date-picker'\nimport { finalFormAdapter } from '../utils/finalFormAdapter'\n\nconst CheckboxAdapter = finalFormAdapter(Checkbox)\nconst TextAreaAdapter = finalFormAdapter(TextArea)\nconst DateSelectorAdapter = finalFormAdapter(DateSelector)\n\nconst howContacted = [\n  i18nMark('phone'),\n  i18nMark('email'),\n  i18nMark('website link'),\n  i18nMark('other'),\n]\n\nconst CheckboxStyle = styled('label')`\n  margin-bottom: 8pt;\n`\n\nconst validate = () => {\n  return {}\n}\nexport class ScamInfoForm extends Component {\n  state = {\n    startDate: new Date(),\n  }\n\n  handleChange = date => {\n    this.setState({\n      startDate: date,\n    })\n  }\n\n  localOnSubmit = (client, data) => {\n    const { onSubmit } = this.props\n    // data.whenWereYouContacted = `${this.state.startDate}`.substr(0, 15)\n\n    data.whenWereYouContacted = this.state.startDate.toISOString().slice(0, 10)\n\n    onSubmit(client, data)\n  }\n\n  render() {\n    return (\n      <ApolloConsumer>\n        {client => (\n          <Form\n            onSubmit={data => this.localOnSubmit(client, data)}\n            validate={validate}\n            render={({\n              handleSubmit,\n              // reset,\n              // submitting,\n              // pristine,\n              values,\n              // invalid,\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <label htmlFor=\"scamDetails\">\n                  <Text marginTop={[5, null, 6]}>\n                    <Trans>What happened?</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <Field\n                    name=\"scamDetails\"\n                    id=\"scamDetails\"\n                    component={TextAreaAdapter}\n                    height=\"100px\"\n                    width=\"300px\"\n                  />\n                </div>\n\n                <label htmlFor=\"whenWereYouContacted\">\n                  <Text marginTop={[5, null, 6]}>\n                    <Trans>When did it happen?</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <I18n>\n                    {({ i18n }) => (\n                      <Field\n                        name=\"whenWereYouContacted\"\n                        id=\"whenWereYouContacted\"\n                        component={DateSelectorAdapter}\n                        locale={i18n._('en')}\n                        selected={this.state.startDate}\n                        onChange={this.handleChange}\n                        height=\"25px\"\n                        width=\"300px\"\n                      />\n                    )}\n                  </I18n>\n                </div>\n\n                <label htmlFor=\"howWereYouContacted\">\n                  <Text marginTop={[5, null, 6]}>\n                    <Trans>How did it start?</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <I18n>\n                    {({ i18n }) =>\n                      howContacted.map(key => {\n                        return (\n                          <CheckboxStyle key={key}>\n                            <Field\n                              name=\"howWereYouContacted\"\n                              id=\"howWereYouContacted\"\n                              component={CheckboxAdapter}\n                              type=\"checkbox\"\n                              value={key}\n                              label={i18n._(key)}\n                            />\n                          </CheckboxStyle>\n                        )\n                      })\n                    }\n                  </I18n>\n                </div>\n\n                {values.howWereYouContacted &&\n                values.howWereYouContacted.indexOf('other') > -1 ? (\n                  <React.Fragment>\n                    <label htmlFor=\"otherMethodOfContact\">\n                      <Text>\n                        <Trans>Other channel</Trans>\n                      </Text>\n                    </label>\n                    <div>\n                      <Field\n                        name=\"otherMethodOfContact\"\n                        id=\"otherMethodOfContact\"\n                        component={TextAreaAdapter}\n                        height=\"50px\"\n                        width=\"300px\"\n                      />\n                    </div>\n                  </React.Fragment>\n                ) : (\n                  ''\n                )}\n\n                <Text>\n                  {JSON.stringify(validate(values)) === JSON.stringify({}) ? (\n                    ''\n                  ) : (\n                    <Text>\n                      <Trans>Please fill out all fields</Trans>\n                    </Text>\n                  )}\n                </Text>\n                <Container\n                  width=\"305px\"\n                  marginTop={[1, null, 1]}\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: space-between;\n                  `}\n                >\n                  <Button type=\"submit\">\n                    <Trans>Continue</Trans>\n                  </Button>\n                </Container>\n\n                <Container\n                  width=\"300px\"\n                  marginTop={[1, null, 1]}\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: space-between;\n                  `}\n                >\n                  <ButtonLink type=\"button\" color=\"black\">\n                    <Trans>Cancel report</Trans>\n                  </ButtonLink>\n                </Container>\n              </form>\n            )}\n          />\n        )}\n      </ApolloConsumer>\n    )\n  }\n}\n\nScamInfoForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AADA;AACA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AAVA;AAWA;AACA;AAGA;AAEA;AACA;AACA;AAnBA;AAAA;AACA;AADA;AAAA;AAAA;AAoBA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAdA;AAsBA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAkBA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AACA;AAAA;AA/HA;AAHA;AADA;AA4IA;AAnKA;AACA;AADA;AAAA;AAsKA;AACA;AADA;;;;A","sourceRoot":""}