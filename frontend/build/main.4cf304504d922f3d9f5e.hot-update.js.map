{"version":3,"file":"main.4cf304504d922f3d9f5e.hot-update.js","sources":["webpack:///./src/p2/forms/ScammerDetailsForm.js"],"sourcesContent":["/** @jsx jsx */\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { css, jsx } from '@emotion/core'\nimport { ApolloConsumer } from 'react-apollo'\nimport { Trans } from '@lingui/macro'\nimport { I18n } from '@lingui/react'\nimport { Form, Field } from 'react-final-form'\nimport { Container } from '../../components/container'\nimport { TextArea } from '../../components/text-area'\nimport { Button } from '../../components/button'\nimport { Link } from '../../components/link'\nimport { Text } from '../../components/text'\nimport { H2, H3 } from '../../components/header'\nimport { P } from '../../components/paragraph'\nimport { Ul } from '../../components/unordered-list'\nimport { Li } from '../../components/list-item'\nimport { FileUpload } from '../../components/file-upload'\nimport { finalFormAdapter } from '../../utils/finalFormAdapter'\nimport { getScammerDetails } from '../../utils/queriesAndMutations'\n\nconst TextAreaAdapter = finalFormAdapter(TextArea)\n\nexport const ScammerDetailsFormWrapped = props => {\n  const { client } = props\n  const cached = getScammerDetails(client)\n  const [files, setFiles] = useState(cached.files.map(file => ({ name: file })))\n  const [fileDescriptions, setFileDescriptions] = useState(\n    cached.fileDescriptions,\n  )\n  const [scammerDetails, setScammerDetails] = useState(cached.scammerDetails)\n\n  const onChange = e => {\n    if (e.target.id === 'scammerDetails') {\n      setScammerDetails(e.target.value)\n    } else if (e.target.id.indexOf('file-description') > -1) {\n      const index = Number(e.target.id.substring(17))\n      let newFileDescriptions = JSON.parse(JSON.stringify(fileDescriptions))\n      newFileDescriptions[index] = e.target.value\n      setFileDescriptions(newFileDescriptions)\n    } else if (e.target.files && e.target.files[0]) {\n      setFiles(files.concat(e.target.files[0]))\n      setFileDescriptions(fileDescriptions.concat(''))\n    }\n  }\n\n  const removeFile = index => {\n    let newFiles = files.filter((_, fileIndex) => index != fileIndex)\n    let newFileDescriptions = fileDescriptions.filter(\n      (_, fileIndex) => index != fileIndex,\n    )\n    setFiles(newFiles)\n    setFileDescriptions(newFileDescriptions)\n  }\n\n  const localSubmit = client => {\n    const data = {\n      scammerDetails,\n      files: files.map(f => f.name),\n      fileDescriptions,\n    }\n    props.onSubmit(client, data)\n  }\n  return (\n    <ApolloConsumer>\n      {client => (\n        <Form\n          onSubmit={() => localSubmit(client)}\n          render={({ handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <H2 fontSize={[4, null, 5]} marginTop=\"40px\">\n                <Trans>Share information that shows who the scam is from</Trans>\n              </H2>\n              <P>\n                <Trans>Include whatever you know about:</Trans>\n              </P>\n              <Ul>\n                <Li>\n                  <Trans>Who the scammer claimed to be</Trans>\n                </Li>\n                <Li>\n                  <Trans>Email addresses, phone numbers, or website links</Trans>\n                </Li>\n                <Li>\n                  <Trans>\n                  Details about your interactions or transactions  \n                  </Trans>\n                </Li>\n              </Ul>\n\n              <label htmlFor=\"scammerDetails\">\n                <Text marginTop={[5, null, 6]}>\n                  <Trans>What do you know about where the scam came from?</Trans>\n                </Text>\n              </label>\n              <div>\n                <Field\n                  input={{ value: scammerDetails, onChange }}\n                  name=\"scammerDetails\"\n                  id=\"scammerDetails\"\n                  component={TextAreaAdapter}\n                  height=\"200px\"\n                />\n              </div>\n\n              <H2 fontSize={[4, null, 5]} marginTop=\"40px\">\n                <Trans>Share files that show what happened</Trans>\n              </H2>\n              <P>\n                <Trans>Include whatever documents you have:</Trans>\n              </P>\n              <Ul>\n                <Li>\n                  <Trans>Screenshots or photos of what they did</Trans>\n                </Li>\n                <Li>\n                  <Trans>\n                    Conversations and messages of what they said\n                  </Trans>\n                </Li>\n                <Li>\n                  <Trans>\n                    Bank statements and receipts that show what they took\n                  </Trans>\n                </Li>\n              </Ul>\n\n              <Container\n                width=\"300px\"\n                marginTop={[2, null, 5]}\n                marginBottom={[2, null, 5]}\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent=\"center\"\n              >\n                <FileUpload\n                  onChange={onChange}\n                  paddingLeft=\"15px\"\n                  paddingRight=\"15px\"\n                >\n                  <Trans>Add file</Trans>\n                </FileUpload>\n              </Container>\n\n              <I18n>\n                {({ i18n }) => (\n                  <H3>\n                    {i18n.plural({\n                      value: files.length,\n                      one: '# file attached',\n                      other: '# files attached',\n                    })}\n                  </H3>\n                )}\n              </I18n>\n\n              <Container>\n                {files.map((f, index) => (\n                  <React.Fragment key={index}>\n                    <H3 marginTop={[4, null, 5]} fontSize={[2, null, 4]}>\n                      {f.name}\n                    </H3>\n\n                    <label htmlFor={`file-description-${index}`}>\n                      <Text>\n                        <Trans>Describe what this file shows</Trans>\n                      </Text>\n                    </label>\n                    <div>\n                      <Field\n                        input={{ value: fileDescriptions[index], onChange }}\n                        name={`file-description-${index}`}\n                        id={`file-description-${index}`}\n                        component={TextAreaAdapter}\n                        height=\"50px\"\n                      />\n                    </div>\n\n                    <Button\n                      float=\"right\"\n                      backgroundColor=\"crimson\"\n                      type=\"button\"\n                      onClick={() => removeFile(index)}\n                    >\n                      <Trans>Remove file</Trans>\n                    </Button>\n                  </React.Fragment>\n                ))}\n              </Container>\n\n              <Container\n                width=\"305px\"\n                marginTop={[1, null, 1]}\n                css={css`\n                  display: flex;\n                  flex-direction: column;\n                  justify-content: space-between;\n                `}\n              >\n                <Button type=\"submit\">\n                  <Trans>Continue</Trans>\n                </Button>\n              </Container>\n\n              <Container\n                width=\"300px\"\n                marginTop={[1, null, 1]}\n                css={css`\n                  display: flex;\n                  flex-direction: column;\n                  justify-content: space-between;\n                `}\n              >\n                <Link type=\"button\" color=\"black\" to=\"/p2\" textAlign=\"center\">\n                  <Trans>Cancel report</Trans>\n                </Link>\n              </Container>\n            </form>\n          )}\n        />\n      )}\n    </ApolloConsumer>\n  )\n}\n\nScammerDetailsFormWrapped.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  client: PropTypes.any.isRequired,\n}\n\nexport const ScammerDetailsForm = props => (\n  <ApolloConsumer>\n    {client => <ScammerDetailsFormWrapped client={client} {...props} />}\n  </ApolloConsumer>\n)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;AACA;AAAA;AAEA;AACA;AAHA;AAGA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAIA;AAAA;AAGA;AAAA;AAGA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAIA;AAAA;AAGA;AAAA;AAKA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAHA;AAKA;AAAA;AAKA;AAAA;AAEA;AAAA;AAFA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AAAA;AA3BA;AAkCA;AACA;AACA;AAHA;AASA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAlJA;AAFA;AADA;AA8JA;AAEA;AACA;AACA;AAFA;AAKA;AAAA;AAEA;AAAA;AAAA;AAAA;AAFA;;;;A","sourceRoot":""}