{"version":3,"file":"main.6ca4647e6df5769ca9d8.hot-update.js","sources":["webpack:///./src/p2/WhatHappenedPage.js","webpack:///./src/p2/forms/WhatHappenedForm.js"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { P } from '../components/paragraph'\nimport { Ul } from '../components/unordered-list'\nimport { Li } from '../components/list-item'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { WhatHappenedForm } from './forms/WhatHappenedForm'\nimport { Layout } from '../components/layout'\nimport { getDoneForms } from '../utils/queriesAndMutations'\n\nconst submitAndNavigate = (client, data) => {\n  client.writeData({ data: { scamInfo: JSON.stringify(data) } })\n  navigate(getDoneForms(client) ? 'confirmation' : '/p2/scammerDetails')\n}\n\nexport const WhatHappenedPage = () => (\n  <Layout>\n    <H1>\n      <Trans>Describe what happened</Trans>\n    </H1>\n    <P marginBottom=\"20px\">\n      <Trans>\n        We know this can be hard to talk about. What happened is not your fault.\n      </Trans>\n    </P>\n    <P>\n      <Trans>\n        Scammers use a number of techniques to get what they want. Tell us about\n        it to stop this from happening again.\n      </Trans>\n    </P>\n    <P>\n      <Trans>Think about things such as:</Trans>\n    </P>\n    <Ul>\n      <Li>\n        <Trans>What were you doing when something went wrong?</Trans>\n      </Li>\n      <Li>\n        <Trans>How did the scammer say or do that was misleading?</Trans>\n      </Li>\n      <Li>\n        <Trans>What made this suspicious or malicious?</Trans>\n      </Li>\n    </Ul>\n    <TrackPageViews />\n    <WhatHappenedForm onSubmit={submitAndNavigate} />\n  </Layout>\n)\n","/** @jsx jsx */\nimport PropTypes from 'prop-types'\nimport { css, jsx } from '@emotion/core'\nimport { ApolloConsumer } from 'react-apollo'\nimport { Trans } from '@lingui/macro'\nimport { Form, Field } from 'react-final-form'\nimport { Container } from '../../components/container'\nimport { TextArea } from '../../components/text-area'\nimport { Button } from '../../components/button'\nimport { Link } from '../../components/link'\nimport { Text } from '../../components/text'\nimport { finalFormAdapter } from '../../utils/finalFormAdapter'\nimport { getScamInfo } from '../../utils/queriesAndMutations'\n\nconst TextAreaAdapter = finalFormAdapter(TextArea)\n\nexport const WhatHappenedForm = props => (\n  <ApolloConsumer>\n    {client => (\n      <Form\n        initialValues={getScamInfo(client)}\n        onSubmit={data => props.onSubmit(client, data)}\n        render={({ handleSubmit }) => (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"scamDetails\">\n              <Text marginTop={[5, null, 6]}>\n                <Trans>What happened?</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"scamDetails\"\n                id=\"scamDetails\"\n                component={TextAreaAdapter}\n                height=\"200px\"\n              />\n            </div>\n\n            <Container\n              width=\"305px\"\n              marginTop={[1, null, 1]}\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n              `}\n            >\n              <Button type=\"submit\">\n                <Trans>Continue</Trans>\n              </Button>\n            </Container>\n\n            <Container\n              width=\"300px\"\n              marginTop={[1, null, 1]}\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n              `}\n            >\n              <Link type=\"button\" color=\"black\" to=\"/p2\" textAlign=\"center\">\n                <Trans>Cancel report</Trans>\n              </Link>\n            </Container>\n          </form>\n        )}\n      />\n    )}\n  </ApolloConsumer>\n)\n\nWhatHappenedForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAKA;AAAA;AAMA;AAAA;AAIA;AAAA;AAGA;AAAA;AAGA;AAAA;AAIA;AAAA;AA/BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AAHA;AASA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAxCA;AAHA;AADA;AAFA;AAwDA;AACA;AADA;;;;A","sourceRoot":""}