{"version":3,"file":"main.defb9e81dcd42bca77d6.hot-update.js","sources":["webpack:///./src/ConfirmationPage.js"],"sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport React from 'react'\nimport { navigate } from '@reach/router'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { ApolloConsumer } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { H1, H2 } from './components/header'\nimport { Container } from './components/container'\nimport { Text } from './components/text'\nimport { Button } from './components/button'\nimport { ButtonLink } from './components/button-link'\nimport { TrackPageViews } from './TrackPageViews'\nimport { Steps } from './components/stepper'\n\nconst CenterContent = styled('div')`\n  max-width: 750px;\n  margin: auto;\n`\n\nconst topBarContainer = css`\n  display: flex;\n  width: 90%;\n  flex-direction: row;\n  margin-bottom: 20px;\n`\n\nconst scamEventSummary = client => {\n  let {\n    howWereYouContacted,\n    otherMethodOfContact,\n    whenWereYouContacted,\n    scamDetails,\n  } = client.readQuery({\n    query: gql`\n      query readCache {\n        howWereYouContacted\n        otherMethodOfContact\n        whenWereYouContacted\n        scamDetails\n      }\n    `,\n  })\n  if (\n    (howWereYouContacted && howWereYouContacted.length) ||\n    whenWereYouContacted ||\n    scamDetails\n  ) {\n    if (otherMethodOfContact) {\n      howWereYouContacted = howWereYouContacted.concat(otherMethodOfContact)\n    }\n    howWereYouContacted = howWereYouContacted\n      .filter(s => s !== 'other')\n      .join(', ')\n    return (\n      <React.Fragment>\n        <H2 fontSize={[3, null, 4]} marginBottom={[1, null, 1]}>\n          <Trans>Scam</Trans>\n        </H2>\n        <Text>\n          <Trans>Description: {scamDetails}</Trans>\n        </Text>\n        <Text>\n          <Trans>Date: {whenWereYouContacted}</Trans>\n        </Text>\n        <Text>\n          <Trans>Contact: {howWereYouContacted}</Trans>\n        </Text>  \n      </React.Fragment>\n    )\n  } else {\n    return null\n  }\n}\n\nconst lostMoneySummary = client => {\n  let {\n    lostAmount,\n    lostCurrency,\n    lostMethodsOfPayment,\n    lostOtherMethodOfPayment,\n  } = client.readQuery({\n    query: gql`\n      query readCache {\n        lostAmount\n        lostCurrency\n        lostMethodsOfPayment\n        lostOtherMethodOfPayment\n      }\n    `,\n  })\n  if (\n    lostAmount ||\n    lostCurrency ||\n    (lostMethodsOfPayment && lostMethodsOfPayment.length)\n  ) {\n    if (lostOtherMethodOfPayment) {\n      lostMethodsOfPayment = lostMethodsOfPayment.concat(\n        lostOtherMethodOfPayment,\n      )\n    }\n    lostMethodsOfPayment = lostMethodsOfPayment\n      .filter(s => s !== 'other')\n      .join(', ')\n    return (\n      <React.Fragment>\n        <H2\n          fontSize={[3, null, 4]}\n          marginTop={[3, null, 4]}\n          marginBottom={[1, null, 1]}\n        >\n          <Trans>Money lost</Trans>\n        </H2>\n        <Text>\n          <Trans>Amount: {lostAmount}</Trans>\n        </Text>\n        <Text>\n          <Trans>Currency: {lostCurrency}</Trans>\n        </Text>\n        <Text>\n          <Trans>Payment method: {lostMethodsOfPayment}</Trans>\n        </Text>\n      </React.Fragment>\n    )\n  } else {\n    return null\n  }\n}\n\nconst suspectInfoSummary = client => {\n  let {\n    suspectName,\n    suspectAddress,\n    suspectLanguage,\n    otherSuspectLanguage,\n    suspectPhone,\n    suspectEmail,\n    suspectWebsite,\n    suspectIP,\n  } = client.readQuery({\n    query: gql`\n      query readCache {\n        suspectName\n        suspectAddress\n        suspectLanguage\n        otherSuspectLanguage\n        suspectPhone\n        suspectEmail\n        suspectWebsite\n        suspectIP\n      }\n    `,\n  })\n  if (\n    suspectName ||\n    suspectAddress ||\n    (suspectLanguage && suspectLanguage.length) ||\n    suspectPhone ||\n    suspectEmail ||\n    suspectWebsite ||\n    suspectIP\n  ) {\n    if (otherSuspectLanguage) {\n      suspectLanguage = suspectLanguage.concat(otherSuspectLanguage)\n    }\n    suspectLanguage = suspectLanguage\n      .filter(s => s !== 'Other language')\n      .join(', ')\n    return (\n      <React.Fragment>\n        <H2\n          fontSize={[3, null, 4]}\n          marginTop={[3, null, 4]}\n          marginBottom={[1, null, 1]}\n        >\n          <Trans>Scammer details</Trans>\n        </H2>\n        <Text>\n          <Trans>Name: {suspectName}</Trans>\n        </Text>\n        <Text>\n          <Trans>Phone number: {suspectPhone}</Trans>\n        </Text>\n        <Text>\n          <Trans>Email address: {suspectEmail}</Trans>\n        </Text>\n        <Text>\n          <Trans>Website: {suspectWebsite}</Trans>\n        </Text>\n        <Text>\n          <Trans>Mailing address: {suspectAddress}</Trans>\n        </Text>\n        <Text>\n          <Trans>IP address: {suspectIP}</Trans>\n        </Text>\n        <Text>\n          <Trans>Language of correspondence: {suspectLanguage}</Trans>\n        </Text>\n      </React.Fragment>\n    )\n  } else {\n    return null\n  }\n}\n\nconst fileUploadSummary = client => {\n  const { files } = client.readQuery({\n    query: gql`\n      query readCache {\n        files\n      }\n    `,\n  })\n  if (files && files.length) {\n    const fileList = files.join(', ')\n    return (\n      <React.Fragment>\n        <H2\n          fontSize={[3, null, 4]}\n          marginTop={[3, null, 4]}\n          marginBottom={[1, null, 1]}\n        >\n          <Trans>Evidence</Trans>\n        </H2>\n        <Text>\n          <Trans>Files: {fileList}</Trans>\n        </Text>\n      </React.Fragment>\n    )\n  } else {\n    return null\n  }\n}\nconst contactInfoSummary = client => {\n  const {\n    userIsTheVictim,\n    contactInfoName,\n    contactInfoEmail,\n    contactInfoPhone,\n  } = client.readQuery({\n    query: gql`\n      query readCache {\n        userIsTheVictim\n        contactInfoName\n        contactInfoEmail\n        contactInfoPhone\n      }\n    `,\n  })\n  if (\n    userIsTheVictim ||\n    contactInfoName ||\n    contactInfoEmail ||\n    contactInfoPhone\n  ) {\n    return (\n      <React.Fragment>\n        <H2\n          fontSize={[3, null, 4]}\n          marginTop={[3, null, 4]}\n          marginBottom={[1, null, 1]}\n        >\n          <Trans>If the police have any questions</Trans>\n        </H2>\n        <Text>\n          <Trans>You are the victim: {userIsTheVictim}</Trans>\n        </Text>\n        <Text>\n          <Trans>Name: {contactInfoName}</Trans>\n        </Text>\n        <Text>\n          <Trans>Email: {contactInfoEmail}</Trans>\n        </Text>\n        <Text>\n          <Trans>Phone: {contactInfoPhone}</Trans>\n        </Text>\n      </React.Fragment>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const ConfirmationPage = () => (\n  <CenterContent>\n    <Container css={topBarContainer}>\n      <Steps activeStep={4} />\n    </Container>\n    <H1>\n      <Trans>Confirm report information</Trans>\n    </H1>\n    <TrackPageViews />\n    <ApolloConsumer>\n      {client => (\n        <React.Fragment>\n          {scamEventSummary(client)}\n          {lostMoneySummary(client)}\n          {suspectInfoSummary(client)}\n          {fileUploadSummary(client)}\n          {contactInfoSummary(client)}\n        </React.Fragment>\n      )}\n    </ApolloConsumer>\n\n    <Container\n      maxWidth=\"305px\"\n      marginTop={[3, null, 4]}\n      css={css`\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n      `}\n    >\n      <Button type=\"submit\" onClick={() => navigate('/thankyou')}>\n        <Trans>Submit report</Trans>\n      </Button>\n    </Container>\n\n    <Container\n      maxWidth=\"300px\"\n      marginTop={[2, null, 3]}\n      css={css`\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n      `}\n    >\n      <ButtonLink type=\"button\" color=\"black\">\n        <Trans>Cancel report</Trans>\n      </ButtonLink>\n    </Container>\n  </CenterContent>\n)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAOA;AADA;AANA;AAAA;AAAA;AAAA;AACA;AAeA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AADA;AANA;AAAA;AAAA;AAAA;AACA;AAeA;AAKA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AAHA;AAKA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAWA;AADA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuBA;AASA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AAHA;AAKA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AACA;AAOA;AACA;AACA;AAGA;AACA;AACA;AAHA;AAKA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAOA;AADA;AANA;AAAA;AAAA;AAAA;AACA;AAeA;AAMA;AAGA;AACA;AACA;AAHA;AAKA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAIA;AAAA;AAYA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AACA;AAAA;AA7CA;;;;A","sourceRoot":""}