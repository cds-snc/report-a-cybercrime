{"version":3,"file":"server.js","sources":["webpack:///webpack/bootstrap","webpack:///./locale/en/messages.js","webpack:///./locale/fr/messages.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///(webpack)/hot/log-apply-result.js","webpack:///(webpack)/hot/log.js","webpack:///(webpack)/hot/poll.js","webpack:///./src/App.js","webpack:///./src/Home.js","webpack:///./src/LanguageSwitcher.js","webpack:///./src/LanguageSwitching.js","webpack:///./src/PageNotFound.js","webpack:///./src/RootLandingPage.js","webpack:///./src/TrackPageViews.js","webpack:///./src/components/TextInput/index.js","webpack:///./src/components/backbutton/index.js","webpack:///./src/components/button-link/index.js","webpack:///./src/components/button/index.js","webpack:///./src/components/buttons-container/index.js","webpack:///./src/components/checkbox/index.js","webpack:///./src/components/container/index.js","webpack:///./src/components/file-upload/index.css","webpack:///./src/components/file-upload/index.js","webpack:///./src/components/footer/index.js","webpack:///./src/components/header/index.js","webpack:///./src/components/header/presets.js","webpack:///./src/components/input/index.js","webpack:///./src/components/label/index.js","webpack:///./src/components/layout/index.js","webpack:///./src/components/link/index.js","webpack:///./src/components/list-item/index.js","webpack:///./src/components/list-item/presets.js","webpack:///./src/components/paragraph/index.js","webpack:///./src/components/paragraph/presets.js","webpack:///./src/components/phase-banner/index.js","webpack:///./src/components/radio-button/index.js","webpack:///./src/components/stepper/index.js","webpack:///./src/components/text-area/index.js","webpack:///./src/components/text/index.js","webpack:///./src/components/text/presets.js","webpack:///./src/components/topbanner/index.js","webpack:///./src/components/unique-id/index.js","webpack:///./src/components/unordered-list/index.js","webpack:///./src/components/unordered-list/presets.js","webpack:///./src/components/warning-banner/index.js","webpack:///./src/components/wordmark/index.js","webpack:///./src/images/rcmpbrandingeng.svg","webpack:///./src/images/rcmpbrandingfre.svg","webpack:///./src/images/upload.svg","webpack:///./src/index.js","webpack:///./src/p1/ConfirmationPage.js","webpack:///./src/p1/ContactInfoPage.js","webpack:///./src/p1/FileUploadPage.js","webpack:///./src/p1/FileUploadYesNoPage.js","webpack:///./src/p1/LandingPage.js","webpack:///./src/p1/MoneyLostPage.js","webpack:///./src/p1/MoneyLostYesNoPage.js","webpack:///./src/p1/ScamInfoPage.js","webpack:///./src/p1/SuspectInfoPage.js","webpack:///./src/p1/SuspectInfoYesNoPage.js","webpack:///./src/p1/ThankYou.js","webpack:///./src/p1/WillBeContactedYesNoPage.js","webpack:///./src/p1/forms/ContactInfoForm.js","webpack:///./src/p1/forms/MoneyLostForm.js","webpack:///./src/p1/forms/ScamInfoForm.js","webpack:///./src/p1/forms/SuspectInfoForm.js","webpack:///./src/p2/ConfirmationPage.js","webpack:///./src/p2/ConfirmationSummary.js","webpack:///./src/p2/ContactInfoPage.js","webpack:///./src/p2/ImpactStatementPage.js","webpack:///./src/p2/LandingPage.js","webpack:///./src/p2/NextSteps.js","webpack:///./src/p2/ScammerDetailsPage.js","webpack:///./src/p2/TimeFramePage.js","webpack:///./src/p2/WhatHappenedPage.js","webpack:///./src/p2/forms/ConfirmationForm.js","webpack:///./src/p2/forms/ContactInfoForm.js","webpack:///./src/p2/forms/ImpactStatementInfoForm.js","webpack:///./src/p2/forms/ScammerDetailsForm.js","webpack:///./src/p2/forms/TimeFrameInfoForm.js","webpack:///./src/p2/forms/WhatHappenedForm.js","webpack:///./src/server.js","webpack:///./src/theme/index.js","webpack:///./src/utils/asAnchor.js","webpack:///./src/utils/cleanProps.js","webpack:///./src/utils/finalFormAdapter.js","webpack:///./src/utils/queriesAndMutations.js","webpack:///external \"@babel/polyfill\"","webpack:///external \"@babel/runtime/helpers/assertThisInitialized\"","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/objectWithoutProperties\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///external \"@babel/runtime/helpers/taggedTemplateLiteral\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@cdssnc/logdriver\"","webpack:///external \"@emotion/core\"","webpack:///external \"@emotion/styled-base\"","webpack:///external \"@lingui/react\"","webpack:///external \"@reach/component-component\"","webpack:///external \"@reach/router\"","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"apollo-client\"","webpack:///external \"apollo-link-http\"","webpack:///external \"emotion-theming\"","webpack:///external \"express\"","webpack:///external \"express-request-language\"","webpack:///external \"graphql-tag\"","webpack:///external \"http\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"process\"","webpack:///external \"prop-types\"","webpack:///external \"query-string\"","webpack:///external \"razzle-dev-utils/prettyNodeErrors\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-final-form\"","webpack:///external \"react-ga\"","webpack:///external \"react-helmet-async\"","webpack:///external \"recompose\"","webpack:///external \"styled-system\""],"sourcesContent":[" \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar chunk = require(\"./\" + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\");\n \t\thotAddUpdateChunk(chunk.id, chunk.modules);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest() {\n \t\ttry {\n \t\t\tvar update = require(\"./\" + \"\" + hotCurrentHash + \".hot-update.json\");\n \t\t} catch (e) {\n \t\t\treturn Promise.resolve();\n \t\t}\n \t\treturn Promise.resolve(update);\n \t}\n\n \t//eslint-disable-next-line no-unused-vars\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"9019d5bd05464ce7d51f\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = \"main\";\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"http://localhost:3001/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(0)(__webpack_require__.s = 0);\n","/* eslint-disable */module.exports={languageData:{\"plurals\":function(n,ord){var s=String(n).split(\".\"),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?\"one\":n10==2&&n100!=12?\"two\":n10==3&&n100!=13?\"few\":\"other\";return n==1&&v0?\"one\":\"other\"}},messages:{\": Add files\":\": Add files\",\": Clues about the suspect\":\": Clues about the suspect\",\": Contact information\":\": Contact information\",\": Impact of the scam\":\": Impact of the scam\",\": Money lost\":\": Money lost\",\": Review report\":\": Review report\",\": What happened\":\": What happened\",\"<0>Amount of money</0>\":\"<0>Amount of money</0>\",\"<0>Approximate end</0>\":\"<0>Approximate end</0>\",\"<0>Approximate start</0>\":\"<0>Approximate start</0>\",\"<0>Currency</0>\":\"<0>Currency</0>\",\"<0>Email address</0>\":\"<0>Email address</0>\",\"<0>Full name</0>\":\"<0>Full name</0>\",\"<0>How did it start?</0>\":\"<0>How did it start?</0>\",\"<0>How did you pay the scammer?</0>\":\"<0>How did you pay the scammer?</0>\",\"<0>IP address</0>\":\"<0>IP address</0>\",\"<0>Language of communications</0>\":\"<0>Language of communications</0>\",\"<0>Mailing address</0>\":\"<0>Mailing address</0>\",\"<0>Name</0>\":\"<0>Name</0>\",\"<0>Phone number</0>\":\"<0>Phone number</0>\",\"<0>Postal code</0>\":\"<0>Postal code</0>\",\"<0>Tell us more about how it impacted you.</0>\":\"<0>Tell us more about how it impacted you.</0>\",\"<0>Website link</0>\":\"<0>Website link</0>\",\"<0>What do you know about where the scam came from?</0>\":\"<0>What do you know about where the scam came from?</0>\",\"<0>What happened?</0>\":\"<0>What happened?</0>\",\"<0>What happens next</0>\":\"<0>What happens next</0>\",\"<0>What was the impact of the scam?</0>\":\"<0>What was the impact of the scam?</0>\",\"<0>When did it start?</0>\":\"<0>When did it start?</0>\",\"<0>Where you can get help</0>\":\"<0>Where you can get help</0>\",\"<0>You have other reporting options</0>\":\"<0>You have other reporting options</0>\",\"<0>\\u25C0</0> <1>Back to</1> <2>{children}</2>\":function(a){return[\"<0>\\u25C0</0> <1>Back to</1> <2>\",a(\"children\"),\"</2>\"]},\"ALPHA\":\"ALPHA\",\"About the suspect\":\"About the suspect\",\"Add clues about the suspect\":\"Add clues about the suspect\",\"Add file\":\"Add file\",\"Add suspect clues\":\"Add suspect clues\",\"Amount\":\"Amount\",\"Any clues about the source of the scam can help police track down the scammer.\":\"Any clues about the source of the scam can help police track down the scammer.\",\"Any information about where, when, and how the scam took place is helpful for police.\":\"Any information about where, when, and how the scam took place is helpful for police.\",\"Any information that was used by the scammer can help police identify suspects.\":\"Any information that was used by the scammer can help police identify suspects.\",\"Any screenshots, messages, or receipts\":\"Any screenshots, messages, or receipts\",\"Are you reporting a scam that happened to you?\":\"Are you reporting a scam that happened to you?\",\"Attach any supporting files\":\"Attach any supporting files\",\"Attach supporting files\":\"Attach supporting files\",\"Canadian dollar\":\"Canadian dollar\",\"Cancel report\":\"Cancel report\",\"Cash\":\"Cash\",\"Contact\":\"Contact\",\"Contact information\":\"Contact information\",\"Contacted by\":\"Contacted by\",\"Credit card\":\"Credit card\",\"Currency\":\"Currency\",\"Date\":\"Date\",\"Describe the scam\":\"Describe the scam\",\"Describe what happened\":\"Describe what happened\",\"Describe what this file shows\":\"Describe what this file shows\",\"Description\":\"Description\",\"Device or account hacked\":\"Device or account hacked\",\"Did the scam happened to you\":\"Did the scam happened to you\",\"Did you lose any money as part of this scam?\":\"Did you lose any money as part of this scam?\",\"Do you have any information on where the scam came from?\":\"Do you have any information on where the scam came from?\",\"Do you have documents, screenshots, or receipts?\":\"Do you have documents, screenshots, or receipts?\",\"E-transfer\":\"E-transfer\",\"Edit\":\"Edit\",\"Edit contact info\":\"Edit contact info\",\"Edit contact information\":\"Edit contact information\",\"Edit files attached\":\"Edit files attached\",\"Edit impact\":\"Edit impact\",\"Edit money lost\":\"Edit money lost\",\"Edit scam event\":\"Edit scam event\",\"Edit scammer details\":\"Edit scammer details\",\"Edit scammer information\":\"Edit scammer information\",\"Edit timeframe\":\"Edit timeframe\",\"Edit what happened\":\"Edit what happened\",\"Email\":\"Email\",\"Email address\":\"Email address\",\"English\":\"English\",\"Enter your contact information\":\"Enter your contact information\",\"Euro\":\"Euro\",\"File name\":\"File name\",\"Files attached\":\"Files attached\",\"Find tips to protect yourself in the future\":\"Find tips to protect yourself in the future\",\"Follow what scams are trending\":\"Follow what scams are trending\",\"For example: 2019-04-28\":\"For example: 2019-04-28\",\"For example: April 28, 2019\":\"For example: April 28, 2019\",\"For example: the amount of money, the information taken, what else was affected\":\"For example: the amount of money, the information taken, what else was affected\",\"French\":\"French\",\"Gift card\":\"Gift card\",\"How the scammer contacted you\":\"How the scammer contacted you\",\"IP address\":\"IP address\",\"If you can, give us an idea of when the scam took place so that police are able to look into it.\":\"If you can, give us an idea of when the scam took place so that police are able to look into it.\",\"Impact\":\"Impact\",\"Impact caused by the scam\":\"Impact caused by the scam\",\"Include any messages, conversations, receipts, or other evidence that shows what happened.\":\"Include any messages, conversations, receipts, or other evidence that shows what happened.\",\"Information stolen\":\"Information stolen\",\"It\\u2019s okay if you don\\u2019t know exactly when it took place. You can give your best guess or leave this blank.\":\"It\\u2019s okay if you don\\u2019t know exactly when it took place. You can give your best guess or leave this blank.\",\"Language of correspondence\":\"Language of correspondence\",\"Leave your contact information\":\"Leave your contact information\",\"Mailing address\":\"Mailing address\",\"Money lost\":\"Money lost\",\"Name\":\"Name\",\"Next\":\"Next\",\"Next: Contact information\":\"Next: Contact information\",\"Next: Review report\":\"Next: Review report\",\"No\":\"No\",\"No impact\":\"No impact\",\"Other\":\"Other\",\"Other currency\":\"Other currency\",\"Other language\":\"Other language\",\"Other method\":\"Other method\",\"Other method of payment\":\"Other method of payment\",\"Page not found\":\"Page not found\",\"Payment method\":\"Payment method\",\"Phone number\":\"Phone number\",\"Please attach one file at a time.\":\"Please attach one file at a time.\",\"Please fill out all fields\":\"Please fill out all fields\",\"Privacy\":\"Privacy\",\"Prototype 1\":\"Prototype 1\",\"Prototype 2\":\"Prototype 2\",\"Provide your contact details so that we can send you a confirmation of your report.\":\"Provide your contact details so that we can send you a confirmation of your report.\",\"Remember to include any email addresses, phone numbers, or website links\":\"Remember to include any email addresses, phone numbers, or website links\",\"Remove file\":\"Remove file\",\"Report a scam\":\"Report a scam\",\"Report directly to the place where the scam happened.\":\"Report directly to the place where the scam happened.\",\"Report now \\u276F\":\"Report now \\u276F\",\"Report to the credit bureaus, <0>Equifax</0> and <1>TransUnion</1>, if your identity was stolen.\":\"Report to the credit bureaus, <0>Equifax</0> and <1>TransUnion</1>, if your identity was stolen.\",\"Report to your financial institution, if you lost money.\":\"Report to your financial institution, if you lost money.\",\"Reputation damaged\":\"Reputation damaged\",\"Review report information\":\"Review report information\",\"Review your report\":\"Review your report\",\"Safety threatened\":\"Safety threatened\",\"Scam\":\"Scam\",\"Share any details you may know so that police can try to identify suspects.\":\"Share any details you may know so that police can try to identify suspects.\",\"Sorry, the page you were trying to view does not exist.\":\"Sorry, the page you were trying to view does not exist.\",\"Step {activeStep} of {totalSteps}\":function(a){return[\"Step \",a(\"activeStep\"),\" of \",a(\"totalSteps\")]},\"Submit report \\xA0 \\u276F\":\"Submit report \\xA0 \\u276F\",\"Suspect\":\"Suspect\",\"Talk to someone and get support\":\"Talk to someone and get support\",\"Telephone\":\"Telephone\",\"Tell the RCMP's National Cybercrime Coordination Unit about a scam to help police across Canada investigate these crimes.\":\"Tell the RCMP's National Cybercrime Coordination Unit about a scam to help police across Canada investigate these crimes.\",\"Tell us about it in your own words.\":\"Tell us about it in your own words.\",\"Tell us about the money lost\":\"Tell us about the money lost\",\"Tell us about your experience so we can stop it from happening again.\":\"Tell us about your experience so we can stop it from happening again.\",\"Tell us how much money was lost\":\"Tell us how much money was lost\",\"Tell us how the scam impacted you so that we can better support other people who are affected.\":\"Tell us how the scam impacted you so that we can better support other people who are affected.\",\"Terms and Conditions\":\"Terms and Conditions\",\"Thank you for reporting\":\"Thank you for reporting\",\"The <0>RCMP's National Cybercrime Coordination Unit</0> will assess the information and combine it with other reports to help police catch scammers.\":\"The <0>RCMP's National Cybercrime Coordination Unit</0> will assess the information and combine it with other reports to help police catch scammers.\",\"The RCMP will analyze your report and combine it with others that are similar to help police across Canada track down cybercriminals.\":\"The RCMP will analyze your report and combine it with others that are similar to help police across Canada track down cybercriminals.\",\"The police will not get your money back, but understanding the impact of the scam can help build a case.\":\"The police will not get your money back, but understanding the impact of the scam can help build a case.\",\"Think about including things such as:\":\"Think about including things such as:\",\"This site will change as we test ideas.\":\"This site will change as we test ideas.\",\"Timeframe\":\"Timeframe\",\"U.S. dollar\":\"U.S. dollar\",\"Warning! This is a prototype. It won't actually submit your report to the RCMP.\":\"Warning! This is a prototype. It won't actually submit your report to the RCMP.\",\"We will use this to send you a confirmation email and to link your report to other reports in your area.\":\"We will use this to send you a confirmation email and to link your report to other reports in your area.\",\"We've sent you an email with a summary of your report. Your reference number is <0>#NC300234234</0>.\":\"We've sent you an email with a summary of your report. Your reference number is <0>#NC300234234</0>.\",\"Website\":\"Website\",\"Wellbeing affected\":\"Wellbeing affected\",\"What happened\":\"What happened\",\"What happened is not your fault. Scammers use a number of techniques to get what they want.\":\"What happened is not your fault. Scammers use a number of techniques to get what they want.\",\"What language they used to communicate\":\"What language they used to communicate\",\"What they promised, threatened, or stole\":\"What they promised, threatened, or stole\",\"What was the impact of the scam?\":\"What was the impact of the scam?\",\"When did the scam happen?\":\"When did the scam happen?\",\"Where they asked you to send things\":\"Where they asked you to send things\",\"Which app, website, or device you were using\":\"Which app, website, or device you were using\",\"Who the scammer claimed to be\":\"Who the scammer claimed to be\",\"Would you like to be contacted, should the police need more information?\":\"Would you like to be contacted, should the police need more information?\",\"Yes\":\"Yes\",\"You will be asked to:\":\"You will be asked to:\",\"You're not the only one affected by this scam. Help protect others by telling us how the scam affected you.\":\"You're not the only one affected by this scam. Help protect others by telling us how the scam affected you.\",\"Your reference number is <0>#NC300234234</0>. Keep this number for your records or to add more information later.\":\"Your reference number is <0>#NC300234234</0>. Keep this number for your records or to add more information later.\",\"confirmationPage.ImpactTitle\":\"Impact\",\"confirmationPage.contactIntro\":\"Provide your contact details so that we can send you a confirmation of your report.\",\"confirmationPage.contactTitle\":\"Contact\",\"confirmationPage.impactIntro\":\"Tell us how the scam impacted you so that we can better support other people who are affected.\",\"confirmationPage.scamIntro\":\"Tell us about your experience so we can stop it from happening again.\",\"confirmationPage.scamTitle\":\"Scam\",\"confirmationPage.suspectIntro\":\"Share any details you may know so that police can try to identify suspects.\",\"confirmationPage.suspectTitle\":\"Suspect\",\"confirmationPage.timeFrameIntro\":\"If you can, give us an idea of when the scam took place so that police are able to look into it.\",\"confirmationPage.timeFrameTitle\":\"Timeframe\",\"confirmationPage.title\":\"Review your report\",\"contact information\":\"contact information\",\"fileUpload.added\":\"File added\",\"fileUpload.removed\":\"File removed\",\"landingPage.intro\":\"Scams can happen to anyone. They\\u2019re not always easy to recognize and new ones are invented every day.\",\"landingPage.nextButton\":\"Report now \\u276F\",\"landingPage.required0\":\"Before you start, gather what you can about the scam:\",\"landingPage.required1\":\"Dates when it took place\",\"landingPage.required2\":\"Descriptions of what happened\",\"landingPage.required3\":\"Details on where it came from\",\"landingPage.required4\":\"Documents, screenshots, or receipts\",\"landingPage.summary\":\"Your report helps the RCMP learn about these crimes and helps police across Canada catch cybercriminals.\",\"landingPage.title\":\"Report a scam\",\"loading...\":\"loading...\",\"money lost\":\"money lost\",\"nextStepsPage.helpResource\":\"Where you can get help\",\"nextStepsPage.helpResource1\":\"Talk to someone and get support\",\"nextStepsPage.helpResource2\":\"Find tips to protect yourself in the future\",\"nextStepsPage.helpResource3\":\"Follow what scams are trending\",\"nextStepsPage.nextStepDetail\":\"The RCMP will analyze your report and combine it with others that are similar to help police across Canada track down cybercriminals.\",\"nextStepsPage.nextStepSummary\":\"What happens next\",\"nextStepsPage.otherReportOption\":\"You have other reporting options\",\"nextStepsPage.otherReportOption1\":\"Report directly to the place where the scam happened.\",\"nextStepsPage.otherReportOption2\":\"Report to your financial institution, if you lost money.\",\"nextStepsPage.otherReportOption3\":\"Report to the credit bureaus, <0>Equifax</0> and <1>TransUnion</1>, if your identity was stolen.\",\"nextStepsPage.referenceNumber\":\"#NC300234234\",\"nextStepsPage.summary\":\"We've sent you an email with a summary of your report. Your reference number is <0>#NC300234234</0>.\",\"nextStepsPage.title\":\"Thank you for reporting\",\"previous page\":\"previous page\",\"scammerDetail.addFileButtom\":\"Add file\",\"scammerDetail.backButton\":\"the scam\",\"scammerDetail.detail1\":\"Who the scammer claimed to be\",\"scammerDetail.detail2\":\"Where they asked you to send things\",\"scammerDetail.detail3\":\"What language they used to communicate\",\"scammerDetail.detail4\":\"Any screenshots, messages, or receipts\",\"scammerDetail.details\":\"Think about including things such as:\",\"scammerDetail.fileDescription\":\"Describe what this file shows\",\"scammerDetail.intro\":\"Any clues about the source of the scam can help police track down the scammer.\",\"scammerDetail.reminder\":\"Remember to include any email addresses, phone numbers, or website links\",\"scammerDetail.removeFileButton\":\"Remove file\",\"scammerDetail.summary\":\"What do you know about where the scam came from?\",\"scammerDetail.title\":\"Add suspect clues\",\"start page\":\"start page\",\"supporting files\":\"supporting files\",\"suspect clues\":\"suspect clues\",\"the impact\":\"the impact\",\"the scam\":\"the scam\",\"the start page\":\"the start page\",\"the suspect\":\"the suspect\",\"the timeframe\":\"the timeframe\",\"timeFramePage.backButton\":\"the start page\",\"timeFramePage.endDate\":\"Approximate end\",\"timeFramePage.endDateExample\":\"For example: 2019-04-28\",\"timeFramePage.intro\":\"It\\u2019s okay if you don\\u2019t know exactly when it took place. You can give your best guess or leave this blank.\",\"timeFramePage.startDate\":\"Approximate start\",\"timeFramePage.startDateExample\":\"For example: 2019-04-28\",\"timeFramePage.title\":\"When did the scam happen?\",\"what happened\":\"what happened\",\"whatHappendPage.backButton\":\"the timeframe\",\"whatHappendPage.details1\":\"Think about including things such as:\",\"whatHappendPage.details2\":\"Which app, website, or device you were using\",\"whatHappendPage.details3\":\"How the scammer contacted you\",\"whatHappendPage.details4\":\"What they promised, threatened, or stole\",\"whatHappendPage.hint\":\"Tell us about it in your own words.\",\"whatHappendPage.intro1\":\"What happened is not your fault. Scammers use a number of techniques to get what they want.\",\"whatHappendPage.summary\":\"<0>What happened?</0>\",\"whatHappendPage.title\":\"Describe what happened\",\"your contact information\":\"your contact information\",\"{0, plural, one {# file attached} other {# files attached}}\":function(a){return[a(\"0\",\"plural\",{one:[\"#\",\" file attached\"],other:[\"#\",\" files attached\"]})]},\"{startDate} to {endDate}\":function(a){return[a(\"startDate\"),\" to \",a(\"endDate\")]},\"\\u276E \\xA0 Report another scam\":\"\\u276E \\xA0 Report another scam\"}};","/* eslint-disable */module.exports={languageData:{\"plurals\":function(n,ord){if(ord)return n==1?\"one\":\"other\";return n>=0&&n<2?\"one\":\"other\"}},messages:{\": Add files\":\" : Ajouter des fichiers\",\": Clues about the suspect\":\" : Renseignements sur le suspect\",\": Contact information\":\" : Coordonn\\xE9es\",\": Impact of the scam\":\" : R\\xE9percussions de la fraude\",\": Money lost\":\" : Argent perdu\",\": Review report\":\" : R\\xE9vision du rapport\",\": What happened\":\" : Description de la fraude\",\"<0>Amount of money</0>\":\"<0>Montant d'argent</0>\",\"<0>Approximate end</0>\":\"<0>Date de fin approximative</0>\",\"<0>Approximate start</0>\":\"<0>Date de d\\xE9but approximative</0>\",\"<0>Currency</0>\":\"<0>Devise</0>\",\"<0>Email address</0>\":\"<0>Adresse courriel</0>\",\"<0>Full name</0>\":\"<0>Nom complet</0>\",\"<0>How did it start?</0>\":\"<0>De quelle fa\\xE7on l'incident a-t-il commenc\\xE9?</0>\",\"<0>How did you pay the scammer?</0>\":\"<0>Comment avez-vous pay\\xE9 le fraudeur?</0>\",\"<0>IP address</0>\":\"<0>Adresse IP</0>\",\"<0>Language of communications</0>\":\"<0>Langue de communication</0>\",\"<0>Mailing address</0>\":\"<0>Adresse postale</0>\",\"<0>Name</0>\":\"<0>Nom</0>\",\"<0>Phone number</0>\":\"<0>Num\\xE9ro de t\\xE9l\\xE9phone</0>\",\"<0>Postal code</0>\":\"<0>Code postal</0>\",\"<0>Tell us more about how it impacted you.</0>\":\"Parlez-nous davantage de comment cette fraude vous a affect\\xE9.\",\"<0>Website link</0>\":\"<0>Lien vers un site Web</0>\",\"<0>What do you know about where the scam came from?</0>\":\"<0>Que savez-vous sur l'origine de la fraude?</0>\",\"<0>What happened?</0>\":\"<0>Que s'est-il pass\\xE9?</0>\",\"<0>What happens next</0>\":\"<0>Que se passe-t-il ensuite?</0>\",\"<0>What was the impact of the scam?</0>\":\"<0>Quelles ont \\xE9t\\xE9 les r\\xE9percussions de la fraude?</0>\",\"<0>When did it start?</0>\":\"<0>\\xC0 quel moment l'incident a-t-il commenc\\xE9?</0>\",\"<0>Where you can get help</0>\":\"<0>Obtenez de l'aide :</0>\",\"<0>You have other reporting options</0>\":\"<0>Vous avez d'autres options de signalement</0>\",\"<0>\\u25C0</0> <1>Back to</1> <2>{children}</2>\":function(a){return[\"<0>\\u25C0</0> <1>Retourner</1> <2>\",a(\"children\"),\"</2>\"]},\"ALPHA\":\"ALPHA\",\"About the suspect\":\"\\xC0 propos du suspect\",\"Add clues about the suspect\":\"Fournissez des renseignements sur le suspect\",\"Add file\":\"Ajouter un fichier\",\"Add suspect clues\":\"Fournissez des renseignements sur le suspect\",\"Amount\":\"Montant d'argent\",\"Any clues about the source of the scam can help police track down the scammer.\":\"Tout indice concernant la source de la fraude peut aider la police \\xE0 retrouver le fraudeur.\",\"Any information about where, when, and how the scam took place is helpful for police.\":\"Tout renseignement sur le lieu, le moment et le d\\xE9roulement de l'incident est utile pour la police.\",\"Any information that was used by the scammer can help police identify suspects.\":\"Tout renseignement fourni par le fraudeur peut aider la police \\xE0 trouver des suspects.\",\"Any screenshots, messages, or receipts\":\"Des captures d'\\xE9cran, des messages ou des re\\xE7us\",\"Are you reporting a scam that happened to you?\":\"\\xCAtes-vous la personne vis\\xE9e par la fraude que vous signalez?\",\"Attach any supporting files\":\"Joindre des documents li\\xE9s \\xE0 la fraude\",\"Attach supporting files\":\"Joignez des documents li\\xE9s \\xE0 l'incident\",\"Canadian dollar\":\"Dollar canadien\",\"Cancel report\":\"Annuler le rapport\",\"Cash\":\"En argent comptant\",\"Contact\":\"Coordonn\\xE9es\",\"Contact information\":\"Coordonn\\xE9es\",\"Contacted by\":\"Contact\\xE9 par\",\"Credit card\":\"Par carte de cr\\xE9dit\",\"Currency\":\"Devise\",\"Date\":\"Date\",\"Describe the scam\":\"D\\xE9crire la fraude\",\"Describe what happened\":\"D\\xE9crivez ce qui s'est pass\\xE9\",\"Describe what this file shows\":\"D\\xE9crivez ce que ce fichier indique\",\"Description\":\"Description\",\"Device or account hacked\":\"Piratage d'appareil ou de compte\",\"Did the scam happened to you\":\"\\xCAtes-vous la personne vis\\xE9e?\",\"Did you lose any money as part of this scam?\":\"Avez-vous perdu de l'argent suite \\xE0 cette fraude?\",\"Do you have any information on where the scam came from?\":\"Avez-vous des renseignements sur l'auteur de la fraude?\",\"Do you have documents, screenshots, or receipts?\":\"Avez-vous des documents, des captures d'\\xE9cran ou des re\\xE7us?\",\"E-transfer\":\"Par transfert \\xE9lectronique d'argent\",\"Edit\":\"Modifier\",\"Edit contact info\":\"Modifier les coordonn\\xE9es\",\"Edit contact information\":\"Modifier vos coordonn\\xE9es\",\"Edit files attached\":\"Modifier les fichiers joints\",\"Edit impact\":\"Modifier les r\\xE9percussions\",\"Edit money lost\":\"Modifier le montant d'argent perdu\",\"Edit scam event\":\"Modifier l'incidence de fraude\",\"Edit scammer details\":\"Modifier les renseignements sur le fraudeur\",\"Edit scammer information\":\"Modifier les information reli\\xE9es au fraudeur\",\"Edit timeframe\":\"Modifier les dates\",\"Edit what happened\":\"Modifier la description de ce qui s'est pass\\xE9\",\"Email\":\"Par courriel\",\"Email address\":\"Adresse de courriel\",\"English\":\"Anglais\",\"Enter your contact information\":\"Entrez vos coordonn\\xE9es\",\"Euro\":\"Euro\",\"File name\":\"Nom du fichier\",\"Files attached\":\"Fichiers joints\",\"Find tips to protect yourself in the future\":\"Trouvez des conseils pour vous prot\\xE9ger \\xE0 l'avenir\",\"Follow what scams are trending\":\"Tenez-vous \\xE0 jour sur les fraudes les plus communes\",\"For example: 2019-04-28\":\"Par exemple : 2019-04-28\",\"For example: April 28, 2019\":\"Par exemple: 28 avril 2019\",\"For example: the amount of money, the information taken, what else was affected\":\"Par exemple : le montant d'argent impliqu\\xE9, les informations prises ou toute autre r\\xE9percussion\",\"French\":\"Fran\\xE7ais\",\"Gift card\":\"Sous forme de carte-cadeau\",\"How the scammer contacted you\":\"La fa\\xE7on dont le fraudeur a communiqu\\xE9 avec vous\",\"IP address\":\"Adresse IP\",\"If you can, give us an idea of when the scam took place so that police are able to look into it.\":\"Si vous le pouvez, donnez-nous une id\\xE9e du moment o\\xF9 la fraude a eu lieu pour que la police soit en mesure d'enqu\\xEAter \\xE0 son sujet.\",\"Impact\":\"R\\xE9percussions\",\"Impact caused by the scam\":\"R\\xE9percussions de la fraude\",\"Include any messages, conversations, receipts, or other evidence that shows what happened.\":\"Vous pouvez inclure  des messages, des conversations, des re\\xE7us, ou tout autre \\xE9l\\xE9ment de preuve li\\xE9 \\xE0 la fraude.\",\"Information stolen\":\"Vol de renseignements\",\"It\\u2019s okay if you don\\u2019t know exactly when it took place. You can give your best guess or leave this blank.\":\"Ce n'est pas grave si vous ne connaissez pas le moment exacte de la fraude. Vous pouvez donner une approximation ou laisser le champ vide.\",\"Language of correspondence\":\"Langue de correspondance\",\"Leave your contact information\":\"Entrez vos coordonn\\xE9es\",\"Mailing address\":\"Adresse postale\",\"Money lost\":\"Perte d'argent\",\"Name\":\"Nom\",\"Next\":\"\\xC9tape suivante\",\"Next: Contact information\":\"\\xC9tape suivante : Coordonn\\xE9es\",\"Next: Review report\":\"\\xC9tape suivante : R\\xE9vision du rapport\",\"No\":\"Non\",\"No impact\":\"Aucune r\\xE9percussion\",\"Other\":\"Autre\",\"Other currency\":\"Autre monnaie\",\"Other language\":\"Autre langue\",\"Other method\":\"Autre m\\xE9thode\",\"Other method of payment\":\"Autre m\\xE9thode de paiement\",\"Page not found\":\"Page introuvable\",\"Payment method\":\"Mode de paiement\",\"Phone number\":\"Num\\xE9ro de t\\xE9l\\xE9phone\",\"Please attach one file at a time.\":\"Veuillez joindre un fichier \\xE0 la fois.\",\"Please fill out all fields\":\"Veuillez remplir tous les champs\",\"Privacy\":\"Confidentialit\\xE9\",\"Prototype 1\":\"Prototype 1\",\"Prototype 2\":\"Prototype 2\",\"Provide your contact details so that we can send you a confirmation of your report.\":\"Fournissez-nous vos coordonn\\xE9es pour que nous puissions vous envoyer la confirmation de la r\\xE9ception de votre rapport.\",\"Remember to include any email addresses, phone numbers, or website links\":\"Indiquez toutes les adresses courriel, les num\\xE9ros de t\\xE9l\\xE9phone ou les sites Web utilis\\xE9s par le fraudeur.\",\"Remove file\":\"Supprimer le fichier\",\"Report a scam\":\"Signalez une fraude\",\"Report directly to the place where the scam happened.\":\"Signaler l'incident directement \\xE0 l'endroit o\\xF9 la fraude a eu lieu.\",\"Report now \\u276F\":\"Signaler maintenant \\u276F\",\"Report to the credit bureaus, <0>Equifax</0> and <1>TransUnion</1>, if your identity was stolen.\":\"Signaler la fraude aux agences d'\\xE9valuation du cr\\xE9dit, \\xE0 savoir <0>Equifax</0> and <1>TransUnion</1>, en cas de vol d'identit\\xE9.\",\"Report to your financial institution, if you lost money.\":\"Signaler l'incident \\xE0 votre institution financi\\xE8re si vous avez fait parvenir de l'argent au fraudeur.\",\"Reputation damaged\":\"R\\xE9putation compromise\",\"Review report information\":\"R\\xE9visez les renseignements signal\\xE9s\",\"Review your report\":\"R\\xE9visez votre rapport\",\"Safety threatened\":\"S\\xE9curit\\xE9 mise en danger\",\"Scam\":\"Fraude\",\"Share any details you may know so that police can try to identify suspects.\":\"Partagez tous les d\\xE9tails que vous connaissez afin que la police puisse essayer d'identifier des suspects.\",\"Sorry, the page you were trying to view does not exist.\":\"D\\xE9sol\\xE9, la page que vous essayiez de voir n'existe pas.\",\"Step {activeStep} of {totalSteps}\":function(a){return[\"\\xC9tape \",a(\"activeStep\"),\" de \",a(\"totalSteps\")]},\"Submit report \\xA0 \\u276F\":\"Envoyer le rapport  \\u276F\",\"Suspect\":\"Suspect\",\"Talk to someone and get support\":\"Parlez \\xE0 quelqu'un et obtenez du soutien\",\"Telephone\":\"Au t\\xE9l\\xE9phone\",\"Tell the RCMP's National Cybercrime Coordination Unit about a scam to help police across Canada investigate these crimes.\":\"Informez le Groupe national de coordination contre la cybercriminalit\\xE9 de la GRC de l'incidence d'une fraude pour aider les services de police partout au Canada avec leurs enqu\\xEAtes.\",\"Tell us about it in your own words.\":\"Racontez-nous l'histoire dans vos propres mots\",\"Tell us about the money lost\":\"Indiquez le montant d'argent qui a \\xE9t\\xE9 perdu\",\"Tell us about your experience so we can stop it from happening again.\":\"Racontez-nous votre exp\\xE9rience afin que nous puissions emp\\xEAcher la situation de se reproduire.\",\"Tell us how much money was lost\":\"Indiquer le montant d'argent que vous avez perdu\",\"Tell us how the scam impacted you so that we can better support other people who are affected.\":\"Dites-nous comment la fraude vous a affect\\xE9 afin que nous puissions mieux soutenir les autres personnes touch\\xE9es.\",\"Terms and Conditions\":\"Avis\",\"Thank you for reporting\":\"Merci de votre signalement\",\"The <0>RCMP's National Cybercrime Coordination Unit</0> will assess the information and combine it with other reports to help police catch scammers.\":\"Le <0>Groupe national de coordination contre la cybercriminalit\\xE9 de la GRC</0> \\xE9valuera l'information et la combinera avec d'autres rapports pour aider la police \\xE0 trouver les fraudeurs.\",\"The RCMP will analyze your report and combine it with others that are similar to help police across Canada track down cybercriminals.\":\"La GRC analysera votre rapport et le combinera \\xE0 d'autres rapports semblables afin d'aider les services partout au Canada \\xE0 d\\xE9pister les cybercriminels.\",\"The police will not get your money back, but understanding the impact of the scam can help build a case.\":\"La police ne r\\xE9cup\\xE9rera pas votre argent, mais comprendre les r\\xE9percussions de la fraude peut l'aider \\xE0 monter un dossier.\",\"Think about including things such as:\":\"Pensez \\xE0 inclure des d\\xE9tails tels que :\",\"This site will change as we test ideas.\":\"Le site changera \\xE0 mesure que nous testons des id\\xE9es.\",\"Timeframe\":\"Dates\",\"U.S. dollar\":\"Dollar am\\xE9ricain\",\"Warning! This is a prototype. It won't actually submit your report to the RCMP.\":\"Attention! Ce site est un prototype. Vos renseignements ne seront pas r\\xE9ellement transmis \\xE0 la GRC.\",\"We will use this to send you a confirmation email and to link your report to other reports in your area.\":\"Nous utiliserons cette information pour vous envoyer un courriel de confirmation et pour associer votre rapport \\xE0 d'autres rapports dans votre r\\xE9gion.\",\"We've sent you an email with a summary of your report. Your reference number is <0>#NC300234234</0>.\":\"Nous vous avons envoy\\xE9 un courriel avec un r\\xE9sum\\xE9 de votre rapport. Votre num\\xE9ro de r\\xE9f\\xE9rence est le <0>#NC300234234</0>.\",\"Website\":\"Sur un site web\",\"Wellbeing affected\":\"Bien-\\xEAtre affect\\xE9\",\"What happened\":\"Ce qui s'est pass\\xE9\",\"What happened is not your fault. Scammers use a number of techniques to get what they want.\":\"Ce qui s'est pass\\xE9 n'est pas de votre faute. Les fraudeurs utilisent plusieurs techniques pour obtenir ce qu'ils veulent.\",\"What language they used to communicate\":\"La langue utilis\\xE9e par le fraudeur pour communiquer avec vous\",\"What they promised, threatened, or stole\":\"Ce que le fraudeur a promis, a vol\\xE9 ou a menac\\xE9 de faire\",\"What was the impact of the scam?\":\"Quelles ont \\xE9t\\xE9 les r\\xE9percussions de la fraude?\",\"When did the scam happen?\":\"Quand la fraude a-t-elle eu lieu?\",\"Where they asked you to send things\":\"L'endroit o\\xF9 le fraudeur vous ont demand\\xE9 d'envoyer des choses\",\"Which app, website, or device you were using\":\"L'application, le site Web ou l'appareil que vous utilisiez\",\"Who the scammer claimed to be\":\"La personne ou l'organisation que le fraudeur a pr\\xE9tendu \\xEAtre\",\"Would you like to be contacted, should the police need more information?\":\"Aimeriez-vous que la police fasse un suivi aupr\\xE8s de vous si elle a besoin de plus d'information?\",\"Yes\":\"Oui\",\"You will be asked to:\":\"Vous pourrez :\",\"You're not the only one affected by this scam. Help protect others by telling us how the scam affected you.\":\"Vous n'\\xEAtes pas la seule personne affect\\xE9e par cette fraude. Aidez-nous \\xE0 prot\\xE9ger les autres en nous expliquant comment la fraude vous a affect\\xE9.\",\"Your reference number is <0>#NC300234234</0>. Keep this number for your records or to add more information later.\":\"Votre num\\xE9ro de r\\xE9f\\xE9rence est le <0>#NC300234234</0>. Conservez ce num\\xE9ro dans vos dossiers pour ajouter des informations plus tard.\",\"confirmationPage.ImpactTitle\":\"R\\xE9percussions\",\"confirmationPage.contactIntro\":\"Indiquez vos coordonn\\xE9es afin que nous puissions vous envoyer une confirmation de votre rapport.\",\"confirmationPage.contactTitle\":\"Contact\",\"confirmationPage.impactIntro\":\"Dites-nous en quoi l\\u2019escroquerie vous a touch\\xE9 afin que nous puissions mieux aider les autres personnes touch\\xE9es.\",\"confirmationPage.scamIntro\":\"Parlez-nous de votre exp\\xE9rience afin que nous puissions emp\\xEAcher que cela se reproduise.\",\"confirmationPage.scamTitle\":\"Arnaque\",\"confirmationPage.suspectIntro\":\"Partagez tous les d\\xE9tails que vous pouvez conna\\xEEtre afin que la police puisse essayer d'identifier les suspects.\",\"confirmationPage.suspectTitle\":\"Suspecte\",\"confirmationPage.timeFrameIntro\":\"Si vous le pouvez, donnez-nous une id\\xE9e du moment o\\xF9 l'escroquerie a eu lieu afin que la police puisse enqu\\xEAter.\",\"confirmationPage.timeFrameTitle\":\"Plage de temps\",\"confirmationPage.title\":\"R\\xE9visez votre rapport\",\"contact information\":\"\\xE0 vos coordonn\\xE9es\",\"fileUpload.added\":\"Fichier ajout\\xE9\",\"fileUpload.removed\":\"Fichier supprim\\xE9\",\"landingPage.intro\":\"N'importe qui peut \\xEAtre victime d'une fraude. De nouvelles fraudes sont invent\\xE9es chaque jour, et elles ne sont pas toujours facile \\xE0 reconna\\xEEtre.\",\"landingPage.nextButton\":\"Signaler maintenant \\u276F\",\"landingPage.required0\":\"Avant de commencer, recueillez les informations que vous pouvez au sujet de la fraude :\",\"landingPage.required1\":\"Dates auxquelles la fraude a eu lieu\",\"landingPage.required2\":\"Descriptions de ce qui s'est pass\\xE9\",\"landingPage.required3\":\"D\\xE9tails sur l'origine de la fraude\",\"landingPage.required4\":\"Documents, captures d'\\xE9crans ou re\\xE7us\",\"landingPage.summary\":\"Votre signalement aide la GRC \\xE0 en apprendre plus sur ces crimes. Il aidera aussi les services de police partout au Canada \\xE0 trouver les cybercriminels.\",\"landingPage.title\":\"Signalez une fraude\",\"loading...\":\"chargement en cours...\",\"money lost\":\"\\xE0 l'argent perdu\",\"nextStepsPage.helpResource\":\"O\\xF9 pouvez-vous obtenir de l'aide?\",\"nextStepsPage.helpResource1\":\"Parler \\xE0 quelqu'un et obtenir de l'aide\",\"nextStepsPage.helpResource2\":\"Trouvez des astuces pour vous prot\\xE9ger dans le futur\",\"nextStepsPage.helpResource3\":\"Suivez les tendances des arnaques\",\"nextStepsPage.nextStepDetail\":\"La GRC analysera votre rapport et le combinera avec d'autres documents semblables pour aider la police \\xE0 travers le Canada \\xE0 traquer les cybercriminels.\",\"nextStepsPage.nextStepSummary\":\"Qu'est-ce qui se passe ensuite\",\"nextStepsPage.otherReportOption\":\"Vous avez d'autres options de rapport\",\"nextStepsPage.otherReportOption1\":\"Rendez-vous directement \\xE0 l'endroit o\\xF9 l'escroquerie s'est produite.\",\"nextStepsPage.otherReportOption2\":\"Pr\\xE9sentez-vous \\xE0 votre institution financi\\xE8re si vous avez perdu de l'argent.\",\"nextStepsPage.otherReportOption3\":\"Signaler aux bureaux de cr\\xE9dit, <0> Equifax </0> et <1> TransUnion </1>, si votre identit\\xE9 a \\xE9t\\xE9 vol\\xE9e\",\"nextStepsPage.referenceNumber\":\"# NC300234234\",\"nextStepsPage.summary\":\"Nous vous avons envoy\\xE9 un courrier \\xE9lectronique avec un r\\xE9sum\\xE9 de votre rapport. Votre num\\xE9ro de r\\xE9f\\xE9rence est <0>#NC300234234</0>.\",\"nextStepsPage.title\":\"Merci d'avoir signal\\xE9\",\"previous page\":\"\\xE0 la page pr\\xE9c\\xE9dente\",\"scammerDetail.addFileButtom\":\"Ajouter le fichier\",\"scammerDetail.backButton\":\"l'arnaque\",\"scammerDetail.detail1\":\"Qui l'escroc a pr\\xE9tendu \\xEAtre\",\"scammerDetail.detail2\":\"O\\xF9 ils vous ont demand\\xE9 d'envoyer des choses\",\"scammerDetail.detail3\":\"Quelle langue ils utilisaient pour communiquer\",\"scammerDetail.detail4\":\"Des captures d'\\xE9cran, des messages ou des re\\xE7us\",\"scammerDetail.details\":\"Pensez \\xE0 inclure des choses telles que:\",\"scammerDetail.fileDescription\":\"D\\xE9crivez ce que ce fichier montre\",\"scammerDetail.intro\":\"Tout indice sur la source de l\\u2019escroquerie peut aider la police \\xE0 retrouver l\\u2019escroc.\",\"scammerDetail.reminder\":\"N'oubliez pas d'inclure vos adresses \\xE9lectroniques, num\\xE9ros de t\\xE9l\\xE9phone ou liens de sites Web.\",\"scammerDetail.removeFileButton\":\"Effacer le fichier\",\"scammerDetail.summary\":\"Que savez-vous sur l'origine de l'arnaque\",\"scammerDetail.title\":\"Ajouter des indices suspects\",\"start page\":\"\\xE0 la premi\\xE8re page\",\"supporting files\":\"aux documents li\\xE9s \\xE0 l'incident\",\"suspect clues\":\"aux renseignements sur le suspect\",\"the impact\":\"aux r\\xE9percussions\",\"the scam\":\"\\xE0 la fraude\",\"the start page\":\"\\xE0 la premi\\xE8re page\",\"the suspect\":\"au suspect\",\"the timeframe\":\"aux dates de la fraude\",\"timeFramePage.backButton\":\"la page de d\\xE9marrage\",\"timeFramePage.endDate\":\"Fin approximative\",\"timeFramePage.endDateExample\":\"Par exemple: 2019-04-28\",\"timeFramePage.intro\":\"Ce n\\u2019est pas grave si vous ne savez pas exactement quand cela a eu lieu. Vous pouvez donner votre meilleure estimation ou laisser ce champ vide.\",\"timeFramePage.startDate\":\"D\\xE9but approximatif\",\"timeFramePage.startDateExample\":\"Par exemple: 2019-04-28\",\"timeFramePage.title\":\"Quand l'escroquerie est-elle arriv\\xE9e?\",\"what happened\":\"\\xE0 ce qui s'est pass\\xE9\",\"whatHappendPage.backButton\":\"Le d\\xE9lai\",\"whatHappendPage.details1\":\"Pensez \\xE0 inclure des choses telles que:\",\"whatHappendPage.details2\":\"Quel app, site Web ou appareil que vous utilisiez\",\"whatHappendPage.details3\":\"Comment l'escroc vous a contact\\xE9\",\"whatHappendPage.details4\":\"Ce qu'ils ont promis, menac\\xE9 ou vol\\xE9\",\"whatHappendPage.hint\":\"Parlez-nous en vos propres mots\",\"whatHappendPage.intro1\":\"Ce qui s'est pass\\xE9 n'est pas de ta faute. Les escrocs utilisent un certain nombre de techniques pour obtenir ce qu'ils veulent.\",\"whatHappendPage.summary\":\"Qu'est-il arriv\\xE9?\",\"whatHappendPage.title\":\"D\\xE9crivez ce qui s'est pass\\xE9\",\"your contact information\":\"\\xE0 vos coordonn\\xE9es\",\"{0, plural, one {# file attached} other {# files attached}}\":function(a){return[a(\"0\",\"plural\",{one:[\"#\",\" fichier joint\"],other:[\"#\",\" fichiers joints\"]})]},\"{startDate} to {endDate}\":function(a){return[a(\"startDate\"),\" au \",a(\"endDate\")]},\"\\u276E \\xA0 Report another scam\":\"\\u276E \\xA0 Signaler une autre fraude\"}};","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(updatedModules, renewedModules) {\n\tvar unacceptedModules = updatedModules.filter(function(moduleId) {\n\t\treturn renewedModules && renewedModules.indexOf(moduleId) < 0;\n\t});\n\tvar log = require(\"./log\");\n\n\tif (unacceptedModules.length > 0) {\n\t\tlog(\n\t\t\t\"warning\",\n\t\t\t\"[HMR] The following modules couldn't be hot updated: (They would need a full reload!)\"\n\t\t);\n\t\tunacceptedModules.forEach(function(moduleId) {\n\t\t\tlog(\"warning\", \"[HMR]  - \" + moduleId);\n\t\t});\n\t}\n\n\tif (!renewedModules || renewedModules.length === 0) {\n\t\tlog(\"info\", \"[HMR] Nothing hot updated.\");\n\t} else {\n\t\tlog(\"info\", \"[HMR] Updated modules:\");\n\t\trenewedModules.forEach(function(moduleId) {\n\t\t\tif (typeof moduleId === \"string\" && moduleId.indexOf(\"!\") !== -1) {\n\t\t\t\tvar parts = moduleId.split(\"!\");\n\t\t\t\tlog.groupCollapsed(\"info\", \"[HMR]  - \" + parts.pop());\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t\tlog.groupEnd(\"info\");\n\t\t\t} else {\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t}\n\t\t});\n\t\tvar numberIds = renewedModules.every(function(moduleId) {\n\t\t\treturn typeof moduleId === \"number\";\n\t\t});\n\t\tif (numberIds)\n\t\t\tlog(\n\t\t\t\t\"info\",\n\t\t\t\t\"[HMR] Consider using the NamedModulesPlugin for module names.\"\n\t\t\t);\n\t}\n};\n","var logLevel = \"info\";\n\nfunction dummy() {}\n\nfunction shouldLog(level) {\n\tvar shouldLog =\n\t\t(logLevel === \"info\" && level === \"info\") ||\n\t\t([\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\") ||\n\t\t([\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\");\n\treturn shouldLog;\n}\n\nfunction logGroup(logFn) {\n\treturn function(level, msg) {\n\t\tif (shouldLog(level)) {\n\t\t\tlogFn(msg);\n\t\t}\n\t};\n}\n\nmodule.exports = function(level, msg) {\n\tif (shouldLog(level)) {\n\t\tif (level === \"info\") {\n\t\t\tconsole.log(msg);\n\t\t} else if (level === \"warning\") {\n\t\t\tconsole.warn(msg);\n\t\t} else if (level === \"error\") {\n\t\t\tconsole.error(msg);\n\t\t}\n\t}\n};\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n/* eslint-enable node/no-unsupported-features/node-builtins */\n\nmodule.exports.group = logGroup(group);\n\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\n\nmodule.exports.groupEnd = logGroup(groupEnd);\n\nmodule.exports.setLogLevel = function(level) {\n\tlogLevel = level;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals __resourceQuery */\nif (module.hot) {\n\tvar hotPollInterval = +__resourceQuery.substr(1) || 10 * 60 * 1000;\n\tvar log = require(\"./log\");\n\n\tvar checkForUpdate = function checkForUpdate(fromUpdate) {\n\t\tif (module.hot.status() === \"idle\") {\n\t\t\tmodule.hot\n\t\t\t\t.check(true)\n\t\t\t\t.then(function(updatedModules) {\n\t\t\t\t\tif (!updatedModules) {\n\t\t\t\t\t\tif (fromUpdate) log(\"info\", \"[HMR] Update applied.\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\t\t\t\t\tcheckForUpdate(true);\n\t\t\t\t})\n\t\t\t\t.catch(function(err) {\n\t\t\t\t\tvar status = module.hot.status();\n\t\t\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] Cannot apply update.\");\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] \" + (err.stack || err.message));\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] You need to restart the application!\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog(\n\t\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\t\"[HMR] Update failed: \" + (err.stack || err.message)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t};\n\tsetInterval(checkForUpdate, hotPollInterval);\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n","/**@jsx jsx **/\nimport React from 'react'\nimport { Global, css, jsx } from '@emotion/core'\nimport { I18n } from '@lingui/react'\nimport { ThemeProvider } from 'emotion-theming'\nimport theme from './theme'\nimport { Query } from 'react-apollo'\nimport { Home } from './Home'\nimport { Helmet } from 'react-helmet-async'\nimport { Trans } from '@lingui/macro'\nimport { GET_LANGUAGE_QUERY } from './utils/queriesAndMutations'\nimport { TopBanner } from './components/topbanner'\nimport { PhaseBanner } from './components/phase-banner'\nimport { WarningBanner } from './components/warning-banner'\nimport { Footer } from './components/footer'\nimport { FooterLink } from './components/link'\nimport { Content } from './components/container'\n\nconst App = () => (\n  <I18n>\n    {({ i18n }) => {\n      return (\n        <Query query={GET_LANGUAGE_QUERY}>\n          {({ data: { language } }) => (\n            <React.Fragment>\n              <Helmet>\n                <html lang={language} />\n                <meta charset=\"utf-8\" />\n                console.log(i18n) return (\n                <title lang={language}>{i18n._('Report a scam')}</title>\n                )\n                <link rel=\"manifest\" href=\"/manifest.json\" />\n                <meta\n                  name=\"viewport\"\n                  content=\"width=device-width, initial-scale=1\"\n                />\n                <link\n                  rel=\"apple-touch-icon\"\n                  sizes=\"192x192\"\n                  href=\"/apple-touch-icon.png\"\n                />\n                <script>\n                  const appInsights = require(\"applicationinsights\");\n                  appInsights.setup(\"d9e72e14-a4f8-467c-bd8b-b4e3a6f0c229\");\n                  appInsights.start();\n                </script>\n                <script>\n                  {`\n              window.__APOLLO_STATE__=${JSON.stringify({\n                language,\n              })}`}\n                </script>\n                {process.env.NODE_ENV === 'production' ? (\n                  <script>\n                    {`\n              if ('serviceWorker' in navigator) {\n                window.addEventListener('load', () => {\n                  navigator.serviceWorker.register('service-worker.js')\n                });\n              }\n            `}\n                  </script>\n                ) : null}\n              </Helmet>\n              <Global\n                styles={css`\n                  html,\n                  body {\n                    height: 100%;\n                  }\n\n                  body {\n                    margin: 0;\n                    padding: 0;\n                  }\n\n                  #root {\n                    display: flex;\n                    flex-direction: column;\n                    height: 100%;\n                  }\n                  @font-face {\n                    font-family: 'robotobold';\n                    src: url('fonts/roboto-bold.woff2') format('woff2'),\n                      url('fonts/roboto-bold.woff') format('woff');\n                    font-weight: bold;\n                    font-style: normal;\n                  }\n                `}\n              />\n              <ThemeProvider theme={theme}>\n                <header>\n                  <WarningBanner />\n                  <PhaseBanner phase={<Trans>ALPHA</Trans>} phaseColor=\"purple\">\n                    <Trans>This site will change as we test ideas.</Trans>\n                  </PhaseBanner>\n                  <TopBanner lang={language} bg=\"black\" />\n                </header>\n                <Content>\n                  <Home />\n                </Content>\n\n                <Footer bg=\"black\">\n                  <FooterLink\n                    href={\n                      language === 'en'\n                        ? 'https://digital.canada.ca/legal/privacy/'\n                        : 'https://numerique.canada.ca/transparence/confidentialite/'\n                    }\n                  >\n                    <Trans>Privacy</Trans>\n                  </FooterLink>\n                  <FooterLink\n                    href={\n                      language === 'en'\n                        ? 'https://digital.canada.ca/legal/terms/'\n                        : 'https://numerique.canada.ca/transparence/avis/'\n                    }\n                  >\n                    <Trans>Terms and Conditions</Trans>\n                  </FooterLink>\n                </Footer>\n              </ThemeProvider>\n            </React.Fragment>\n          )}\n        </Query>\n      )\n    }}\n  </I18n>\n)\n\nexport default App\n","import React from 'react'\nimport { Router } from '@reach/router'\nimport styled from '@emotion/styled'\nimport { PageNotFound } from './PageNotFound'\nimport { RootLandingPage } from './RootLandingPage'\nimport { FileUploadPage } from './p1/FileUploadPage'\nimport { Suspectinfo } from './p1/SuspectInfoYesNoPage'\nimport { ScamInfoPage } from './p1/ScamInfoPage'\nimport { MoneyLostPage } from './p1/MoneyLostPage'\nimport { ConfirmationPage } from './p1/ConfirmationPage'\nimport { SuspectInfoPage } from './p1/SuspectInfoPage'\nimport { ContactInfoPage } from './p1/ContactInfoPage'\nimport { LoseMoney } from './p1/MoneyLostYesNoPage'\nimport { ThankYou } from './p1/ThankYou'\nimport { Willbecontacted } from './p1/WillBeContactedYesNoPage'\nimport { LandingPage } from './p1/LandingPage'\nimport { FilesToUpload } from './p1/FileUploadYesNoPage'\nimport { LandingPage as P2LandingPage } from './p2/LandingPage'\nimport { WhatHappenedPage as P2WhatHappenedPage } from './p2/WhatHappenedPage'\nimport { ContactInfoPage as P2ContactInfoPage } from './p2/ContactInfoPage'\nimport { ScammerDetailsPage as P2ScammerDetailsPage } from './p2/ScammerDetailsPage'\nimport { ConfirmationPage as P2ConfirmationPage } from './p2/ConfirmationPage'\nimport { NextSteps as P2NextSteps } from './p2/NextSteps'\nimport { TimeFramePage as P2TimeFramePage } from './p2/TimeFramePage'\nimport { ImpactStatementPage as P2ImpactStatementPage } from './p2/ImpactStatementPage'\n\nconst Root = styled('div')`\n  margin: 20pt;\n`\nconst Screen = styled('div')`\n  margin-top: 0;\n`\n\nconst ScrollToTop = ({ children, location }) => {\n  React.useEffect(() => window.scrollTo(0, 60), [location.pathname])\n  return children\n}\n\nexport const Home = () => (\n  <Root>\n    <Screen>\n      <Router primary={false}>\n        <ScrollToTop default>\n          <PageNotFound default />\n          <RootLandingPage path=\"/\" />\n\n          <LandingPage path=\"/p1\" />\n          <ScamInfoPage path=\"/p1/scaminfo\" />\n          <Suspectinfo path=\"/p1/suspectinfoquestion\" />\n          <SuspectInfoPage path=\"/p1/suspectinfo\" />\n          <LoseMoney path=\"/p1/moneylostquestion\" />\n          <MoneyLostPage path=\"/p1/moneylost\" />\n          <FilesToUpload path=\"/p1/uploadfilesquestion\" />\n          <FileUploadPage path=\"/p1/uploadfiles\" />\n          <Willbecontacted path=\"/p1/contactinfoquestion\" />\n          <ContactInfoPage path=\"/p1/contactinfo\" />\n          <ConfirmationPage path=\"/p1/confirmation\" />\n          <ThankYou path=\"/p1/thankyou\" />\n\n          <P2LandingPage path=\"/p2\" />\n          <P2WhatHappenedPage path=\"/p2/whathappened\" />\n          <P2ContactInfoPage path=\"/p2/contactinfo\" />\n          <P2ScammerDetailsPage path=\"/p2/scammerdetails\" />\n          <P2ConfirmationPage path=\"/p2/confirmation\" />\n          <P2NextSteps path=\"/p2/nextsteps\" />\n          <P2TimeFramePage path=\"/p2/timeframe\" />\n          <P2ImpactStatementPage path=\"/p2/impact\" />\n        </ScrollToTop>\n      </Router>\n    </Screen>\n  </Root>\n)\n","import React from 'react'\nimport { ApolloConsumer } from 'react-apollo'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\nimport { ButtonLink } from './components/button-link'\n\nconst LanguageSwitcherStyle = styled('section')`\n  align-content: right;\n  display: block-inline;\n`\n\nconst languageNames = {\n  en: 'English',\n  fr: 'Français',\n}\n\nexport const LanguageSwitcher = props => (\n  <ApolloConsumer>\n    {client => (\n      <LanguageSwitcherStyle>\n        <ButtonLink onClick={() => client.writeData({ data: props })}>\n          {languageNames[props.language]}\n        </ButtonLink>\n      </LanguageSwitcherStyle>\n    )}\n  </ApolloConsumer>\n)\n\nLanguageSwitcher.propTypes = {\n  language: PropTypes.string.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Query } from 'react-apollo'\nimport { Trans, I18nProvider } from '@lingui/react'\nimport gql from 'graphql-tag'\nimport { P } from './components/paragraph'\nimport catalogFr from '../locale/fr/messages.js'\nimport catalogEn from '../locale/en/messages.js'\nconst catalogs = { fr: catalogFr, en: catalogEn }\n\nexport const LanguageSwitching = ({ children }) => (\n  <Query\n    query={gql`\n      {\n        language @client\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      return (\n        <I18nProvider language={data.language} catalogs={catalogs}>\n          {loading ? (\n            <P>\n              <Trans>loading...</Trans>\n            </P>\n          ) : null}\n          {error ? (\n            <P color=\"crimson\" fontWeight=\"bolder\">\n              Error\n            </P>\n          ) : null}\n          {children}\n        </I18nProvider>\n      )\n    }}\n  </Query>\n)\n\nLanguageSwitching.propTypes = { children: PropTypes.node.isRequired }\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from './components/header'\nimport { P } from './components/paragraph'\nimport { TrackPageViews } from './TrackPageViews'\n\nconst CenterContent = styled('div')`\n  text-align: center;\n`\n\nexport const PageNotFound = () => (\n  <CenterContent>\n    <H1>\n      <Trans>Page not found</Trans>\n    </H1>\n    <P>\n      <Trans>Sorry, the page you were trying to view does not exist.</Trans>\n    </P>\n\n    <TrackPageViews />\n  </CenterContent>\n)\n","/**@jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { Trans } from '@lingui/macro'\nimport { ButtonsContainerLanding } from './components/buttons-container'\nimport { Layout } from './components/layout'\nimport { H1 } from './components/header'\n\nexport const RootLandingPage = () => (\n  <Layout maxWidth={['300px', null, '400px']}>\n    <H1>\n      <Trans>Report a scam</Trans>\n    </H1>\n    <ButtonsContainerLanding />\n  </Layout>\n)\n","import React from 'react'\nimport ReactGA from 'react-ga'\nimport Component from '@reach/component-component'\nimport { Location } from '@reach/router'\n\nconst GA = process.env.RAZZLE_GOOGLE_ANALYTICS_ID\n\nReactGA.initialize(GA, {\n  testMode: process.env.NODE_ENV === 'production' ? false : true,\n})\nReactGA.set({ anonymizeIp: true })\n\nconst logPageView = path => {\n  if (typeof window === 'object') {\n    ReactGA.pageview(path)\n  }\n}\n\nexport const TrackPageViews = () => (\n  <Location>\n    {({ location }) => (\n      <Component\n        didMount={() => logPageView(location.pathname)}\n        didUpdate={() => logPageView(location.pathname)}\n      />\n    )}\n  </Location>\n)\n","import { Input } from '../input'\nimport { withProps } from 'recompose'\nimport theme from '../../theme'\n\nexport const TextInput = withProps({\n  type: 'text',\n  colors: 'inputField',\n  fontSize: theme.fontSizes,\n})(Input)\n","/** @jsx jsx **/\nimport { jsx, css } from '@emotion/core'\nimport { Link } from '../link'\nimport { Trans } from '@lingui/macro'\nimport PropTypes from 'prop-types'\n\nexport const BackButton = ({ route = '', children }) => (\n  <div\n    css={css`\n      margin-bottom: 2.5rem;\n\n      a {\n        text-decoration: none;\n        border-bottom: 1px solid;\n        padding-bottom: 3px;\n\n        span {\n          font-size: 19px;\n        }\n\n        span:first-of-type {\n          font-size: 12px;\n          position: relative;\n          bottom: 3px;\n        }\n      }\n    `}\n  >\n    <Link type=\"button\" to={route} textAlign=\"left\">\n      <Trans>\n        <span aria-label=\" \">&#9664;</span> <span>Back to</span>{' '}\n        <span>{children}</span>\n      </Trans>\n    </Link>\n  </div>\n)\n\nBackButton.propTypes = {\n  route: PropTypes.string,\n  children: PropTypes.any,\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { fontSize, fontWeight, lineHeight, space, color } from 'styled-system'\nimport PropTypes from 'prop-types'\nimport { cleanProps } from '../../utils/cleanProps'\n\nconst BaseButtonLink = styled('button', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  background: none;\n  border: none;\n  color: white;\n  ${fontSize};\n  ${fontWeight};\n  ${lineHeight};\n  ${color};\n  ${space};\n  text-decoration: underline;\n  &:hover {\n    cursor: pointer;\n  }\n  &:focus {\n    outline: 3px solid ${({ theme }) => theme.colors.focusColor};\n  }\n`\n\nexport const ButtonLink = props => (\n  <BaseButtonLink\n    fontSize={[1, null, 2]}\n    fontWeight=\"normal\"\n    lineHeight={[1, null, 2]}\n    color=\"white\"\n    {...props}\n  />\n)\n\nButtonLink.propTypes = {\n  children: PropTypes.node,\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport {\n  fontSize,\n  fontWeight,\n  lineHeight,\n  space,\n  colorStyle,\n  color,\n} from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\nimport PropTypes from 'prop-types'\n\nconst BaseButton = styled('button', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontBold};\n  margin: 0;\n  border: 0;\n  ${fontSize};\n  ${fontWeight};\n  ${lineHeight};\n  ${colorStyle};\n  ${color};\n  ${space};\n`\n\nexport const Button = props => (\n  <BaseButton\n    fontSize={[2, null, 3]}\n    fontWeight=\"normal\"\n    lineHeight={[2, null, 3]}\n    colors=\"button\"\n    marginTop={[2, null, 3]}\n    py={1}\n    px={[2, null, 3]}\n    {...props}\n  />\n)\n\nButton.propTypes = {\n  children: PropTypes.node,\n}\n","/** @jsx jsx */\nimport { Container } from '../container'\nimport { css, jsx } from '@emotion/core'\nimport { Button } from '../button'\nimport { Trans } from '@lingui/macro'\nimport { Link, ButtonLink } from '../link'\nimport PropTypes from 'prop-types'\n\nexport const ButtonsContainer = ({\n  submit = false,\n  landing = false,\n  cancel = true,\n  buttonLink = true,\n  route = '',\n  cancelRoute = '/p2/',\n  nextPage = '',\n  onClick = () => {},\n}) => (\n  <Container\n    mt=\"1rem\"\n    mb=\"4rem\"\n    display={['flex', 'block', 'flex']}\n    alignItems=\"center\"\n    css={css`\n      button,\n      div[name='buttonlink-container'] a {\n        padding: 0.7rem 1.5rem;\n        width: 100%;\n        text-align: center;\n      }\n\n      @media (max-width: 640px) {\n        div[name='buttonlink-container'] a {\n          padding: 0.7rem 0;\n        }\n      }\n    `}\n  >\n    {buttonLink === false ? (\n      <Container mt=\"1rem\">\n        <Button type=\"submit\" onClick={onClick}>\n          {submit === true ? (\n            <Trans>Submit report &nbsp; ❯</Trans>\n          ) : nextPage === 'Report now' ? (\n            ''\n          ) : (\n            <Trans>Next</Trans>\n          )}\n\n          {nextPage === 'Scammer details' ? (\n            <Trans>: Clues about the suspect</Trans>\n          ) : nextPage === 'Money lost' ? (\n            <Trans>: Money lost</Trans>\n          ) : nextPage === 'Report now' ? (\n            <Trans>Report now ❯</Trans>\n          ) : nextPage === 'Impact of scam' ? (\n            <Trans>: Impact of the scam</Trans>\n          ) : nextPage === 'What happened' ? (\n            <Trans>: What happened</Trans>\n          ) : nextPage === 'Supporting files' ? (\n            <Trans>: Add files</Trans>\n          ) : nextPage === 'Contact info' ? (\n            <Trans>: Contact information</Trans>\n          ) : nextPage === 'Confirm information' ? (\n            <Trans>: Review report</Trans>\n          ) : null}\n        </Button>\n      </Container>\n    ) : (\n      <Container name=\"buttonlink-container\">\n        {landing === true ? (\n          <ButtonLink color=\"black\" mb={[3, null, 5]} to={route}>\n            <Trans>Report now ❯</Trans>\n          </ButtonLink>\n        ) : (\n          <ButtonLink color=\"black\" mb={[3, null, 5]} to={route}>\n            <Trans> ❮ &nbsp; Report another scam</Trans>\n          </ButtonLink>\n        )}\n      </Container>\n    )}\n\n    {cancel === true ? (\n      <Container mt=\"1.9rem\" ml={['3rem', '0', '3rem']}>\n        <Link type=\"button\" color=\"black\" to={cancelRoute} textAlign=\"center\">\n          <Trans>Cancel report</Trans>\n        </Link>\n      </Container>\n    ) : null}\n  </Container>\n)\n\nexport const ButtonsContainerLanding = () => (\n  <Container\n    mt=\"1rem\"\n    mb=\"4rem\"\n    display={['flex', 'block', 'flex']}\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n    css={css`\n      button,\n      div[name='buttonlink-container'] a {\n        padding: 0.7rem 1.5rem;\n        text-align: center;\n      }\n\n      @media (max-width: 640px) {\n        div[name='buttonlink-container'] a {\n          padding: 0.7rem 0;\n          width: 100%;\n        }\n      }\n    `}\n  >\n    <Container name=\"buttonlink-container\">\n      <ButtonLink textAlign=\"center\" to=\"/p1\">\n        <Trans>Prototype 1</Trans>\n      </ButtonLink>\n    </Container>\n    <Container name=\"buttonlink-container\">\n      <ButtonLink textAlign=\"center\" to=\"/p2\">\n        <Trans>Prototype 2</Trans>\n      </ButtonLink>\n    </Container>\n  </Container>\n)\n\nexport const ButtonsContainerYesNo = ({\n  yesRoute = '',\n  noRoute = '',\n  marginB = '10em',\n}) => (\n  <Container\n    mt=\"1rem\"\n    mb=\"4rem\"\n    display={['flex', 'block', 'flex']}\n    alignItems=\"center\"\n    css={css`\n      button,\n      div[name='buttonlink-container'] a {\n        padding: 0.7rem 2.5rem;\n        text-align: center;\n      }\n\n      div[name='buttonlink-container'] a:first-of-type {\n        margin-right: 1rem;\n      }\n\n      @media (max-width: 640px) {\n        div[name='buttonlink-container'] a {\n          padding: 0.7rem 0;\n          width: 100%;\n        }\n      }\n\n      margin-bottom: ${marginB};\n    `}\n  >\n    <Container name=\"buttonlink-container\">\n      <ButtonLink textAlign=\"center\" to={yesRoute}>\n        <Trans>Yes</Trans>\n      </ButtonLink>\n    </Container>\n    <Container name=\"buttonlink-container\">\n      <ButtonLink textAlign=\"center\" to={noRoute}>\n        <Trans>No</Trans>\n      </ButtonLink>\n    </Container>\n  </Container>\n)\n\nButtonsContainer.propTypes = {\n  buttonLink: PropTypes.bool.isRequired,\n  cancel: PropTypes.bool.isRequired,\n  cancelRoute: PropTypes.string,\n  buttonTitle: PropTypes.string,\n  route: PropTypes.string,\n  landing: PropTypes.bool,\n  submit: PropTypes.bool,\n  nextPage: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nButtonsContainerYesNo.propTypes = {\n  yesRoute: PropTypes.string.isRequired,\n  noRoute: PropTypes.string.isRequired,\n  marginB: PropTypes.string,\n}\n","/** @jsx jsx */\nimport PropTypes from 'prop-types'\nimport { jsx } from '@emotion/core'\nimport { Input } from '../input'\nimport { Container } from '../container'\nimport { Text } from '../text'\nimport { UniqueID } from '../unique-id'\nimport { fontSize, fontWeight, lineHeight, space, color } from 'styled-system'\nimport { BREAKPOINTS } from '../../theme'\n\nconst mq = BREAKPOINTS.map(bp => `@media (min-width: ${bp})`)\n\nexport const Checkbox = ({ label, ...props }) => {\n  return (\n    <UniqueID>\n      {id => {\n        return (\n          <Container\n            display=\"block\"\n            position=\"relative\"\n            pl={6}\n            mt={[1, null, 1]}\n          >\n            <Input\n              type=\"checkbox\"\n              position=\"absolute\"\n              left=\"0\"\n              top=\"0\"\n              zIndex=\"1\"\n              m={0}\n              css={theme => ({\n                height: theme.checkboxes.size,\n                width: theme.checkboxes.size,\n                opacity: 0,\n                zoom: '1',\n                ':checked + span:after': {\n                  opacity: '1',\n                },\n                ':focus + span:before': {\n                  boxShadow: `0 0 0 3px ${theme.colors.yellow}`,\n                },\n              })}\n              {...props}\n              id={id}\n            />\n            <Text\n              m={0}\n              p={0}\n              pr={2}\n              pl={2}\n              display=\"block\"\n              color=\"black\"\n              css={theme => ({\n                height: theme.checkboxes.labelSize,\n                '::before': {\n                  content: '\"\"',\n                  display: 'block',\n                  border: `2px solid ${theme.colors.black}`,\n                  background: 'transparent',\n                  [mq[0]]: {\n                    width: theme.fontSizes[3],\n                    height: theme.fontSizes[3],\n                  },\n                  [mq[2]]: {\n                    width: theme.fontSizes[4],\n                    height: theme.fontSizes[4],\n                  },\n                  position: 'absolute',\n                  top: '0',\n                  left: '0',\n                },\n                '::after': {\n                  content: '\"\"',\n                  border: 'solid',\n                  color: theme.colors.black,\n                  background: 'transparent',\n                  borderTopColor: 'transparent',\n                  position: 'absolute',\n                  top: '8px',\n                  [mq[0]]: {\n                    left: '5px',\n                    width: `${9 * props.checkscale}px`,\n                    height: `${3 * props.checkscale}px`,\n                    borderWidth: '0 0 3px 3px',\n                  },\n                  [mq[2]]: {\n                    left: '6px',\n                    width: `${11 * props.checkscale}px`,\n                    height: `${5 * props.checkscale}px`,\n                    borderWidth: '0 0 4px 4px',\n                  },\n                  transform: 'rotate(-45deg)',\n                  zoom: '1',\n                  opacity: '0',\n                },\n              })}\n              htmlFor={id}\n              {...props}\n            >\n              {label}\n            </Text>\n          </Container>\n        )\n      }}\n    </UniqueID>\n  )\n}\n\nCheckbox.defaultProps = {\n  fontWeight: '400',\n  fontSize: [2, null, 3],\n  lineHeight: [2, null, 3],\n  checkscale: '1',\n}\n\nCheckbox.propTypes = {\n  label: PropTypes.node.isRequired,\n  ...fontSize.propTypes,\n  ...fontWeight.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...color.propTypes,\n}\n","/** @jsx jsx **/\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\nimport PropTypes from 'prop-types'\n\nimport {\n  alignItems,\n  alignContent,\n  justifyContent,\n  flexWrap,\n  flexBasis,\n  flexDirection,\n  width,\n  maxWidth,\n  height,\n  maxHeight,\n  color,\n  borders,\n  borderColor,\n  flex,\n  justifySelf,\n  display,\n  alignSelf,\n  space,\n  textAlign,\n  position,\n  top,\n  right,\n  bottom,\n  left,\n  zIndex,\n} from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\n\nexport const Container = styled('div', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  ${alignItems}\n  ${alignContent}\n  ${justifyContent}\n  ${flex}\n  ${flexWrap}\n  ${flexBasis}\n  ${flexDirection}\n  ${width}\n  ${maxWidth}\n  ${height}\n  ${maxHeight}\n  ${color}\n  ${display}\n  ${space}\n  ${justifySelf}\n  ${alignSelf}\n  ${borders}\n  ${borderColor}\n  ${textAlign}\n  ${position}\n  ${top}\n  ${bottom}\n  ${left}\n  ${right}\n  ${zIndex}\n`\nexport const Content = props => (\n  <main\n    css={css`\n      flex: 1 0 auto;\n    `}\n  >\n    <Container m=\"auto\" width={[9 / 10, null, 4 / 5]} {...props}>\n      {props.children}\n    </Container>\n  </main>\n)\n\nContent.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const InfoCard = props => (\n  <Container\n    border=\"2px solid black\"\n    borderRadius=\"5px\"\n    padding=\"10px\"\n    backgroundColor=\"infoCard\"\n    {...props}\n  />\n)\n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#uploader:focus + label {\\n  outline: 3px solid #ffbf47;\\n}\\n\", \"\"]);\n\n// exports\n","/** @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx } from '@emotion/core'\nimport { fontSize, fontWeight, lineHeight, space, color } from 'styled-system'\nimport { Label } from '../label'\nimport { Input } from '../input'\nrequire('./index.css')\n\nexport const FileUpload = ({ onChange, accept, ...props }) => {\n  return (\n    <React.Fragment>\n      <Input\n        type=\"file\"\n        id=\"uploader\"\n        name=\"uploader\"\n        accept={accept}\n        onChange={onChange}\n        width=\"0\"\n      />\n      <Label colors=\"button\" padding={1} htmlFor=\"uploader\" {...props}>\n        {props.children}\n      </Label>\n    </React.Fragment>\n  )\n}\n\nFileUpload.defaultProps = {\n  accept: undefined,\n  fontWeight: '400',\n  fontSize: [2, null, 3],\n  lineHeight: [2, null, 3],\n}\n\nFileUpload.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  accept: PropTypes.string,\n  ...fontSize.propTypes,\n  ...fontWeight.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...color.propTypes,\n}\n","import PropTypes from 'prop-types'\n/** @jsx jsx **/\nimport { jsx, css } from '@emotion/core'\nimport { Container } from '../container'\nimport WordMark from '../wordmark'\nimport { Ul } from '../unordered-list'\n\nexport const Footer = props => {\n  const { bg } = props\n\n  return (\n    <footer>\n      <Container\n        bg={bg}\n        display=\"flex\"\n        flexDirection=\"row\"\n        width={1}\n        height={55}\n        alignItems=\"center\"\n        data-testid=\"background-color\"\n        m=\"auto auto 0 auto\"\n        css={css`\n          flex-shrink: 0;\n        `}\n      >\n        <Container flex=\"1 1 auto\">\n          <Ul listStyleType=\"none\" mb={0}>\n            {props.children}\n          </Ul>\n        </Container>\n        <Container mr={3} width={['4em', null, '6em']}>\n          <WordMark\n            width=\"100%\"\n            flag=\"#fff\"\n            text=\"#fff\"\n            css={css`\n              display: block;\n            `}\n          />\n        </Container>\n      </Container>\n    </footer>\n  )\n}\n\nFooter.propTypes = {\n  children: PropTypes.any,\n  bg: PropTypes.string,\n}\n\nFooter.defaultProps = { bg: 'black' }\n","import {\n  fontSize,\n  lineHeight,\n  space,\n  color,\n  fontWeight,\n  textAlign,\n} from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\n\nexport const Header = styled('span', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  margin: 0;\n  ${fontSize};\n  ${lineHeight};\n  ${space};\n  ${color};\n  ${fontWeight};\n  ${textAlign};\n`\n\nHeader.propTypes = {\n  as: PropTypes.string.isRequired,\n  ...fontSize.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...color.propTypes,\n  ...fontWeight.propTypes,\n  ...textAlign.propTypes,\n}\n\nexport { H1, H2, H3, H4, H5, H6 } from './presets'\n","import React from 'react'\nimport { Header } from '.'\nimport PropTypes from 'prop-types'\n\nexport const H1 = props => (\n  <Header\n    as=\"h1\"\n    fontSize={[5, null, 7]}\n    lineHeight={[5, null, 7]}\n    mb=\"2rem\"\n    fontWeight=\"bold\"\n    {...props}\n  >\n    {props.children}\n  </Header>\n)\n\nH1.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const H2 = props => (\n  <Header\n    as=\"h2\"\n    fontSize={[5, null, 6]}\n    lineHeight={[5, null, 6]}\n    mb={4}\n    fontWeight=\"bold\"\n    {...props}\n  >\n    {props.children}\n  </Header>\n)\n\nH2.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const H3 = props => (\n  <Header\n    as=\"h3\"\n    fontSize={[4, null, 5]}\n    lineHeight={[4, null, 5]}\n    mb={4}\n    fontWeight=\"bold\"\n    {...props}\n  >\n    {props.children}\n  </Header>\n)\n\nH3.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const H4 = props => (\n  <Header\n    as=\"h4\"\n    fontSize={[3, null, 4]}\n    lineHeight={[3, null, 4]}\n    mb={4}\n    fontWeight=\"bold\"\n    {...props}\n  >\n    {props.children}\n  </Header>\n)\n\nH4.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const H5 = props => (\n  <Header\n    as=\"h5\"\n    fontSize={[2, null, 3]}\n    lineHeight={[2, null, 3]}\n    mb={4}\n    fontWeight=\"bold\"\n    {...props}\n  >\n    {props.children}\n  </Header>\n)\n\nH5.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const H6 = props => (\n  <Header\n    as=\"h6\"\n    fontSize={[2, null, 3]}\n    lineHeight={[2, null, 3]}\n    mb={4}\n    fontWeight=\"bold\"\n    {...props}\n  >\n    {props.children}\n  </Header>\n)\n\nH6.propTypes = {\n  children: PropTypes.any,\n}\n","import styled from '@emotion/styled'\nimport { cleanProps } from '../../utils/cleanProps'\nimport {\n  fontSize,\n  fontWeight,\n  height,\n  width,\n  color,\n  colorStyle,\n  space,\n  borders,\n  borderColor,\n  display,\n  position,\n  top,\n  right,\n  bottom,\n  left,\n  zIndex,\n} from 'styled-system'\n\nexport const Input = styled('input', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  ${fontSize};\n  ${fontWeight};\n  ${height};\n  ${width};\n  ${space};\n  ${borders};\n  ${borderColor};\n  ${display};\n  ${position};\n  ${colorStyle};\n  ${color};\n  ${top};\n  ${right};\n  ${bottom};\n  ${left};\n  ${zIndex};\n`\n","import styled from '@emotion/styled'\nimport { cleanProps } from '../../utils/cleanProps'\nimport {\n  fontSize,\n  fontWeight,\n  lineHeight,\n  space,\n  color,\n  colorStyle,\n  display,\n  border,\n  borderColor,\n  width,\n  height,\n  position,\n  zIndex,\n  top,\n  right,\n  bottom,\n  left,\n} from 'styled-system'\n\nexport const Label = styled('label', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  ${fontSize};\n  ${fontWeight};\n  ${lineHeight};\n  ${space};\n  ${color};\n  ${colorStyle};\n  ${display};\n  ${border};\n  ${borderColor};\n  ${width};\n  ${height};\n  ${position};\n  ${zIndex};\n  ${top};\n  ${right};\n  ${bottom};\n  ${left};\n`\n","import React from 'react'\nimport { Container } from '../container'\n\nexport const Layout = props => (\n  <Container maxWidth=\"650px\" margin=\"auto\" {...props} />\n)\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { asAnchor } from '../../utils/asAnchor'\nimport { Link as ReachLink } from '@reach/router'\nimport PropTypes from 'prop-types'\nimport { Li } from '../list-item'\n\nconst BaseLink = asAnchor(ReachLink)\nconst BaseAnchor = asAnchor('a')\n\nexport const Link = props => (\n  <BaseLink\n    fontSize={[2, null, 3]}\n    lineHeight={[2, null, 3]}\n    mb={4}\n    colors=\"link\"\n    {...props}\n  >\n    {props.children}\n  </BaseLink>\n)\n\nLink.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const ButtonLink = props => (\n  <BaseLink\n    fontSize={[2, null, 3]}\n    fontWeight=\"normal\"\n    lineHeight={[2, null, 3]}\n    colors=\"button\"\n    mt={[2, null, 3]}\n    py={1}\n    px={[2, null, 3]}\n    {...props}\n    css={css`\n      text-decoration: none;\n    `}\n    display=\"inline-block\"\n  >\n    {props.children}\n  </BaseLink>\n)\n\nButtonLink.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const ButtonAnchor = props => (\n  <BaseAnchor\n    fontSize={[2, null, 3]}\n    fontWeight=\"normal\"\n    lineHeight={[2, null, 3]}\n    colors=\"button\"\n    mt={[2, null, 3]}\n    py={1}\n    px={[2, null, 3]}\n    {...props}\n    css={css`\n      text-decoration: none;\n    `}\n    display=\"inline-block\"\n  >\n    {props.children}\n  </BaseAnchor>\n)\n\nButtonAnchor.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const A = props => (\n  <BaseAnchor\n    fontSize={[2, null, 3]}\n    lineHeight={[2, null, 3]}\n    mb={4}\n    colors=\"link\"\n    {...props}\n  >\n    {props.children}\n  </BaseAnchor>\n)\n\nA.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const FooterLink = props => (\n  <Li ml={3} mb={0} display=\"inline-block\">\n    <BaseAnchor\n      fontSize={[1, null, 2]}\n      lineHeight={[1, null, 2]}\n      colors=\"footerLink\"\n      {...props}\n    >\n      {props.children}\n    </BaseAnchor>\n  </Li>\n)\n\nFooterLink.propTypes = {\n  children: PropTypes.any,\n}\n","import {\n  fontSize,\n  lineHeight,\n  space,\n  color,\n  fontWeight,\n  display,\n} from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\nimport styled from '@emotion/styled'\n\nexport const ListItem = styled('li', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  margin: 0;\n  ${fontSize};\n  ${lineHeight};\n  ${space};\n  ${color};\n  ${fontWeight};\n  ${display};\n`\n\nListItem.propTypes = {\n  ...fontSize.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...color.propTypes,\n  ...fontWeight.propTypes,\n  ...display.propTypes,\n}\n\nexport { Li } from './presets'\n","import React from 'react'\nimport { ListItem } from '.'\nimport PropTypes from 'prop-types'\n\nexport const Li = props => (\n  <ListItem\n    fontSize={[2, null, 3]}\n    lineHeight={[2, null, 3]}\n    mb={[0, null, 1]}\n    fontWeight=\"normal\"\n    {...props}\n  >\n    {props.children}\n  </ListItem>\n)\n\nLi.propTypes = {\n  children: PropTypes.any,\n}\n","import styled from '@emotion/styled'\nimport {\n  fontSize,\n  lineHeight,\n  space,\n  color,\n  fontWeight,\n  textAlign,\n} from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\n\nexport const Paragraph = styled('p', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  margin: 0;\n  ${fontSize};\n  ${lineHeight};\n  ${space};\n  ${color};\n  ${fontWeight};\n  ${textAlign};\n`\n\nParagraph.propTypes = {\n  ...fontSize.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...color.propTypes,\n  ...fontWeight.propTypes,\n  ...textAlign.propTypes,\n}\n\nexport { P, Lead } from './presets'\n","import React from 'react'\nimport { Paragraph } from '.'\nimport PropTypes from 'prop-types'\n\nexport const P = props => (\n  <Paragraph\n    fontSize={[2, null, 3]}\n    lineHeight={[2, null, 3]}\n    mb={4}\n    color=\"black\"\n    {...props}\n  >\n    {props.children}\n  </Paragraph>\n)\n\nP.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const Lead = props => (\n  <Paragraph\n    fontSize={[3, null, 4]}\n    lineHeight={[3, null, 4]}\n    mb={4}\n    color=\"black\"\n    {...props}\n  >\n    {props.children}\n  </Paragraph>\n)\n\nLead.propTypes = {\n  children: PropTypes.any,\n}\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { Trans } from '@lingui/macro'\n\nconst phasebanner = css`\n  background-color: #f4f4f4;\n  font-family: robotoregular, sans-serif;\n  padding: 1.2rem 0.9rem;\n\n  span:first-of-type {\n    padding: 2px 8px;\n    border: 2px solid;\n    font-size: 0.8rem;\n    margin-right: 0.5rem;\n  }\n\n  span:last-of-type {\n    font-size: 0.85rem;\n    margin-right: 0.6rem;\n  }\n`\n\nexport const PhaseBanner = () => (\n  <div css={phasebanner}>\n    <span>ALPHA</span>\n    <span>\n      <Trans>This site will change as we test ideas.</Trans>\n    </span>\n  </div>\n)\n","/** @jsx jsx */\nimport PropTypes from 'prop-types'\nimport { jsx } from '@emotion/core'\nimport { Input } from '../input'\nimport { Container } from '../container'\nimport { Text } from '../text'\nimport { UniqueID } from '../unique-id'\nimport { fontSize, fontWeight, lineHeight, space, color } from 'styled-system'\nimport { BREAKPOINTS } from '../../theme'\n\nconst mq = BREAKPOINTS.map(bp => `@media (min-width: ${bp})`)\n\nexport const RadioButton = ({ label, ...props }) => {\n  return (\n    <UniqueID>\n      {id => {\n        return (\n          <Container\n            display=\"block\"\n            position=\"relative\"\n            pl={6}\n            mt={[1, null, 1]}\n          >\n            <Input\n              type=\"radio\"\n              position=\"absolute\"\n              left=\"0\"\n              top=\"0\"\n              zIndex=\"1\"\n              m={0}\n              css={theme => ({\n                height: theme.radioButtons.size,\n                width: theme.radioButtons.size,\n                opacity: 0,\n                zoom: '1',\n                ':checked + span:after': {\n                  opacity: '1',\n                },\n                ':focus + span:before': {\n                  boxShadow: `0 0 0 3px ${theme.colors.focusColor}`,\n                },\n              })}\n              {...props}\n              id={id}\n            />\n            <Text\n              m={0}\n              p={0}\n              pr={2}\n              pl={2}\n              display=\"block\"\n              color=\"black\"\n              css={theme => ({\n                height: theme.checkboxes.labelSize,\n                '::before': {\n                  content: '\"\"',\n                  display: 'block',\n                  borderRadius: '50%',\n                  border: `2px solid ${theme.colors.black}`,\n                  background: 'transparent',\n                  [mq[0]]: {\n                    width: theme.fontSizes[3],\n                    height: theme.fontSizes[3],\n                  },\n                  [mq[2]]: {\n                    width: theme.fontSizes[4],\n                    height: theme.fontSizes[4],\n                  },\n                  position: 'absolute',\n                  top: '0',\n                  left: '0',\n                },\n                '::after': {\n                  boxSizing: 'border-box',\n                  content: '\"\"',\n                  display: 'block',\n                  border: `2px solid ${theme.colors.white}`,\n                  borderRadius: '50%',\n                  background: 'white',\n                  [mq[0]]: {\n                    width: theme.fontSizes[3],\n                    height: theme.fontSizes[3],\n                    backgroundColor: `${theme.colors.black}`,\n                  },\n                  [mq[2]]: {\n                    width: theme.fontSizes[4],\n                    height: theme.fontSizes[4],\n                    backgroundColor: `${theme.colors.black}`,\n                  },\n                  zoom: '1',\n                  opacity: '0',\n                  position: 'absolute',\n                  top: '2px',\n                  left: '2px',\n                },\n              })}\n              htmlFor={id}\n              {...props}\n            >\n              {label}\n            </Text>\n          </Container>\n        )\n      }}\n    </UniqueID>\n  )\n}\n\nRadioButton.defaultProps = {\n  fontWeight: '400',\n  fontSize: [2, null, 3],\n  lineHeight: [2, null, 3],\n  checkscale: '1',\n}\n\nRadioButton.propTypes = {\n  label: PropTypes.node.isRequired,\n  ...fontSize.propTypes,\n  ...fontWeight.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...color.propTypes,\n}\n","/**@jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport { Container } from '../container'\nimport PropTypes from 'prop-types'\nimport { Text } from '../text'\nimport { Trans } from '@lingui/macro'\n\nexport const Steps = ({ activeStep, totalSteps }) => (\n  <Container\n    css={css`\n      span {\n        font-weight: 500;\n        font-size: 24px;\n        color: #6f777b;\n      }\n    `}\n    display=\"flex\"\n    flexDirection=\"row\"\n    marginBottom=\"10px\"\n  >\n    {' '}\n    <Text>\n      <Trans>\n        Step {activeStep} of {totalSteps}\n      </Trans>\n    </Text>\n  </Container>\n)\n\nSteps.propTypes = {\n  totalSteps: PropTypes.number.isRequired,\n  activeStep: PropTypes.number.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport {\n  display,\n  fontSize,\n  lineHeight,\n  space,\n  color,\n  colorStyle,\n  fontWeight,\n  width,\n  height,\n  borders,\n} from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\n\nexport const StyledTextArea = styled('textarea', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  margin: 0;\n  ${display};\n  ${fontSize};\n  ${lineHeight};\n  ${space};\n  ${colorStyle};\n  ${color};\n  ${fontWeight};\n  ${width};\n  ${height};\n  ${borders}\n`\nStyledTextArea.propTypes = {\n  ...display.propTypes,\n  ...fontSize.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...colorStyle.propTypes,\n  ...color.propTypes,\n  ...fontWeight.propTypes,\n  ...width.propTypes,\n  ...height.propTypes,\n}\n\nexport const TextArea = props => (\n  <StyledTextArea\n    display=\"block\"\n    fontSize={[2, null, 3]}\n    lineHeight={[2, null, 3]}\n    colors=\"textArea\"\n    width={['300px', null, '500px']}\n    height={['200px', null, '300px']}\n    {...props}\n  >\n    {props.children}\n  </StyledTextArea>\n)\n\nTextArea.propTypes = {\n  children: PropTypes.any,\n}\n","import styled from '@emotion/styled'\nimport {\n  fontSize,\n  fontWeight,\n  lineHeight,\n  space,\n  color,\n  display,\n  border,\n  borderColor,\n  width,\n  height,\n  position,\n  zIndex,\n  top,\n  right,\n  bottom,\n  left,\n  textAlign,\n} from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\n\nexport const StyledSpan = styled('span', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  margin: 0;\n  ${fontSize};\n  ${fontWeight};\n  ${lineHeight};\n  ${space};\n  ${color};\n  ${display};\n  ${border};\n  ${borderColor};\n  ${width};\n  ${height};\n  ${position};\n  ${zIndex};\n  ${top};\n  ${right};\n  ${bottom};\n  ${left};\n  ${textAlign}\n`\nexport { Text } from './presets'\n","import React from 'react'\nimport { StyledSpan } from '.'\nimport PropTypes from 'prop-types'\n\nexport const Text = props => (\n  <StyledSpan\n    display=\"block\"\n    fontSize={[2, null, 3]}\n    lineHeight={[2, null, 3]}\n    color=\"black\"\n    {...props}\n  >\n    {props.children}\n  </StyledSpan>\n)\n\nText.propTypes = {\n  children: PropTypes.any,\n}\n","import PropTypes from 'prop-types'\n/** @jsx jsx **/\nimport { jsx, css } from '@emotion/core'\nimport { Query } from 'react-apollo'\nimport { Container } from '../container'\nimport { A } from '../link'\nimport { LanguageSwitcher } from '../../LanguageSwitcher'\nimport { GET_LANGUAGE_QUERY } from '../../utils/queriesAndMutations'\nimport rcmpbrandingeng from '../../images/rcmpbrandingeng.svg'\nimport rcmpbrandingfre from '../../images/rcmpbrandingfre.svg'\n\nexport const TopBanner = props => {\n  const { bg } = props\n\n  return (\n    <Query query={GET_LANGUAGE_QUERY}>\n      {({ data: { language } }) => (\n        <Container\n          bg={bg}\n          display=\"flex\"\n          flexDirection=\"row\"\n          width={1}\n          height={[60, null, 60]}\n          alignItems=\"center\"\n          data-testid=\"background-color\"\n        >\n          <Container ml={3} width={[250, null, 300]}>\n            <A\n              colors=\"footerLink\"\n              href={\n                language === 'fr'\n                  ? 'http://www.rcmp-grc.gc.ca/fr'\n                  : 'http://www.rcmp-grc.gc.ca/en'\n              }\n            >\n              <img\n                src={language === 'fr' ? rcmpbrandingfre : rcmpbrandingeng}\n                width=\"300px\"\n                alt={\n                  language === 'fr'\n                    ? 'Gendarmerie royale du Canada'\n                    : 'Royal Canadian Mounted Police'\n                }\n              />\n            </A>\n          </Container>\n          <Container\n            flex=\"1 1 auto\"\n            mr={3}\n            css={css`\n              text-align: right;\n            `}\n          >\n            {language === 'en' ? null : <LanguageSwitcher language=\"en\" />}\n            {language === 'fr' ? null : <LanguageSwitcher language=\"fr\" />}\n          </Container>\n        </Container>\n      )}\n    </Query>\n  )\n}\n\nTopBanner.propTypes = {\n  lang: PropTypes.string.isRequired,\n  bg: PropTypes.string,\n}\n\nTopBanner.defaultProps = {\n  bg: 'black',\n}\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nlet counter = 0\nexport class UniqueID extends Component {\n  static propTypes = { children: PropTypes.func.isRequired }\n\n  state = {\n    id: counter++,\n  }\n\n  render() {\n    return this.props.children('id-' + this.state.id)\n  }\n}\n","import { fontSize, lineHeight, space, color, fontWeight } from 'styled-system'\nimport styled from '@emotion/styled'\nimport { cleanProps } from '../../utils/cleanProps'\n\nexport const UnorderedList = styled('ul', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  margin: 0;\n  padding: 0;\n  ${fontSize};\n  ${lineHeight};\n  ${space};\n  ${fontWeight};\n  ${color};\n`\nUnorderedList.propTypes = {\n  ...fontSize.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...color.propTypes,\n  ...fontWeight.propTypes,\n}\n\nexport { Ul } from './presets'\n","import PropTypes from 'prop-types'\nimport { UnorderedList } from '.'\n/** @jsx jsx **/\nimport { jsx, css } from '@emotion/core'\n\nexport const Ul = props => {\n  const { listStyleType, ...rest } = props\n  var paddingValue\n\n  if (listStyleType === 'none') paddingValue = 0\n  else paddingValue = [5, null, 6]\n\n  return (\n    <UnorderedList\n      fontSize={[2, null, 3]}\n      lineHeight={[2, null, 3]}\n      pl={paddingValue}\n      mb={4}\n      css={css`\n        list-style-type: ${listStyleType};\n      `}\n      {...rest}\n    >\n      {props.children}\n    </UnorderedList>\n  )\n}\n\nUl.defaultProps = {\n  listStyleType: 'disc',\n}\n\nUl.propTypes = {\n  listStyleType: PropTypes.string,\n  children: PropTypes.any,\n}\n","/* eslint-disable react/no-unescaped-entities */\n/** @jsx jsx **/\nimport { css, jsx } from '@emotion/core'\nimport PropTypes from 'prop-types'\nimport { Trans } from '@lingui/macro'\nimport { Container } from '../container'\nimport { Text } from '../text'\n\nconst bannerStyle = css`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport const WarningBanner = props => {\n  const { bg } = props\n\n  return (\n    <Container\n      data-testid=\"background-color\"\n      css={bannerStyle}\n      bg={bg}\n      height={[50, null, 60]}\n    >\n      <Text paddingLeft=\"10px\" paddingRight=\"10px\" textAlign=\"center\">\n        <Trans>\n          Warning! This is a prototype. It won't actually submit your report to\n          the RCMP.\n        </Trans>\n      </Text>\n    </Container>\n  )\n}\n\nWarningBanner.propTypes = {\n  bg: PropTypes.string,\n}\n\nWarningBanner.defaultProps = {\n  bg: 'yellow',\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\n\nconst FipFlag = styled('path')`\n  fill: ${props => props.flag};\n`\n\nconst FipText = styled('path')`\n  fill: ${props => props.text};\n`\n\nconst Wordmark = ({\n  width = '10em',\n  flag = '#F00',\n  text = '#000',\n  lang = 'en',\n  ...props\n}) => (\n  <svg\n    role=\"img\"\n    aria-label={\n      lang === 'en'\n        ? 'Symbol of the Government of Canada'\n        : 'Symbole du gouvernement du Canada'\n    }\n    xmlns=\"http://www.w3.org/2000/svg\"\n    version=\"1.1\"\n    width={width}\n    height=\"100%\"\n    viewBox=\"0 0 143 34\"\n    preserveAspectRatio=\"xMinYMin meet\"\n    {...props}\n  >\n    <g id=\"wmms\" transform=\"translate(-1, -1)\">\n      <FipFlag\n        className=\"fipflag\"\n        flag={flag}\n        data-testid=\"flag\"\n        d=\"M137.9,1.2h5.2v10.4h-5.2V1.2z M128.9,6.4l-0.3,0.1c0,0,1.8,1.5,1.8,1.6c0.1,0.1,0.2,0.1,0.1,0.4 c-0.1,0.3-0.2,0.6-0.2,0.6s1.6-0.3,1.8-0.4c0.2,0,0.3,0,0.3,0.2c0,0.2-0.1,1.9-0.1,1.9h0.5c0,0-0.1-1.8-0.1-1.9 c0-0.2,0.1-0.2,0.3-0.2c0.2,0,1.8,0.4,1.8,0.4s-0.1-0.4-0.2-0.6c-0.1-0.3,0-0.3,0.1-0.4c0.1-0.1,1.8-1.6,1.8-1.6l-0.3-0.1 c-0.2-0.1-0.1-0.2-0.1-0.3s0.3-1.1,0.3-1.1s-0.8,0.2-0.9,0.2c-0.1,0-0.2,0-0.2-0.1s-0.2-0.5-0.2-0.5s-0.9,1-1,1.1 c-0.2,0.2-0.4,0-0.3-0.2c0-0.2,0.5-2.3,0.5-2.3s-0.5,0.3-0.7,0.4s-0.3,0.1-0.3-0.1c-0.1-0.2-0.7-1.3-0.7-1.4c0,0-0.6,1.2-0.7,1.4 s-0.2,0.2-0.3,0.1c-0.2-0.1-0.7-0.4-0.7-0.4s0.5,2.1,0.5,2.3s-0.1,0.3-0.3,0.2l-1-1.1c0,0-0.1,0.3-0.2,0.4c0,0.1-0.1,0.2-0.2,0.1 c-0.2,0-1-0.2-1-0.2s0.3,1,0.4,1.1C129.1,6.1,129.1,6.3,128.9,6.4z M122.2,1.2h5.2v10.4h-5.2V1.2z\"\n      />\n      <FipText\n        className=\"fiptext\"\n        text={text}\n        data-testid=\"text\"\n        d=\"M144.2,32.4c-0.4,0.9-1.2,1.2-1.7,1.2c-0.6,0-2.4-0.1-2.4-4.8c0,0,0-9.5,0-10.1c0-3.1-2.4-5.6-8.6-5.6 c-6.7,0-6.8,3.3-6.8,4.1c-0.1,0.9,0.4,1.9,2.1,1.9c1.5,0,1.9-1.7,2.1-2.3c0.2-0.7,0.3-2.7,3-2.7c2.3,0,3.7,2,3.8,4.9 c0,0.5,0,0.8,0,1.1c0,0.2,0,0.3,0,0.5l0,0l0,0v0.1c-0.2,1-0.7,1.5-1.6,1.9c-1.2,0.6-4.7,1.1-5.1,1.2c-1.4,0.3-5.3,1.3-5.2,5.4 c0.1,4,4.1,5.4,6.9,5.3c2.7-0.1,4.3-1.2,5-1.8c0.4-0.3,0.4-0.3,0.7,0.1c0.4,0.4,1.7,1.7,4.8,1.7c3.2,0,3.6-1.5,3.8-2 C145.1,32.2,144.4,31.9,144.2,32.4z M131.7,33.5c-2.8,0-3.5-2.3-3.5-3.5c0-1.1,0.6-3.4,3.4-5c0,0,1.3-0.8,3.8-1.8 c0.1,0,0.2,0,0.2,0s0.1,0.1,0.1,0.2l0,0l0,0v0.1l0,0l0,0v0.1l0,0l0,0l0,0v4.2C135.7,31.1,134.1,33.5,131.7,33.5z M122.5,33.4 c-0.4-0.1-2.9,0.2-2.9-7.4s0-23.9,0-23.9c0-0.3,0-1.1-0.9-1.1c-0.9,0-6.9,0.3-7.3,0.4c-0.4,0-0.7,0.5,0,0.5 c0.7,0.1,3.9,0.3,3.9,5.6c0,2.6,0,5.2,0,7.1c0,0.1,0,0.2,0,0.2c0,0.2,0,0.3-0.1,0.4c0,0,0,0,0,0.1l0,0c-0.1,0.1-0.2,0-0.5-0.2 c-0.5-0.4-2.8-1.8-5.7-1.8c-4.7,0-10.5,3.4-10.5,10.4c0,7.5,5.3,11.1,10.8,11.1c2.7,0,4.6-1.2,5.3-1.6c0.8-0.5,0.7-0.4,0.8,0.3 c0.1,0.5,0,1.5,1.4,1.4c1.5-0.2,5.1-0.6,5.8-0.7C123.3,33.9,123.1,33.5,122.5,33.4z M110.1,33.7c-4.4,0-6.7-5.2-6.7-10.2 c0-5.5,3.1-9.2,6.4-9c4.3,0.3,5.4,3.7,5.5,9.8c0,0.4,0,0.8,0,1.3C115.2,31.6,112.7,33.7,110.1,33.7z M98.4,32.4 c-0.4,0.9-1.2,1.2-1.7,1.2c-0.6,0-2.4-0.1-2.4-4.8c0,0,0-9.5,0-10.1c0-3.1-2.4-5.6-8.6-5.6c-6.7,0-6.8,3.3-6.8,4.1 c-0.1,0.9,0.4,1.9,2.1,1.9c1.5,0,1.9-1.7,2.1-2.3c0.2-0.7,0.3-2.7,3-2.7c2.3,0,3.8,2,3.8,5v0.1c0,0.1,0,0.2,0,0.2v0.3 c0,0.1,0,0.3,0,0.4c-0.1,1.5-0.5,2-1.7,2.6c-1.2,0.6-4.7,1.1-5.1,1.2c-1.4,0.3-5.3,1.3-5.2,5.4c0.1,4,4.1,5.4,6.9,5.3 c2.7-0.1,4.3-1.2,5-1.8c0.4-0.3,0.4-0.3,0.7,0.1c0.4,0.4,1.7,1.7,4.8,1.7c3.2,0,3.6-1.5,3.8-2C99.3,32.2,98.7,31.9,98.4,32.4z  M86,33.5c-2.8,0-3.5-2.3-3.5-3.5c0-1.1,0.6-3.4,3.4-5c0,0,1.3-0.8,3.8-1.8c0.1,0,0.2,0,0.2,0v0.1l0,0l0,0c0,0.1,0,0.2,0,0.4v-0.1 c0,0,0,0,0,0.1v4.2C89.9,31.1,88.3,33.5,86,33.5z M76.4,33.4c-0.8-0.2-2.2-1.1-2.2-5.5v-8c0-1.9,0.2-6.8-7.3-6.8 c-3.9,0-6.1,2-6.3,2.1c-0.3,0.3-0.5,0.4-0.6-0.1c-0.1-0.4-0.3-1-0.4-1.4c-0.1-0.3-0.3-0.6-1-0.5c-0.7,0.1-5.1,0.8-5.9,1 c-0.7,0.2-0.5,0.5,0,0.6c0.5,0.1,2.9,0.3,2.9,4.4s0,8.6,0,8.6c0,5-1,5.4-1.9,5.7c-1.2,0.3-0.6,0.7-0.1,0.7c0,0,8.9,0,9.1,0 c0.6,0,0.9-0.6-0.3-0.8c-1.2-0.2-2.3-0.9-2.3-4.8c0-0.4,0-4.7,0-5.5c0-2.1-0.5-8.5,5.3-8.6c4.1-0.1,4.5,3.3,4.5,5.5v8.5 c0,3.5-1,4.6-2.2,4.8c-1.1,0.2-0.9,0.7-0.3,0.7c0.2,0,9.3,0,9.3,0C77.2,34.2,77.7,33.7,76.4,33.4z M52.1,32.4 c-0.4,0.9-1.2,1.2-1.7,1.2c-0.6,0-2.4-0.1-2.4-4.8c0,0,0-9.5,0-10.1c0-3.1-2.4-5.6-8.6-5.6c-6.7,0-6.8,3.3-6.8,4.1 c-0.1,0.9,0.4,1.9,2.1,1.9c1.5,0,1.9-1.7,2.1-2.3c0.2-0.7,0.3-2.7,3-2.7c2.3,0,3.7,2,3.8,4.9c0,0.5,0,0.8,0,1.1 c0,0.2,0,0.4-0.1,0.5v0.1l0,0c-0.2,1-0.7,1.5-1.6,1.9c-1.2,0.6-4.7,1.1-5.1,1.2c-1.4,0.3-5.3,1.3-5.2,5.4c0.1,4,4.1,5.4,6.9,5.3 c2.7-0.1,4.3-1.2,5-1.8c0.4-0.3,0.4-0.3,0.7,0.1c0.4,0.4,1.7,1.7,4.8,1.7c3.2,0,3.6-1.5,3.8-2C53,32.2,52.3,31.9,52.1,32.4z  M39.6,33.5c-2.8,0-3.5-2.3-3.5-3.5s0.6-3.4,3.4-5c0,0,1.3-0.8,3.8-1.8c0.1,0,0.2,0,0.2,0s0.1,0.1,0.1,0.2l0,0l0,0l0,0 c0,0,0,0.1,0,0.2l0,0l0,0v0.1l0,0l0,0l0,0v4.2C43.6,31.1,42,33.5,39.6,33.5z M30,24.8c-1,3.2-2.9,8.4-9.8,8.6 C13,33.5,8.7,28.6,8.5,19.5C8.2,9.8,12.4,2.4,18.9,2.2c7.3-0.1,9.9,8.6,10,9.9c0.1,1,1.4,0.9,1.4-0.1c0-0.5-0.6-9.1-0.8-10.1 c-0.2-1-1-0.6-1.2-0.2C28.2,2,28.4,1.4,28,2.3c-0.4,0.9-1.5,0.4-1.9,0.3c-1.2-0.5-3.5-1.7-7.2-1.6c-8.5,0.2-17.2,6.5-17,17.5 c0.2,10.7,8.8,16.7,16.8,16.6c7.3-0.1,11.4-4.7,12.6-10C31.7,23.8,30.4,23.5,30,24.8z\"\n      />\n    </g>\n  </svg>\n)\n\nWordmark.propTypes = {\n  width: PropTypes.string,\n  flag: PropTypes.string,\n  text: PropTypes.string,\n  lang: PropTypes.string,\n}\n\nexport default Wordmark\n","module.exports = __webpack_public_path__ + \"static/media/rcmpbrandingeng.753068ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/rcmpbrandingfre.16af643f.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.447b6090.svg\";","import '@babel/polyfill'\nimport app from './server'\nimport http from 'http'\nimport { Logger } from '@cdssnc/logdriver'\n\nconst server = http.createServer(app)\n\nlet currentApp = app\n\nconst { env } = require('process')\n\nconst port = () =>\n  parseInt(\n    env.RAZZLE_PORT ||\n      env.PORT ||\n      process.env.RAZZLE_PORT ||\n      process.env.PORT ||\n      3000,\n    10,\n  )\n\nconst _port = port()\n\nserver.listen(_port, error => {\n  if (error) {\n    Logger.error(error)\n  }\n  Logger.info(`🚀 started on port ${_port}`)\n})\n\nif (module.hot) {\n  Logger.info('✅  Server-side HMR Enabled!')\n\n  module.hot.accept('./server', () => {\n    Logger.info('🔁  HMR Reloading `./server`...')\n    server.removeListener('request', currentApp)\n    const newApp = require('./server').default\n    server.on('request', newApp)\n    currentApp = newApp\n  })\n}\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport React from 'react'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { I18n } from '@lingui/react'\nimport { ApolloConsumer, Mutation } from 'react-apollo'\nimport { H1, H2 } from '../components/header'\nimport { Container } from '../components/container'\nimport { Text } from '../components/text'\nimport { Button } from '../components/button'\nimport { Link } from '../components/link'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { Steps } from '../components/stepper'\nimport { Layout } from '../components/layout'\nimport {\n  SUBMIT_REPORT_MUTATION,\n  getScamInfo,\n  getLostMoney,\n  getSuspectInfo,\n  getFiles,\n  getContactInfo,\n  getSurveyInfo,\n} from '../utils/queriesAndMutations'\nimport { BackButton } from '../components/backbutton'\n\nconst scamEventSummary = client => {\n  let {\n    howWereYouContacted,\n    otherMethodOfContact,\n    whenWereYouContacted,\n    scamDetails,\n  } = getScamInfo(client)\n\n  if (otherMethodOfContact) {\n    howWereYouContacted = howWereYouContacted.concat(otherMethodOfContact)\n  }\n  howWereYouContacted = howWereYouContacted\n    ? howWereYouContacted.filter(s => s !== 'other')\n    : ''\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <React.Fragment>\n          <H2 fontSize={[3, null, 4]} marginBottom={[1, null, 1]}>\n            <Trans>What happened</Trans>{' '}\n            <Link\n              aria-label={i18n._('Edit scam event')}\n              type=\"button\"\n              color=\"black\"\n              to=\"/p1/scaminfo\"\n              textAlign=\"center\"\n            >\n              <Trans>Edit</Trans>\n            </Link>\n          </H2>\n          {scamDetails ? (\n            <Text>\n              <strong>\n                <Trans>Description</Trans>:{' '}\n              </strong>\n              {scamDetails}\n            </Text>\n          ) : null}\n\n          {whenWereYouContacted ? (\n            <Text>\n              <strong>\n                <Trans>Date </Trans>:{' '}\n              </strong>\n              {whenWereYouContacted}\n            </Text>\n          ) : null}\n          {howWereYouContacted ? (\n            <Text>\n              <strong>\n                <Trans>Contacted by</Trans>:{' '}\n              </strong>\n              {howWereYouContacted.map(i => i18n._(i)).join(', ')}\n            </Text>\n          ) : null}\n        </React.Fragment>\n      )}\n    </I18n>\n  )\n}\n\nconst lostMoneySummary = client => {\n  let {\n    lostAmount,\n    lostCurrency,\n    lostOtherCurrency,\n    lostMethodsOfPayment,\n    lostOtherMethodOfPayment,\n  } = getLostMoney(client)\n\n  if (lostOtherMethodOfPayment) {\n    lostMethodsOfPayment = lostMethodsOfPayment.concat(lostOtherMethodOfPayment)\n  }\n  lostMethodsOfPayment = lostMethodsOfPayment.filter(s => s !== 'other')\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <React.Fragment>\n          <H2\n            fontSize={[3, null, 4]}\n            marginTop={[3, null, 4]}\n            marginBottom={[1, null, 1]}\n          >\n            <Trans>Money lost</Trans>{' '}\n            <Link\n              aria-label={i18n._('Edit money lost')}\n              type=\"button\"\n              color=\"black\"\n              to=\"/p1/moneylost\"\n              textAlign=\"center\"\n            >\n              <Trans>Edit</Trans>\n            </Link>\n          </H2>\n          {lostAmount ? (\n            <Text>\n              <strong>\n                <Trans>Amount</Trans>:{' '}\n              </strong>\n              {lostAmount}\n            </Text>\n          ) : null}\n          {lostCurrency || lostOtherCurrency ? (\n            <Text>\n              <strong>\n                <Trans>Currency</Trans>:{' '}\n              </strong>\n              {lostOtherCurrency ? lostOtherCurrency : i18n._(lostCurrency)}\n            </Text>\n          ) : null}\n          {lostMethodsOfPayment ? (\n            <Text>\n              <strong>\n                <Trans>Payment method</Trans>:{' '}\n              </strong>\n              {lostMethodsOfPayment.map(i => i18n._(i)).join(', ')}\n            </Text>\n          ) : null}\n        </React.Fragment>\n      )}\n    </I18n>\n  )\n}\n\nconst suspectInfoSummary = client => {\n  let {\n    suspectName,\n    suspectAddress,\n    suspectLanguage,\n    otherSuspectLanguage,\n    suspectPhone,\n    suspectEmail,\n    suspectWebsite,\n    suspectIP,\n  } = getSuspectInfo(client)\n\n  if (otherSuspectLanguage) {\n    suspectLanguage = suspectLanguage.concat(otherSuspectLanguage)\n  }\n  suspectLanguage = suspectLanguage.filter(s => s !== 'Other language')\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <React.Fragment>\n          <H2\n            fontSize={[3, null, 4]}\n            marginTop={[3, null, 4]}\n            marginBottom={[1, null, 1]}\n          >\n            <Trans>About the suspect</Trans>{' '}\n            <Link\n              aria-label={i18n._('Edit scammer details')}\n              type=\"button\"\n              color=\"black\"\n              to=\"/p1/suspectinfo\"\n              textAlign=\"center\"\n            >\n              <Trans>Edit</Trans>\n            </Link>\n          </H2>\n\n          {suspectName ? (\n            <Text>\n              <strong>\n                <Trans>Name</Trans>:{' '}\n              </strong>\n              {suspectName}\n            </Text>\n          ) : null}\n\n          {suspectEmail ? (\n            <Text>\n              <strong>\n                <Trans>Email address</Trans>:{' '}\n              </strong>\n              {suspectEmail}\n            </Text>\n          ) : null}\n\n          {suspectPhone ? (\n            <Text>\n              <strong>\n                <Trans>Phone number</Trans>:{' '}\n              </strong>\n              {suspectPhone}\n            </Text>\n          ) : null}\n\n          {suspectWebsite ? (\n            <Text>\n              <strong>\n                <Trans>Website</Trans>:{' '}\n              </strong>\n              {suspectWebsite}\n            </Text>\n          ) : null}\n\n          {suspectAddress ? (\n            <Text>\n              <strong>\n                {' '}\n                <Trans>Mailing address</Trans>:{' '}\n              </strong>\n              {suspectAddress}\n            </Text>\n          ) : null}\n          {suspectIP ? (\n            <Text>\n              <strong>\n                <Trans>IP address</Trans>:{' '}\n              </strong>\n              {suspectIP}\n            </Text>\n          ) : null}\n          {suspectLanguage ? (\n            <Text>\n              <strong>\n                <Trans>Language of correspondence</Trans>:{' '}\n              </strong>\n              {suspectLanguage.map(i => i18n._(i)).join(', ')}\n            </Text>\n          ) : null}\n        </React.Fragment>\n      )}\n    </I18n>\n  )\n}\n\nconst fileUploadSummary = client => {\n  const files = getFiles(client)\n  const fileList = files.join(', ')\n  return (\n    <React.Fragment>\n      <H2\n        fontSize={[3, null, 4]}\n        marginTop={[3, null, 4]}\n        marginBottom={[1, null, 1]}\n      >\n        <Trans>Files attached</Trans>{' '}\n        <I18n>\n          {({ i18n }) => {\n            return (\n              <Link\n                aria-label={i18n._('Edit files attached')}\n                type=\"button\"\n                color=\"black\"\n                to=\"/p1/uploadfiles\"\n                textAlign=\"center\"\n              >\n                <Trans>Edit</Trans>\n              </Link>\n            )\n          }}\n        </I18n>\n      </H2>\n      {files.length ? (\n        <Text>\n          <strong>\n            <Trans>File name</Trans>:{' '}\n          </strong>\n          {fileList}\n        </Text>\n      ) : null}\n    </React.Fragment>\n  )\n}\nconst contactInfoSummary = client => {\n  let {\n    userIsTheVictim,\n    contactInfoName,\n    contactInfoEmail,\n    contactInfoPhone,\n  } = getContactInfo(client)\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <React.Fragment>\n          <H2\n            fontSize={[3, null, 4]}\n            marginTop={[3, null, 4]}\n            marginBottom={[1, null, 1]}\n          >\n            <Trans>Contact information</Trans>{' '}\n            <Link\n              aria-label={i18n._('Edit contact info')}\n              type=\"button\"\n              color=\"black\"\n              to=\"/p1/contactinfo\"\n              textAlign=\"center\"\n            >\n              <Trans>Edit</Trans>\n            </Link>\n          </H2>\n\n          {contactInfoName ? (\n            <Text>\n              <strong>\n                <Trans>Name</Trans>:{' '}\n              </strong>\n              {contactInfoName}\n            </Text>\n          ) : null}\n\n          {contactInfoEmail ? (\n            <Text>\n              <strong>\n                <Trans>Email</Trans>:{' '}\n              </strong>\n              {contactInfoEmail}\n            </Text>\n          ) : null}\n          {contactInfoPhone ? (\n            <Text>\n              <strong>\n                <Trans>Phone number</Trans>:{' '}\n              </strong>\n              {contactInfoPhone}\n            </Text>\n          ) : null}\n          {userIsTheVictim ? (\n            <Text>\n              <strong>\n                <Trans>Did the scam happened to you</Trans>:{' '}\n              </strong>\n              {i18n._(userIsTheVictim)}\n            </Text>\n          ) : null}\n        </React.Fragment>\n      )}\n    </I18n>\n  )\n}\n\nconst randLetter = () => {\n  const letters = 'abcdefghijklmnopqrstuvwxyz'.split('')\n  return letters[Math.floor(Math.random() * letters.length)]\n}\nconst randDigit = () => Math.floor(Math.random() * 10)\n\nconst randomizeString = s =>\n  s\n    ? s\n        .replace(/[a-z]/g, () => randLetter())\n        .replace(/[A-Z]/g, () => randLetter().toUpperCase())\n        .replace(/[0-9]/g, () => randDigit())\n    : s\n\nconst submit = (client, submitReport) => {\n  let scamInfo = getScamInfo(client)\n  let lostMoney = getLostMoney(client)\n  let suspectInfo = getSuspectInfo(client)\n  let files = getFiles(client)\n  let contactInfo = getContactInfo(client)\n  const surveyInfo = getSurveyInfo(client)\n\n  let {\n    suspectName,\n    suspectAddress,\n    suspectLanguage,\n    otherSuspectLanguage,\n    suspectPhone,\n    suspectEmail,\n    suspectWebsite,\n    suspectIP,\n  } = suspectInfo\n  suspectName = randomizeString(suspectName)\n  suspectAddress = randomizeString(suspectAddress)\n  suspectPhone = randomizeString(suspectPhone)\n  suspectEmail = randomizeString(suspectEmail)\n  suspectWebsite = randomizeString(suspectWebsite)\n  suspectIP = randomizeString(suspectIP)\n\n  let {\n    userIsTheVictim,\n    contactInfoName,\n    contactInfoEmail,\n    contactInfoPhone,\n  } = contactInfo\n  contactInfoName = randomizeString(contactInfoName)\n  contactInfoEmail = randomizeString(contactInfoEmail)\n  contactInfoPhone = randomizeString(contactInfoPhone)\n\n  const data = {\n    source: 'p1',\n    scamInfo,\n    lostMoney,\n    suspectInfo: {\n      suspectName,\n      suspectAddress,\n      suspectLanguage,\n      otherSuspectLanguage,\n      suspectPhone,\n      suspectEmail,\n      suspectWebsite,\n      suspectIP,\n    },\n    files,\n    contactInfo: {\n      userIsTheVictim,\n      contactInfoName,\n      contactInfoEmail,\n      contactInfoPhone,\n    },\n    surveyInfo,\n  }\n  submitReport({ variables: data })\n  navigate('thankyou')\n}\n\nexport const ConfirmationPage = () => {\n  return (\n    <Layout>\n      <BackButton route=\"/p1/contactinfo\">\n        <Trans>contact information</Trans>\n      </BackButton>\n      <Steps activeStep={6} totalSteps={6} />\n      <H1>\n        <Trans>Review report information</Trans>\n      </H1>\n      <TrackPageViews />\n      <ApolloConsumer>\n        {client => {\n          client.writeData({\n            data: { doneForms: true },\n          })\n\n          return (\n            <React.Fragment>\n              {scamEventSummary(client)}\n              {lostMoneySummary(client)}\n              {suspectInfoSummary(client)}\n              {fileUploadSummary(client)}\n              {contactInfoSummary(client)}\n            </React.Fragment>\n          )\n        }}\n      </ApolloConsumer>\n\n      <Container\n        mt=\"1rem\"\n        mb=\"4rem\"\n        display={['flex', 'block', 'flex']}\n        alignItems=\"center\"\n        css={css`\n          button,\n          div[name='buttonlink-container'] a {\n            padding: 0.7rem 1.5rem;\n            width: 100%;\n            text-align: center;\n          }\n\n          @media (max-width: 640px) {\n            div[name='buttonlink-container'] a {\n              padding: 0.7rem 0;\n            }\n          }\n        `}\n      >\n        <ApolloConsumer>\n          {client => (\n            <Mutation mutation={SUBMIT_REPORT_MUTATION}>\n              {submitReport => (\n                <Container name=\"buttonlink-container\" mt=\"1rem\">\n                  <Button\n                    type=\"submit\"\n                    onClick={() => submit(client, submitReport)}\n                  >\n                    <Trans>Submit report &nbsp; ❯</Trans>\n                  </Button>\n                </Container>\n              )}\n            </Mutation>\n          )}\n        </ApolloConsumer>\n        <Container\n          name=\"buttonlink-container\"\n          mt=\"1.9rem\"\n          ml={['3rem', '0', '3rem']}\n        >\n          <Link type=\"button\" color=\"black\" to=\"/p1\" textAlign=\"center\">\n            <Trans>Cancel report</Trans>\n          </Link>\n        </Container>\n      </Container>\n    </Layout>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { Steps } from '../components/stepper'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { ContactInfoForm } from './forms/ContactInfoForm'\nimport { Layout } from '../components/layout'\nimport { BackButton } from '../components/backbutton'\n\nconst submitAndNavigate = (client, data) => {\n  client.writeData({ data: { contactInfo: JSON.stringify(data) } })\n  navigate('confirmation')\n}\n\nexport const ContactInfoPage = () => (\n  <Layout>\n    <BackButton route=\"/p1/contactinfoquestion\">\n      <Trans>previous page</Trans>\n    </BackButton>\n    <Steps activeStep={5} totalSteps={6} />\n    <H1>\n      <Trans>Enter your contact information</Trans>\n    </H1>\n    <TrackPageViews />\n    <ContactInfoForm onSubmit={submitAndNavigate} />\n  </Layout>\n)\n","/**@jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport PropTypes from 'prop-types'\nimport { Component } from 'react'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { I18n } from '@lingui/react'\nimport { ApolloConsumer } from 'react-apollo'\nimport { Container } from '../components/container'\nimport { Text } from '../components/text'\nimport { H1, H2, H5 } from '../components/header'\nimport { Button } from '../components/button'\nimport { Link } from '../components/link'\nimport { FileUpload } from '../components/file-upload'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { Layout } from '../components/layout'\nimport { Steps } from '../components/stepper'\nimport { P } from '../components/paragraph'\nimport { getDoneForms, getFiles } from '../utils/queriesAndMutations'\nimport upload from '../images/upload.svg'\nimport { BackButton } from '../components/backbutton'\n\nclass FileUploadInternal extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      files: getFiles(props.client).map(name => ({ name })),\n    }\n  }\n\n  onChange = e => {\n    this.setState({ files: this.state.files.concat(e.target.files[0]) })\n  }\n\n  removeFile = index => {\n    let newFiles = this.state.files\n    newFiles.splice(index, 1)\n    this.setState({ files: newFiles })\n  }\n\n  submitAndNavigate = client => {\n    const files = this.state.files.map(file => file.name)\n    const data = { files }\n    client.writeData({ data }) // TODO: actually upload files\n    navigate(getDoneForms(client) ? 'confirmation' : 'contactinfoquestion')\n  }\n\n  render() {\n    const { files } = this.state\n\n    return (\n      <Layout>\n        <TrackPageViews />\n        <BackButton route=\"/p1/uploadfilesquestion\">\n          <Trans>previous page</Trans>\n        </BackButton>\n        <Steps activeStep={4} totalSteps={6} />\n        <H1>\n          <Trans>Attach supporting files</Trans>\n        </H1>\n        <P>\n          <Trans>\n            Include any messages, conversations, receipts, or other evidence\n            that shows what happened.\n          </Trans>\n        </P>\n        <P>\n          <Trans>Please attach one file at a time.</Trans>\n        </P>\n        <Container\n          marginTop={[2, null, 5]}\n          marginBottom={[2, 5, 5]}\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent={['flex-start', 'center', 'flex-start']}\n          textAlign=\"center\"\n        >\n          <FileUpload\n            onChange={this.onChange}\n            width={['auto', '100%', 'auto']}\n            paddingLeft=\"1.5rem\"\n            paddingRight=\"1.5rem\"\n            paddingBottom=\"0.6rem\"\n            paddingTop=\"0.6rem\"\n            css={css`\n              display: flex;\n              justify-content: center;\n              img {\n                width: 1rem;\n                margin-right: 0.6rem;\n              }\n            `}\n          >\n            <img alt=\"upload icon\" src={upload} />\n            <span>\n              <Trans>Add file</Trans>\n            </span>\n          </FileUpload>\n        </Container>\n        <P>\n          <Trans> </Trans>\n        </P>\n        <hr />\n\n        <I18n>\n          {({ i18n }) => (\n            <H2 fontSize={[3, null, 5]}>\n              {i18n.plural({\n                value: files.length,\n                one: '# file attached',\n                other: '# files attached',\n              })}\n            </H2>\n          )}\n        </I18n>\n        <Container>\n          {files.map((f, index) => (\n            <Container\n              width={['auto', '100%', 'auto']}\n              marginBottom={[2, null, 3]}\n              key={index}\n              display=\"flex\"\n              flexDirection=\"column\"\n              alignItems=\"left\"\n            >\n              <Text marginLeft=\"0rem\">{f.name}</Text>\n              <form>\n                <br />\n\n                <p>\n                  <H5>Describe what this file shows</H5>\n                  <textarea width=\"50px \" height=\"100px\">\n                    {' '}\n                  </textarea>\n                </p>\n\n                <br />\n              </form>\n\n              <Button\n                // float=\"right\"\n\n                marginTop={0}\n                backgroundColor=\"crimson\"\n                type=\"button\"\n                onClick={() => this.removeFile(index)}\n              >\n                <Trans>Remove file</Trans>\n              </Button>\n            </Container>\n          ))}\n        </Container>\n\n        <ApolloConsumer>\n          {client => (\n            <Container>\n              <Container\n                mt=\"1rem\"\n                mb=\"4rem\"\n                display={['flex', 'block', 'flex']}\n                alignItems=\"center\"\n                css={css`\n                  button,\n                  div[name='buttonlink-container'] a {\n                    padding: 0.7rem 1.5rem;\n                    width: 100%;\n                    text-align: center;\n                  }\n\n                  @media (max-width: 640px) {\n                    div[name='buttonlink-container'] a {\n                      padding: 0.7rem 0;\n                    }\n                  }\n                `}\n              >\n                <Container mt=\"1rem\">\n                  <Button\n                    onClick={() => this.submitAndNavigate(client)}\n                    type=\"submit\"\n                  >\n                    <Trans>Next: Contact information</Trans>\n                  </Button>\n                </Container>\n\n                <Container mt=\"1.9rem\" ml={['3rem', '0', '3rem']}>\n                  <Link\n                    type=\"button\"\n                    color=\"black\"\n                    to=\"/p1/\"\n                    textAlign=\"center\"\n                  >\n                    <Trans>Cancel report</Trans>\n                  </Link>\n                </Container>\n              </Container>\n            </Container>\n          )}\n        </ApolloConsumer>\n      </Layout>\n    )\n  }\n}\n\nFileUploadInternal.propTypes = {\n  client: PropTypes.object.isRequired,\n}\n\nexport const FileUploadPage = () => (\n  <ApolloConsumer>\n    {client => <FileUploadInternal client={client} />}\n  </ApolloConsumer>\n)\n","/**@jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { Steps } from '../components/stepper'\nimport { Layout } from '../components/layout'\nimport { ButtonsContainerYesNo } from '../components/buttons-container'\nimport { BackButton } from '../components/backbutton'\n\nexport const FilesToUpload = () => (\n  <Layout>\n    <TrackPageViews />\n    <BackButton route=\"/p1/suspectinfo\">\n      <Trans>suspect clues</Trans>\n    </BackButton>\n    <Steps activeStep={4} totalSteps={6} />\n    <H1>\n      <Trans>Do you have documents, screenshots, or receipts?</Trans>\n    </H1>\n    <ButtonsContainerYesNo\n      yesRoute=\"/p1/uploadfiles\"\n      noRoute=\"/p1/contactinfoquestion\"\n      marginB=\"9.1em\"\n    />\n  </Layout>\n)\n","/* eslint-disable react/no-unescaped-entities */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { ApolloConsumer } from 'react-apollo'\nimport { Trans } from '@lingui/macro'\nimport * as queryString from 'query-string'\nimport { P } from '../components/paragraph'\nimport { H1 } from '../components/header'\nimport { Ul } from '../components/unordered-list'\nimport { Li } from '../components/list-item'\nimport { ButtonsContainer } from '../components/buttons-container'\nimport { Text } from '../components/text'\nimport { Layout } from '../components/layout'\nimport { TrackPageViews } from '../TrackPageViews'\n\nexport const LandingPage = props => {\n  const { surveyID, ResponseID } = queryString.parse(props.location.search)\n  return (\n    <Layout>\n      <TrackPageViews />\n      <H1>\n        <Trans>Report a scam</Trans>\n      </H1>\n      <ApolloConsumer>\n        {client =>\n          client.writeData({\n            data: {\n              doneForms: false,\n              scamInfo: JSON.stringify({}),\n              lostMoney: JSON.stringify({}),\n              suspectInfo: JSON.stringify({}),\n              files: [],\n              contactInfo: JSON.stringify({}),\n              surveyInfo: JSON.stringify({\n                surveyID: surveyID ? surveyID : '',\n                ResponseID: ResponseID ? ResponseID : '',\n              }),\n            },\n          })\n        }\n      </ApolloConsumer>\n\n      <P>\n        <Trans>\n          Tell the RCMP's National Cybercrime Coordination Unit about a scam to\n          help police across Canada investigate these crimes.\n        </Trans>\n      </P>\n      <P>\n        <Trans>You will be asked to:</Trans>\n      </P>\n\n      <Text>\n        <Ul fontSize={[8, null, 8]}>\n          <Li>\n            <Trans>Describe the scam</Trans>\n          </Li>\n          <Li>\n            <Trans>Tell us how much money was lost</Trans>\n          </Li>\n          <Li>\n            <Trans>Add clues about the suspect</Trans>\n          </Li>\n          <Li>\n            <Trans>Attach any supporting files</Trans>\n          </Li>\n        </Ul>\n      </Text>\n      <ButtonsContainer\n        buttonLink={true}\n        cancel={false}\n        landing={true}\n        route=\"/p1/scaminfo\"\n      />\n    </Layout>\n  )\n}\n\nLandingPage.propTypes = {\n  location: PropTypes.object,\n}\n","/* eslint-disable react/no-unescaped-entities */\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { Steps } from '../components/stepper'\nimport { P } from '../components/paragraph'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { MoneyLostForm } from './forms/MoneyLostForm'\nimport { Layout } from '../components/layout'\nimport { getDoneForms } from '../utils/queriesAndMutations'\nimport { BackButton } from '../components/backbutton'\n\nconst submitAndNavigate = (client, data) => {\n  client.writeData({ data: { lostMoney: JSON.stringify(data) } })\n  navigate(getDoneForms(client) ? 'confirmation' : 'suspectinfoquestion')\n}\n\nexport const MoneyLostPage = () => (\n  <Layout>\n    <BackButton route=\"/p1/moneylostquestion\">\n      <Trans>previous page</Trans>\n    </BackButton>\n    <Steps activeStep={2} totalSteps={6} />\n    <H1>\n      <Trans>Tell us about the money lost</Trans>\n    </H1>\n    <P>\n      <Trans>\n        The police will not get your money back, but understanding the impact of\n        the scam can help build a case.\n      </Trans>\n    </P>\n    <TrackPageViews />\n    <MoneyLostForm onSubmit={submitAndNavigate} />\n  </Layout>\n)\n","/**@jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { Steps } from '../components/stepper'\nimport { Layout } from '../components/layout'\nimport { ButtonsContainerYesNo } from '../components/buttons-container'\nimport { BackButton } from '../components/backbutton'\n\nexport const LoseMoney = () => (\n  <Layout>\n    <TrackPageViews />\n    <BackButton route=\"/p1/scaminfo\">\n      <Trans>what happened</Trans>\n    </BackButton>\n    <Steps activeStep={2} totalSteps={6} />\n    <H1>\n      <Trans>Did you lose any money as part of this scam?</Trans>\n    </H1>\n\n    <ButtonsContainerYesNo\n      yesRoute=\"../moneylost\"\n      noRoute=\"../suspectinfoquestion\"\n    />\n  </Layout>\n)\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { P } from '../components/paragraph'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { ScamInfoForm } from './forms/ScamInfoForm'\nimport { Steps } from '../components/stepper'\nimport { Layout } from '../components/layout'\nimport { getDoneForms } from '../utils/queriesAndMutations'\nimport { BackButton } from '../components/backbutton'\n\nconst submitAndNavigate = (client, data) => {\n  client.writeData({ data: { scamInfo: JSON.stringify(data) } })\n  navigate(getDoneForms(client) ? 'confirmation' : 'moneylostquestion')\n}\n\nexport const ScamInfoPage = () => (\n  <Layout>\n    <BackButton route=\"/p1\">\n      <Trans>start page</Trans>\n    </BackButton>\n    <Steps activeStep={1} totalSteps={6} />\n    <H1>\n      <Trans>Describe what happened</Trans>\n    </H1>\n    <P>\n      <Trans>\n        Any information about where, when, and how the scam took place is\n        helpful for police.\n      </Trans>\n    </P>\n    <TrackPageViews />\n    <ScamInfoForm onSubmit={submitAndNavigate} />\n  </Layout>\n)\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { Steps } from '../components/stepper'\nimport { P } from '../components/paragraph'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { SuspectInfoForm } from './forms/SuspectInfoForm'\nimport { Layout } from '../components/layout'\nimport { getDoneForms } from '../utils/queriesAndMutations'\nimport { BackButton } from '../components/backbutton'\n\nconst submitAndNavigate = (client, data) => {\n  client.writeData({ data: { suspectInfo: JSON.stringify(data) } })\n  navigate(getDoneForms(client) ? 'confirmation' : 'uploadfilesquestion')\n}\n\nexport const SuspectInfoPage = () => (\n  <Layout>\n    <BackButton route=\"/p1/suspectinfoquestion\">\n      <Trans>previous page</Trans>\n    </BackButton>\n    <Steps activeStep={3} totalSteps={6} />\n    <H1>\n      <Trans>Add clues about the suspect</Trans>\n    </H1>\n    <P>\n      <Trans>\n        Any information that was used by the scammer can help police identify\n        suspects.\n      </Trans>\n    </P>\n    <TrackPageViews />\n    <SuspectInfoForm onSubmit={submitAndNavigate} />\n  </Layout>\n)\n","/**@jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { ButtonsContainerYesNo } from '../components/buttons-container'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { Steps } from '../components/stepper'\nimport { Layout } from '../components/layout'\nimport { BackButton } from '../components/backbutton'\n\nexport const Suspectinfo = () => (\n  <Layout>\n    <TrackPageViews />\n    <BackButton route=\"/p1/moneylost\">\n      <Trans>money lost</Trans>\n    </BackButton>\n    <Steps activeStep={3} totalSteps={6} />\n    <H1>\n      <Trans>Do you have any information on where the scam came from?</Trans>\n    </H1>\n    <ButtonsContainerYesNo\n      yesRoute=\"/p1/suspectinfo\"\n      noRoute=\"/p1/uploadfilesquestion\"\n      marginB=\"6em\"\n    />\n  </Layout>\n)\n","/**@jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { I18n } from '@lingui/react'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { P } from '../components/paragraph'\nimport { A } from '../components/link'\nimport { ApolloConsumer, Query } from 'react-apollo'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { Layout } from '../components/layout'\nimport { GET_LANGUAGE_QUERY } from '../utils/queriesAndMutations'\n\nexport const ThankYou = () => (\n  <I18n>\n    {() => {\n      return (\n        <Query query={GET_LANGUAGE_QUERY}>\n          {({ data: { language } }) => (\n            <Layout>\n              <ApolloConsumer>\n                {client =>\n                  client.writeData({\n                    data: {\n                      doneForms: false,\n                      scamInfo: JSON.stringify({}),\n                      lostMoney: JSON.stringify({}),\n                      suspectInfo: JSON.stringify({}),\n                      files: [],\n                      contactInfo: JSON.stringify({}),\n                    },\n                  })\n                }\n              </ApolloConsumer>\n              <TrackPageViews />\n\n              <H1>\n                <Trans>Thank you for reporting</Trans>\n              </H1>\n              <P>\n                <Trans>\n                  The{' '}\n                  <A\n                    href={\n                      language === 'en'\n                        ? 'http://www.rcmp-grc.gc.ca/en/the-national-cybercrime-coordination-unit-nc3'\n                        : 'http://www.rcmp-grc.gc.ca/fr/groupe-national-coordination-cybercriminalite-gncc'\n                    }\n                  >\n                    RCMP&apos;s National Cybercrime Coordination Unit\n                  </A>{' '}\n                  will assess the information and combine it with other reports\n                  to help police catch scammers.\n                </Trans>\n              </P>\n              <P>\n                <Trans>\n                  Your reference number is <strong>#NC300234234</strong>. Keep\n                  this number for your records or to add more information later.\n                </Trans>\n              </P>\n            </Layout>\n          )}\n        </Query>\n      )\n    }}\n  </I18n>\n)\n","/**@jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { Steps } from '../components/stepper'\nimport { Layout } from '../components/layout'\nimport { ButtonsContainerYesNo } from '../components/buttons-container'\nimport { BackButton } from '../components/backbutton'\n\nexport const Willbecontacted = () => (\n  <Layout>\n    <TrackPageViews />\n    <BackButton route=\"/p1/uploadfiles\">\n      <Trans>supporting files</Trans>\n    </BackButton>\n    <Steps activeStep={5} totalSteps={6} />\n    <H1>\n      <Trans>\n        Would you like to be contacted, should the police need more information?\n      </Trans>\n    </H1>\n\n    <ButtonsContainerYesNo\n      yesRoute=\"/p1/contactinfo\"\n      noRoute=\"/p1/confirmation\"\n      marginB=\"6em\"\n    />\n  </Layout>\n)\n","/** @jsx jsx */\nimport PropTypes from 'prop-types'\nimport { navigate } from '@reach/router'\nimport styled from '@emotion/styled'\nimport { css, jsx } from '@emotion/core'\nimport { Trans } from '@lingui/macro'\nimport { I18n, i18nMark } from '@lingui/react'\nimport { Form, Field } from 'react-final-form'\nimport { Container } from '../../components/container'\nimport { Button } from '../../components/button'\nimport { Link } from '../../components/link'\nimport { RadioButton } from '../../components/radio-button'\nimport { Text } from '../../components/text'\nimport { TextInput } from '../../components/TextInput'\nimport { ApolloConsumer } from 'react-apollo'\nimport { finalFormAdapter } from '../../utils/finalFormAdapter'\nimport { getContactInfo } from '../../utils/queriesAndMutations'\n\nconst TextInputAdapter = finalFormAdapter(TextInput)\nconst RadioButtonAdapter = finalFormAdapter(RadioButton)\n\nconst CheckboxStyle = styled('label')`\n  margin-bottom: 8pt;\n  font-size: 1.25rem;\n  display: block;\n`\n\nconst Fieldset = styled('fieldset')`\n  margin: 0;\n  padding: 0;\n  border: none;\n`\n\nconst victimOptions = [i18nMark('Yes'), i18nMark('No')]\n\nconst validate = () => {\n  return {}\n}\n\nexport const ContactInfoForm = ({ onSubmit }) => (\n  <ApolloConsumer>\n    {client => (\n      <Form\n        initialValues={getContactInfo(client)}\n        onSubmit={data => onSubmit(client, data)}\n        validate={validate}\n        render={({ handleSubmit }) => (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"contactInfoName\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>\n                  <strong>Full name</strong>\n                </Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"contactInfoName\"\n                id=\"contactInfoName\"\n                component={TextInputAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"contactInfoEmail\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>\n                  <strong>Email address</strong>\n                </Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"contactInfoEmail\"\n                id=\"contactInfoEmail\"\n                component={TextInputAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"contactInfoPhone\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>\n                  <strong>Phone number</strong>\n                </Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"contactInfoPhone\"\n                id=\"contactInfoPhone\"\n                component={TextInputAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <Fieldset>\n              <legend>\n                <Text marginTop={[4, null, 5]}>\n                  <Trans>Are you reporting a scam that happened to you?</Trans>\n                </Text>\n              </legend>\n              <I18n>\n                {({ i18n }) =>\n                  victimOptions.map(key => {\n                    return (\n                      <CheckboxStyle key={key}>\n                        <Field\n                          name=\"userIsTheVictim\"\n                          component={RadioButtonAdapter}\n                          type=\"radio\"\n                          value={key}\n                          label={i18n._(key)}\n                        />\n                      </CheckboxStyle>\n                    )\n                  })\n                }\n              </I18n>\n            </Fieldset>\n\n            <Container\n              mt=\"1rem\"\n              mb=\"4rem\"\n              display={['flex', 'block', 'flex']}\n              alignItems=\"center\"\n              css={css`\n                button,\n                div[name='buttonlink-container'] a {\n                  padding: 0.7rem 1.5rem;\n                  width: 100%;\n                  text-align: center;\n                }\n\n                @media (max-width: 640px) {\n                  div[name='buttonlink-container'] a {\n                    padding: 0.7rem 0;\n                  }\n                }\n              `}\n            >\n              <Container name=\"buttonlink-container\" mt=\"1rem\">\n                <Button\n                  onClick={() => navigate('/p1/confirmation')}\n                  type=\"submit\"\n                >\n                  <Trans>Next: Review report</Trans>\n                </Button>\n              </Container>\n\n              <Container\n                name=\"buttonlink-container\"\n                mt=\"1.9rem\"\n                ml={['3rem', '0', '3rem']}\n              >\n                <Link type=\"button\" color=\"black\" to=\"/p1/\" textAlign=\"center\">\n                  <Trans>Cancel report</Trans>\n                </Link>\n              </Container>\n            </Container>\n          </form>\n        )}\n      />\n    )}\n  </ApolloConsumer>\n)\n\nContactInfoForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n","/** @jsx jsx */\nimport React from 'react'\n\nimport PropTypes from 'prop-types'\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { I18n, i18nMark } from '@lingui/react'\nimport { Form, Field } from 'react-final-form'\nimport { Checkbox } from '../../components/checkbox'\nimport { RadioButton } from '../../components/radio-button'\nimport { TextInput } from '../../components/TextInput'\nimport { Text } from '../../components/text'\nimport { ApolloConsumer } from 'react-apollo'\nimport { finalFormAdapter } from '../../utils/finalFormAdapter'\nimport { getLostMoney } from '../../utils/queriesAndMutations'\nimport { ButtonsContainer } from '../../components/buttons-container'\n\nconst CheckboxAdapter = finalFormAdapter(Checkbox)\nconst RadioButtonAdapter = finalFormAdapter(RadioButton)\nconst TextInputAdapter = finalFormAdapter(TextInput)\n\nconst methodsOfPayment = [\n  i18nMark('Cash'),\n  i18nMark('Credit card'),\n  i18nMark('E-transfer'),\n  i18nMark('Gift card'),\n  i18nMark('Other method'),\n]\n\nconst currencies = [\n  i18nMark('Canadian dollar'),\n  i18nMark('U.S. dollar'),\n  i18nMark('Euro'),\n  i18nMark('Other currency'),\n]\n\nconst CheckboxStyle = styled('label')`\n  margin-bottom: 8pt;\n`\n\nconst Fieldset = styled('fieldset')`\n  margin: 0;\n  padding: 0;\n  border: none;\n`\n\nconst validate = () => {\n  return {}\n}\n\nexport const MoneyLostForm = ({ onSubmit }) => (\n  <ApolloConsumer>\n    {client => (\n      <Form\n        initialValues={getLostMoney(client)}\n        onSubmit={data => onSubmit(client, data)}\n        validate={validate}\n        render={({ handleSubmit, values }) => (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"lostAmount\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>\n                  <strong>Amount of money</strong>\n                </Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"lostAmount\"\n                id=\"lostAmount\"\n                component={TextInputAdapter}\n                height=\"25px\"\n                width=\"200px\"\n              />\n            </div>\n\n            <Fieldset>\n              <legend>\n                <Text marginTop={[4, null, 5]}>\n                  <Trans>\n                    <strong>Currency</strong>\n                  </Trans>\n                </Text>\n              </legend>\n              <I18n>\n                {({ i18n }) =>\n                  currencies.map(key => {\n                    return (\n                      <CheckboxStyle key={key}>\n                        <Field\n                          name=\"lostCurrency\"\n                          component={RadioButtonAdapter}\n                          type=\"radio\"\n                          value={key}\n                          label={i18n._(key)}\n                        />\n                      </CheckboxStyle>\n                    )\n                  })\n                }\n              </I18n>\n            </Fieldset>\n\n            {values.lostCurrency &&\n            values.lostCurrency.indexOf('Other currency') > -1 ? (\n              <React.Fragment>\n                <label htmlFor=\"lostOtherCurrency\">\n                  <Text>\n                    <Trans>Other currency</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <Field\n                    name=\"lostOtherCurrency\"\n                    id=\"lostOtherCurrency\"\n                    component={TextInputAdapter}\n                    height=\"25px\"\n                    width=\"200px\"\n                  />\n                </div>\n              </React.Fragment>\n            ) : (\n              ''\n            )}\n\n            <Fieldset>\n              <legend>\n                <Text marginTop={[4, null, 5]}>\n                  <Trans>\n                    <strong>How did you pay the scammer?</strong>\n                  </Trans>\n                </Text>\n              </legend>\n              <div>\n                <I18n>\n                  {({ i18n }) =>\n                    methodsOfPayment.map(key => {\n                      return (\n                        <CheckboxStyle key={key}>\n                          <Field\n                            name=\"lostMethodsOfPayment\"\n                            component={CheckboxAdapter}\n                            type=\"checkbox\"\n                            value={key}\n                            label={i18n._(key)}\n                          />\n                        </CheckboxStyle>\n                      )\n                    })\n                  }\n                </I18n>\n              </div>\n            </Fieldset>\n\n            {values.lostMethodsOfPayment &&\n            values.lostMethodsOfPayment.indexOf('Other method') > -1 ? (\n              <React.Fragment>\n                <label htmlFor=\"lostOtherMethodOfPayment\">\n                  <Text>\n                    <Trans>Other method of payment</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <Field\n                    name=\"lostOtherMethodOfPayment\"\n                    id=\"lostOtherMethodOfPayment\"\n                    component={TextInputAdapter}\n                    height=\"25px\"\n                    width=\"200px\"\n                  />\n                </div>\n              </React.Fragment>\n            ) : (\n              ''\n            )}\n\n            <ButtonsContainer\n              buttonLink={false}\n              cancel={true}\n              cancelRoute=\"/p1/\"\n              nextPage=\"Scammer details\"\n            />\n          </form>\n        )}\n      />\n    )}\n  </ApolloConsumer>\n)\n\nMoneyLostForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n","/** @jsx jsx */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { ApolloConsumer } from 'react-apollo'\nimport { I18n, i18nMark } from '@lingui/react'\nimport { Trans } from '@lingui/macro'\nimport { Form, Field } from 'react-final-form'\nimport { Checkbox } from '../../components/checkbox'\nimport { ButtonsContainer } from '../../components/buttons-container'\nimport { TextArea } from '../../components/text-area'\nimport { TextInput } from '../../components/TextInput'\nimport { Text } from '../../components/text'\nimport { finalFormAdapter } from '../../utils/finalFormAdapter'\nimport { getScamInfo } from '../../utils/queriesAndMutations'\n\nconst CheckboxAdapter = finalFormAdapter(Checkbox)\nconst TextAreaAdapter = finalFormAdapter(TextArea)\nconst TextInputAdapter = finalFormAdapter(TextInput)\n\nconst howContacted = [\n  i18nMark('Telephone'),\n  i18nMark('Email'),\n  i18nMark('Website'),\n  i18nMark('Other'),\n]\n\nconst CheckboxStyle = styled('label')`\n  margin-bottom: 8pt;\n`\n\nconst Fieldset = styled('fieldset')`\n  margin: 0;\n  padding: 0;\n  border: none;\n`\n\nconst validate = () => {\n  return {}\n}\nexport class ScamInfoForm extends Component {\n  localOnSubmit = (client, data) => {\n    const { onSubmit } = this.props\n    onSubmit(client, data)\n  }\n\n  render() {\n    return (\n      <ApolloConsumer>\n        {client => (\n          <Form\n            initialValues={getScamInfo(client)}\n            onSubmit={data => this.localOnSubmit(client, data)}\n            validate={validate}\n            render={({\n              handleSubmit,\n              // reset,\n              // submitting,\n              // pristine,\n              values,\n              // invalid,\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <label htmlFor=\"scamDetails\">\n                  <Text marginTop={[5, null, 6]}>\n                    <Trans>\n                      <strong>What happened?</strong>\n                    </Trans>\n                  </Text>\n                </label>\n                <div>\n                  <Field\n                    name=\"scamDetails\"\n                    id=\"scamDetails\"\n                    component={TextAreaAdapter}\n                    height=\"100px\"\n                    width=\"100%\"\n                  />\n                </div>\n\n                <label htmlFor=\"whenWereYouContacted\">\n                  <Text marginTop={[5, null, 6]}>\n                    <Trans>\n                      <strong>When did it start?</strong>\n                    </Trans>\n                  </Text>\n                </label>\n                <Text color=\"darkGray\" mt=\"6px\" mb=\"8px\">\n                  <Trans>For example: April 28, 2019</Trans>\n                </Text>\n                <div>\n                  <Field\n                    name=\"whenWereYouContacted\"\n                    id=\"whenWereYouContacted\"\n                    component={TextInputAdapter}\n                    height=\"25px\"\n                    width=\"300px\"\n                  />\n                </div>\n\n                <Fieldset>\n                  <legend>\n                    <Text marginTop={[5, null, 6]}>\n                      <Trans>\n                        <strong>How did it start?</strong>\n                      </Trans>\n                    </Text>\n                  </legend>\n                  <div>\n                    <I18n>\n                      {({ i18n }) =>\n                        howContacted.map(key => {\n                          return (\n                            <CheckboxStyle key={key}>\n                              <Field\n                                name=\"howWereYouContacted\"\n                                component={CheckboxAdapter}\n                                type=\"checkbox\"\n                                value={key}\n                                label={i18n._(key)}\n                              />\n                            </CheckboxStyle>\n                          )\n                        })\n                      }\n                    </I18n>\n                  </div>\n                </Fieldset>\n\n                {values.howWereYouContacted &&\n                values.howWereYouContacted.indexOf('Other') > -1 ? (\n                  <React.Fragment>\n                    <label htmlFor=\"otherMethodOfContact\">\n                      <Text>\n                        <Trans>Other</Trans>\n                      </Text>\n                    </label>\n                    <div>\n                      <Field\n                        name=\"otherMethodOfContact\"\n                        id=\"otherMethodOfContact\"\n                        component={TextAreaAdapter}\n                        height=\"50px\"\n                        width=\"300px\"\n                      />\n                    </div>\n                  </React.Fragment>\n                ) : (\n                  ''\n                )}\n\n                <Text>\n                  {JSON.stringify(validate(values)) === JSON.stringify({}) ? (\n                    ''\n                  ) : (\n                    <Text>\n                      <Trans>Please fill out all fields</Trans>\n                    </Text>\n                  )}\n                </Text>\n                <ButtonsContainer\n                  buttonLink={false}\n                  cancel={true}\n                  cancelRoute=\"/p1/\"\n                  nextPage=\"Money lost\"\n                />\n              </form>\n            )}\n          />\n        )}\n      </ApolloConsumer>\n    )\n  }\n}\n\nScamInfoForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n","/** @jsx jsx */\nimport React from 'react'\n\nimport PropTypes from 'prop-types'\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { I18n, i18nMark } from '@lingui/react'\nimport { Form, Field } from 'react-final-form'\nimport { Checkbox } from '../../components/checkbox'\nimport { ButtonsContainer } from '../../components/buttons-container'\nimport { Text } from '../../components/text'\nimport { TextInput } from '../../components/TextInput'\nimport { ApolloConsumer } from 'react-apollo'\nimport { finalFormAdapter } from '../../utils/finalFormAdapter'\nimport { getSuspectInfo } from '../../utils/queriesAndMutations'\n\nconst CheckboxAdapter = finalFormAdapter(Checkbox)\nconst TextInputAdapter = finalFormAdapter(TextInput)\n\nconst languages = [\n  i18nMark('English'),\n  i18nMark('French'),\n  i18nMark('Other language'),\n]\n\nconst CheckboxStyle = styled('label')`\n  margin-bottom: 8pt;\n`\n\nconst Fieldset = styled('fieldset')`\n  margin: 0;\n  padding: 0;\n  border: none;\n`\n\nconst validate = () => {\n  return {}\n}\n\nexport const SuspectInfoForm = ({ onSubmit }) => (\n  <ApolloConsumer>\n    {client => (\n      <Form\n        initialValues={getSuspectInfo(client)}\n        onSubmit={data => onSubmit(client, data)}\n        validate={validate}\n        render={({ handleSubmit, values }) => (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"suspectName\">\n              <Text>\n                <Trans>\n                  <strong>Name</strong>\n                </Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"suspectName\"\n                id=\"suspectName\"\n                component={TextInputAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"suspectEmail\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>\n                  <strong>Email address</strong>\n                </Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"suspectEmail\"\n                id=\"suspectEmail\"\n                component={TextInputAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"suspectPhone\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>\n                  <strong>Phone number</strong>\n                </Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"suspectPhone\"\n                id=\"suspectPhone\"\n                component={TextInputAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"suspectWebsite\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>\n                  <strong>Website link</strong>\n                </Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"suspectWebsite\"\n                id=\"suspectWebsite\"\n                component={TextInputAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"suspectAddress\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>\n                  <strong>Mailing address</strong>\n                </Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"suspectAddress\"\n                id=\"suspectAddress\"\n                component={TextInputAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"suspectIP\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>\n                  <strong>IP address</strong>\n                </Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"suspectIP\"\n                id=\"suspectIP\"\n                component={TextInputAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <Fieldset>\n              <legend>\n                <Text marginTop={[4, null, 5]}>\n                  <Trans>\n                    <strong>Language of communications</strong>\n                  </Trans>\n                </Text>\n              </legend>\n              <div>\n                <I18n>\n                  {({ i18n }) =>\n                    languages.map(key => {\n                      return (\n                        <CheckboxStyle key={key}>\n                          <Field\n                            name=\"suspectLanguage\"\n                            component={CheckboxAdapter}\n                            type=\"checkbox\"\n                            value={key}\n                            label={i18n._(key)}\n                          />\n                        </CheckboxStyle>\n                      )\n                    })\n                  }\n                </I18n>\n              </div>\n            </Fieldset>\n\n            {values.suspectLanguage &&\n            values.suspectLanguage.indexOf('Other language') > -1 ? (\n              <React.Fragment>\n                <label htmlFor=\"otherSuspectLanguage\">\n                  <Text>\n                    <Trans>Other language</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <Field\n                    name=\"otherSuspectLanguage\"\n                    id=\"otherSuspectLanguage\"\n                    component={TextInputAdapter}\n                    height=\"25px\"\n                    width=\"300px\"\n                  />\n                </div>\n              </React.Fragment>\n            ) : (\n              ''\n            )}\n\n            <ButtonsContainer\n              buttonLink={false}\n              cancel={true}\n              cancelRoute=\"/p1/\"\n              nextPage=\"Supporting files\"\n            />\n          </form>\n        )}\n      />\n    )}\n  </ApolloConsumer>\n)\n\nSuspectInfoForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { Steps } from '../components/stepper'\nimport { Layout } from '../components/layout'\nimport {\n  getTimeFrame,\n  getWhatHappened,\n  getScammerDetails,\n  getImpact,\n  getP2ContactInfo,\n  getSurveyInfo,\n} from '../utils/queriesAndMutations'\nimport { ConfirmationSummary } from './ConfirmationSummary'\nimport { ConfirmationForm } from './forms/ConfirmationForm'\nimport { BackButton } from '../components/backbutton'\n\nconst randLetter = () => {\n  const letters = 'abcdefghijklmnopqrstuvwxyz'.split('')\n  return letters[Math.floor(Math.random() * letters.length)]\n}\nconst randDigit = () => Math.floor(Math.random() * 10)\n\nconst randomizeString = s =>\n  s\n    ? s\n        .replace(/[a-z]/g, () => randLetter())\n        .replace(/[A-Z]/g, () => randLetter().toUpperCase())\n        .replace(/[0-9]/g, () => randDigit())\n    : s\n\nconst submit = (client, submitReportP2) => {\n  let timeFrame = getTimeFrame(client)\n  let whatHappened = getWhatHappened(client)\n  let scammerDetails = getScammerDetails(client)\n  let impact = getImpact(client)\n  let p2ContactInfo = getP2ContactInfo(client)\n  const surveyInfo = getSurveyInfo(client)\n\n  let { fullName, email, phone, postalCode } = p2ContactInfo\n  fullName = randomizeString(fullName)\n  email = randomizeString(email)\n  phone = randomizeString(phone)\n  postalCode = randomizeString(postalCode)\n\n  const data = {\n    source: 'p2',\n    timeFrame,\n    whatHappened,\n    impact,\n    scammerDetails,\n    contactInfo: {\n      fullName,\n      email,\n      phone,\n      postalCode,\n    },\n    surveyInfo,\n  }\n\n  submitReportP2({ variables: data })\n  navigate('nextsteps')\n}\n\nexport const ConfirmationPage = () => {\n  return (\n    <Layout>\n      <TrackPageViews />\n      <BackButton route=\"/p2/contactinfo\">\n        <Trans>your contact information</Trans>\n      </BackButton>\n      <Steps activeStep={6} totalSteps={6} />\n      <H1>\n        <Trans id=\"confirmationPage.title\">Review your report</Trans>\n      </H1>\n      <ConfirmationSummary />\n      <ConfirmationForm onSubmit={submit} />\n    </Layout>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport React from 'react'\nimport { Trans } from '@lingui/macro'\nimport { I18n } from '@lingui/react'\nimport { ApolloConsumer } from 'react-apollo'\nimport { H2 } from '../components/header'\nimport { Text, StyledSpan } from '../components/text'\nimport { Container } from '../components/container'\nimport { Link } from '../components/link'\nimport {\n  getTimeFrame,\n  getWhatHappened,\n  getScammerDetails,\n  getImpact,\n  getP2ContactInfo,\n} from '../utils/queriesAndMutations'\n\nconst SectionHeader = props => (\n  <H2\n    fontSize={[3, null, 4]}\n    marginTop={[2, null, 3]}\n    marginBottom={[1, null, 1]}\n    {...props}\n  />\n)\n\nconst EditButton = props => (\n  <Link type=\"button\" color=\"black\" textAlign=\"center\" {...props}>\n    <Trans>Edit</Trans>\n  </Link>\n)\n\nconst timeFrameSummary = client => {\n  let { startDate, endDate } = getTimeFrame(client)\n  startDate = startDate.slice(0, 10)\n  endDate = endDate.slice(0, 10)\n  return (\n    <React.Fragment>\n      <SectionHeader>\n        <Trans id=\"confirmationPage.timeFrameTitle\">Timeframe</Trans>{' '}\n        <I18n>\n          {({ i18n }) => (\n            <EditButton\n              aria-label={i18n._('Edit timeframe')}\n              to=\"/p2/timeframe\"\n            />\n          )}\n        </I18n>\n      </SectionHeader>\n      {startDate ? (\n        <Text>\n          <Trans>\n            {startDate} to {endDate}\n          </Trans>\n        </Text>\n      ) : (\n        <Text>\n          <Trans id=\"confirmationPage.timeFrameIntro\">\n            If you can, give us an idea of when the scam took place so that\n            police are able to look into it.\n          </Trans>\n        </Text>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst whatHappenedSummary = client => {\n  let { whatHappened } = getWhatHappened(client)\n\n  return (\n    <React.Fragment>\n      <SectionHeader>\n        <Trans id=\"confirmationPage.scamTitle\">Scam</Trans>{' '}\n        <I18n>\n          {({ i18n }) => (\n            <EditButton\n              aria-label={i18n._('Edit what happened')}\n              to=\"/p2/whathappened\"\n            />\n          )}\n        </I18n>\n      </SectionHeader>\n      {whatHappened ? (\n        <Text>{whatHappened}</Text>\n      ) : (\n        <Text>\n          <Trans id=\"confirmationPage.scamIntro\">\n            Tell us about your experience so we can stop it from happening\n            again.\n          </Trans>\n        </Text>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst scammerSummary = client => {\n  const { scammerDetails, files, fileDescriptions } = getScammerDetails(client)\n  return (\n    <React.Fragment>\n      <SectionHeader>\n        <Trans id=\"confirmationPage.suspectTitle\">Suspect</Trans>{' '}\n        <I18n>\n          {({ i18n }) => (\n            <EditButton\n              aria-label={i18n._('Edit scammer information')}\n              to=\"/p2/scammerdetails\"\n            />\n          )}\n        </I18n>\n      </SectionHeader>\n      {scammerDetails !== '' ||\n      files.length > 0 ||\n      fileDescriptions.length > 0 ? (\n        <React.Fragment>\n          <Text>{scammerDetails}</Text>\n          {files\n            ? files.map((file, index) => (\n                <Container key={index}>\n                  <StyledSpan fontSize={[2, null, 3]} fontWeight=\"bold\">\n                    {file}:\n                  </StyledSpan>{' '}\n                  <StyledSpan fontSize={[2, null, 3]}>\n                    {fileDescriptions[index]}\n                  </StyledSpan>\n                </Container>\n              ))\n            : null}\n        </React.Fragment>\n      ) : (\n        <Text>\n          <Trans id=\"confirmationPage.suspectIntro\">\n            Share any details you may know so that police can try to identify\n            suspects.\n          </Trans>\n        </Text>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst impactSummary = client => {\n  let { howWereYouAffected, otherImpact, damage } = getImpact(client)\n  if (howWereYouAffected.indexOf('Other impact') > -1) {\n    howWereYouAffected = howWereYouAffected.filter(\n      impact => impact != 'Other impact',\n    )\n    howWereYouAffected.push(otherImpact)\n  }\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <>\n          <SectionHeader>\n            <Trans id=\"confirmationPage.ImpactTitle\">Impact</Trans>{' '}\n            <EditButton aria-label={i18n._('Edit impact')} to=\"/p2/impact\" />\n          </SectionHeader>\n          {howWereYouAffected.length > 0 || damage != '' ? (\n            <>\n              <Text>{howWereYouAffected.map(i => i18n._(i)).join(', ')}</Text>\n              <Text>{damage}</Text>\n            </>\n          ) : (\n            <Text>\n              <Trans id=\"confirmationPage.impactIntro\">\n                Tell us how the scam impacted you so that we can better support\n                other people who are affected.\n              </Trans>\n            </Text>\n          )}\n        </>\n      )}\n    </I18n>\n  )\n}\n\nconst contactSummary = client => {\n  const { fullName, email, phone, postalCode } = getP2ContactInfo(client)\n  return (\n    <React.Fragment>\n      <SectionHeader>\n        <Trans id=\"confirmationPage.contactTitle\">Contact</Trans>{' '}\n        <I18n>\n          {({ i18n }) => (\n            <EditButton\n              aria-label={i18n._('Edit contact information')}\n              to=\"/p2/contactinfo\"\n            />\n          )}\n        </I18n>\n      </SectionHeader>\n      {(fullName + email + phone + postalCode).length > 0 ? (\n        <React.Fragment>\n          <Text>{fullName}</Text>\n          <Text>{email}</Text>\n          <Text>{phone}</Text>\n          <Text>{postalCode}</Text>\n        </React.Fragment>\n      ) : (\n        <Text>\n          <Trans id=\"confirmationPage.contactIntro\">\n            Provide your contact details so that we can send you a confirmation\n            of your report.\n          </Trans>\n        </Text>\n      )}\n      <br></br>\n    </React.Fragment>\n  )\n}\n\nexport const ConfirmationSummary = () => (\n  <ApolloConsumer>\n    {client => {\n      client.writeData({\n        data: { doneForms: true },\n      })\n      return (\n        <React.Fragment>\n          {timeFrameSummary(client)}\n          {whatHappenedSummary(client)}\n          {scammerSummary(client)}\n          {impactSummary(client)}\n          {contactSummary(client)}\n        </React.Fragment>\n      )\n    }}\n  </ApolloConsumer>\n)\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { P } from '../components/paragraph'\nimport { Steps } from '../components/stepper'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { ContactInfoForm } from './forms/ContactInfoForm'\nimport { Layout } from '../components/layout'\nimport { BackButton } from '../components/backbutton'\n\nconst submitAndNavigate = (client, data) => {\n  client.writeData({ data: { contactInfo: JSON.stringify(data) } })\n  navigate('/p2/confirmation')\n}\n\nexport const ContactInfoPage = () => (\n  <Layout>\n    <BackButton route=\"/p2/impact\">\n      <Trans>the impact</Trans>\n    </BackButton>\n    <Steps activeStep={5} totalSteps={6} />\n    <H1>\n      <Trans>Leave your contact information</Trans>\n    </H1>\n    <P>\n      <Trans>\n        We will use this to send you a confirmation email and to link your\n        report to other reports in your area.\n      </Trans>\n    </P>\n    <TrackPageViews />\n    <ContactInfoForm onSubmit={submitAndNavigate} />\n  </Layout>\n)\n","/* eslint-disable react/no-unescaped-entities */\n\nimport { navigate } from '@reach/router'\nimport React from 'react'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { P } from '../components/paragraph'\nimport { Layout } from '../components/layout'\nimport { Steps } from '../components/stepper'\nimport { ImpactStatementInfoForm } from './forms/ImpactStatementInfoForm'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { getDoneForms } from '../utils/queriesAndMutations'\nimport { BackButton } from '../components/backbutton'\n\nconst submitAndNavigate = (client, data) => {\n  client.writeData({ data: { impact: JSON.stringify(data) } })\n  navigate(getDoneForms(client) ? 'confirmation' : 'contactinfo')\n}\n\nexport const ImpactStatementPage = () => (\n  <Layout>\n    <BackButton route=\"/p2/scammerdetails\">\n      <Trans>the suspect</Trans>\n    </BackButton>\n    <Steps activeStep={4} totalSteps={6} />\n    <H1>\n      <Trans>What was the impact of the scam?</Trans>\n    </H1>\n    <P>\n      <Trans>\n        You're not the only one affected by this scam. Help protect others by\n        telling us how the scam affected you.\n      </Trans>\n    </P>\n    <TrackPageViews />\n    <ImpactStatementInfoForm onSubmit={submitAndNavigate} />\n  </Layout>\n)\n","/* eslint-disable react/no-unescaped-entities */\nimport React from 'react'\nimport { navigate } from '@reach/router'\nimport PropTypes from 'prop-types'\nimport { ApolloConsumer } from 'react-apollo'\nimport { Trans } from '@lingui/macro'\nimport * as queryString from 'query-string'\nimport { P } from '../components/paragraph'\nimport { H1 } from '../components/header'\nimport { Ul } from '../components/unordered-list'\nimport { Li } from '../components/list-item'\nimport { InfoCard } from '../components/container'\nimport { ButtonsContainer } from '../components/buttons-container'\nimport { Layout } from '../components/layout'\nimport { TrackPageViews } from '../TrackPageViews'\n\nexport const LandingPage = props => {\n  const { surveyID, ResponseID } = queryString.parse(props.location.search)\n  return (\n    <Layout>\n      <TrackPageViews />\n      <H1>\n        <Trans id=\"landingPage.title\">Report a scam</Trans>\n      </H1>\n      <ApolloConsumer>\n        {client =>\n          client.writeData({\n            data: {\n              doneForms: false,\n              scamInfo: JSON.stringify({}),\n              lostMoney: JSON.stringify({}),\n              suspectInfo: JSON.stringify({}),\n              files: [],\n              contactInfo: JSON.stringify({}),\n              timeFrame: JSON.stringify({}),\n              whatHappened: JSON.stringify({}),\n              scammerDetails: JSON.stringify({}),\n              impact: JSON.stringify({}),\n              tellUsMore: JSON.stringify({}),\n              surveyInfo: JSON.stringify({\n                surveyID: surveyID ? surveyID : '',\n                ResponseID: ResponseID ? ResponseID : '',\n              }),\n            },\n          })\n        }\n      </ApolloConsumer>\n\n      <P>\n        <Trans id=\"landingPage.intro\">\n          Scams can happen to anyone. They’re not always easy to recognize and\n          new ones are invented every day.\n        </Trans>\n      </P>\n      <InfoCard>\n        <P>\n          <Trans id=\"landingPage.required0\">\n            Before you start, gather what you can about the scam:\n          </Trans>\n        </P>\n        <Ul>\n          <Li>\n            <Trans id=\"landingPage.required1\">Dates when it took place</Trans>\n          </Li>\n          <Li>\n            <Trans id=\"landingPage.required2\">\n              Descriptions of what happened\n            </Trans>\n          </Li>\n          <Li>\n            <Trans id=\"landingPage.required3\">\n              Details on where it came from\n            </Trans>\n          </Li>\n          <Li>\n            <Trans id=\"landingPage.required4\">\n              Documents, screenshots, or receipts\n            </Trans>\n          </Li>\n        </Ul>\n      </InfoCard>\n      <br></br>\n      <P>\n        <Trans id=\"landingPage.summary\">\n          Your report helps the RCMP learn about these crimes and helps police\n          across Canada catch cybercriminals.\n        </Trans>\n      </P>\n\n      <ButtonsContainer\n        cancel={false}\n        buttonLink={false}\n        nextPage=\"Report now\"\n        onClick={() => navigate('/p2/timeframe')}\n      >\n        <Trans id=\"landingPage.nextButton\">Report now ❯</Trans>\n      </ButtonsContainer>\n    </Layout>\n  )\n}\n\nLandingPage.propTypes = {\n  location: PropTypes.object,\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { Trans } from '@lingui/macro'\nimport { I18n } from '@lingui/react'\nimport { H1 } from '../components/header'\nimport { P } from '../components/paragraph'\nimport { A } from '../components/link'\nimport { Ul } from '../components/unordered-list'\nimport { Li } from '../components/list-item'\nimport { InfoCard } from '../components/container'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { Layout } from '../components/layout'\nimport { ApolloConsumer, Query } from 'react-apollo'\nimport { GET_LANGUAGE_QUERY } from '../utils/queriesAndMutations'\n\nexport const NextSteps = () => (\n  <I18n>\n    {() => {\n      return (\n        <Query query={GET_LANGUAGE_QUERY}>\n          {({ data: { language } }) => (\n            <Layout>\n              <ApolloConsumer>\n                {client =>\n                  client.writeData({\n                    data: {\n                      doneForms: false,\n                      scamInfo: JSON.stringify({}),\n                      lostMoney: JSON.stringify({}),\n                      suspectInfo: JSON.stringify({}),\n                      files: [],\n                      contactInfo: JSON.stringify({}),\n                      timeFrame: JSON.stringify({}),\n                      whatHappened: JSON.stringify({}),\n                      scammerDetails: JSON.stringify({}),\n                      impact: JSON.stringify({}),\n                      tellUsMore: JSON.stringify({}),\n                    },\n                  })\n                }\n              </ApolloConsumer>\n              <H1>\n                <Trans id=\"nextStepsPage.title\">Thank you for reporting</Trans>\n              </H1>\n              <P>\n                <Trans id=\"nextStepsPage.summary\">\n                  We've sent you an email with a summary of your report. Your\n                  reference number is  <strong>#NC300234234</strong>\n                  </Trans>\n              </P>\n              <InfoCard>\n                <P>\n                <strong><Trans id=\"nextStepsPage.helpResource\">\n                    Where you can get help\n                  </Trans></strong>\n                </P>\n                <Ul>\n                  <Li>\n                    <A\n                      href={\n                        language === 'en'\n                          ? 'http://www.rcmp-grc.gc.ca/ccaps-spcca/vic-eng.htm'\n                          : 'http://www.rcmp-grc.gc.ca/ccaps-spcca/vic-fra.htm'\n                      }\n                    >\n                      <Trans id=\"nextStepsPage.helpResource1\">Talk to someone and get support</Trans>\n                    </A>\n                  </Li>\n                  <Li>\n                    <A\n                      href={\n                        language === 'en'\n                          ? 'http://www.rcmp-grc.gc.ca/to-ot/tis-set/cyber-tips-conseils-eng.htm'\n                          : 'http://www.rcmp-grc.gc.ca/to-ot/tis-set/cyber-tips-conseils-fra.htm'\n                      }\n                    >\n                      <Trans id=\"nextStepsPage.helpResource2\">Find tips to protect yourself in the future</Trans>\n                    </A>\n                  </Li>\n                  <Li>\n                    <A\n                      href={\n                        language === 'en'\n                          ? 'http://www.antifraudcentre.ca/index-eng.htm'\n                          : 'http://www.antifraudcentre.ca/index-fra.htm'\n                      }\n                    >\n                      <Trans id=\"nextStepsPage.helpResource3\">Follow what scams are trending</Trans>\n                    </A>\n                  </Li>\n                </Ul>\n                <P>\n                <strong><Trans id=\"nextStepsPage.nextStepSummary\">\n                    What happens next\n                  </Trans></strong>\n                </P>\n                <P>\n                  <Trans></Trans>\n                </P>\n                <P>\n                  <Trans id=\"nextStepsPage.nextStepDetail\">\n                    The RCMP will analyze your report and combine it with others\n                    that are similar to help police across Canada track down\n                    cybercriminals.\n                  </Trans>\n                </P>\n              </InfoCard>\n              <br></br>\n              <P>\n              <strong><Trans id=\"nextStepsPage.otherReportOption\">\n                  You have other reporting options\n                </Trans></strong>\n              </P>\n              <Ul>\n                <Li>\n                  <Trans id=\"nextStepsPage.otherReportOption1\">\n                    Report directly to the place where the scam happened.\n                  </Trans>\n                </Li>\n                <Li>\n                  <Trans id=\"nextStepsPage.otherReportOption2\">\n                    Report to your financial institution, if you lost money.\n                  </Trans>\n                </Li>\n                <Li>\n                  <Trans id=\"nextStepsPage.otherReportOption3\"> \n                    Report to the credit bureaus,{' '}\n                    <A\n                      href={\n                        language === 'en'\n                          ? 'https://www.consumer.equifax.ca/personal/'\n                          : 'https://www.consumer.equifax.ca/personnel/'\n                      }\n                    >\n                      Equifax\n                    </A>{' '}\n                    and{' '}\n                    <A\n                      href={\n                        language === 'en'\n                          ? 'https://www.transunion.ca/'\n                          : 'https://www.transunion.ca/fr'\n                      }\n                    >\n                      TransUnion\n                    </A>\n                    , if your identity was stolen.\n                  </Trans>\n                </Li>\n              </Ul>\n              <TrackPageViews />\n            </Layout>\n          )}\n        </Query>\n      )\n    }}\n  </I18n>\n)\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { P } from '../components/paragraph'\nimport { Steps } from '../components/stepper'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { ScammerDetailsForm } from './forms/ScammerDetailsForm'\nimport { Layout } from '../components/layout'\nimport { getDoneForms } from '../utils/queriesAndMutations'\nimport { BackButton } from '../components/backbutton'\n\nconst submitAndNavigate = (client, data) => {\n  client.writeData({ data: { scammerDetails: JSON.stringify(data) } })\n  navigate(getDoneForms(client) ? 'confirmation' : 'impact')\n}\n\nexport const ScammerDetailsPage = () => {\n  return (\n    <Layout>\n      <BackButton route=\"/p2/whathappened\">\n        <Trans id=\"scammerDetail.backButton\">the scam</Trans>\n      </BackButton>\n      <Steps activeStep={3} totalSteps={6} />\n      <H1>\n        <Trans id=\"scammerDetail.title\">Add suspect clues</Trans>\n      </H1>\n      <P>\n        <Trans id=\"scammerDetail.intro\">\n          Any clues about the source of the scam can help police track down the\n          scammer.\n        </Trans>\n      </P>\n      <TrackPageViews />\n      <ScammerDetailsForm onSubmit={submitAndNavigate} />\n    </Layout>\n  )\n}\n","import { navigate } from '@reach/router'\nimport React from 'react'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { P } from '../components/paragraph'\nimport { Layout } from '../components/layout'\nimport { TimeFrameInfoForm } from './forms/TimeFrameInfoForm'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { getDoneForms } from '../utils/queriesAndMutations'\nimport { BackButton } from '../components/backbutton'\nimport { Steps } from '../components/stepper'\n\nconst submitAndNavigate = (client, data) => {\n  client.writeData({ data: { timeFrame: JSON.stringify(data) } })\n  navigate(getDoneForms(client) ? 'confirmation' : 'whathappened')\n}\n\nexport const TimeFramePage = () => (\n  <Layout>\n    <BackButton route=\"/p2\">\n      <Trans id=\"timeFramePage.backButton\">the start page</Trans>\n    </BackButton>\n    <Steps activeStep={1} totalSteps={6} />\n\n    <H1>\n      <Trans id=\"timeFramePage.title\">When did the scam happen?</Trans>\n    </H1>\n    <P>\n      <Trans id=\"timeFramePage.intro\">\n        It’s okay if you don’t know exactly when it took place. You can give\n        your best guess or leave this blank.\n      </Trans>\n    </P>\n    <TrackPageViews />\n    <TimeFrameInfoForm onSubmit={submitAndNavigate} />\n  </Layout>\n)\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from '../components/header'\nimport { P } from '../components/paragraph'\nimport { Ul } from '../components/unordered-list'\nimport { Li } from '../components/list-item'\nimport { Steps } from '../components/stepper'\nimport { TrackPageViews } from '../TrackPageViews'\nimport { WhatHappenedForm } from './forms/WhatHappenedForm'\nimport { Layout } from '../components/layout'\nimport { getDoneForms } from '../utils/queriesAndMutations'\nimport { BackButton } from '../components/backbutton'\n\nconst submitAndNavigate = (client, data) => {\n  client.writeData({ data: { whatHappened: JSON.stringify(data) } })\n  navigate(getDoneForms(client) ? 'confirmation' : '/p2/scammerdetails')\n}\n\nexport const WhatHappenedPage = () => (\n  <Layout>\n    <BackButton route=\"/p2/timeframe\">\n      <Trans id=\"whatHappendPage.backButton\">the timeframe</Trans>\n    </BackButton>\n    <Steps activeStep={2} totalSteps={6} />\n    <H1>\n      <Trans id=\"whatHappendPage.title\">Describe what happened</Trans>\n    </H1>\n    <P>\n      <Trans id=\"whatHappendPage.intro1\">\n        What happened is not your fault. Scammers use a number of techniques to\n        get what they want.\n      </Trans>\n    </P>\n    <P>\n      <Trans id=\"whatHappendPage.details1\">\n        Think about including things such as:\n      </Trans>\n    </P>\n    <Ul>\n      <Li>\n        <Trans id=\"whatHappendPage.details2\">\n          Which app, website, or device you were using\n        </Trans>\n      </Li>\n      <Li>\n        <Trans id=\"whatHappendPage.details3\">\n          How the scammer contacted you\n        </Trans>\n      </Li>\n      <Li>\n        <Trans id=\"whatHappendPage.details4\">\n          What they promised, threatened, or stole\n        </Trans>\n      </Li>\n    </Ul>\n    <TrackPageViews />\n    <WhatHappenedForm onSubmit={submitAndNavigate} />\n  </Layout>\n)\n","/** @jsx jsx */\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { jsx } from '@emotion/core'\nimport { ApolloConsumer, Mutation } from 'react-apollo'\nimport { Form } from 'react-final-form'\nimport { ButtonsContainer } from '../../components/buttons-container'\nimport {\n  getTellUsMore,\n  SUBMIT_P2_REPORT_MUTATION,\n} from '../../utils/queriesAndMutations'\n\nexport const ConfirmationForm = props => {\n  return (\n    <React.Fragment>\n      <ApolloConsumer>\n        {client => (\n          <Mutation mutation={SUBMIT_P2_REPORT_MUTATION}>\n            {submitReportP2 => (\n              <Form\n                initialValues={getTellUsMore(client)}\n                onSubmit={() => props.onSubmit(client, submitReportP2)}\n                render={({ handleSubmit }) => (\n                  <form onSubmit={handleSubmit}>\n                    <ButtonsContainer\n                      buttonLink={false}\n                      cancel={true}\n                      submit={true}\n                    />\n                  </form>\n                )}\n              />\n            )}\n          </Mutation>\n        )}\n      </ApolloConsumer>\n    </React.Fragment>\n  )\n}\n\nConfirmationForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n","/** @jsx jsx */\nimport PropTypes from 'prop-types'\nimport { jsx } from '@emotion/core'\nimport { Trans } from '@lingui/macro'\nimport { Form, Field } from 'react-final-form'\nimport { ButtonsContainer } from '../../components/buttons-container'\nimport { TextInput } from '../../components/TextInput'\nimport { Text } from '../../components/text'\nimport { ApolloConsumer } from 'react-apollo'\nimport { finalFormAdapter } from '../../utils/finalFormAdapter'\nimport { getP2ContactInfo } from '../../utils/queriesAndMutations'\n\nconst TextInputAdapter = finalFormAdapter(TextInput)\n\nconst validate = () => {\n  return {}\n}\n\nexport const ContactInfoForm = ({ onSubmit }) => (\n  <ApolloConsumer>\n    {client => (\n      <Form\n        initialValues={getP2ContactInfo(client)}\n        onSubmit={data => onSubmit(client, data)}\n        validate={validate}\n        render={({ handleSubmit }) => (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"fullName\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>\n                  <strong>Full name</strong>\n                </Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"fullName\"\n                id=\"fullName\"\n                component={TextInputAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"email\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>\n                  <strong>Email address</strong>\n                </Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"email\"\n                id=\"email\"\n                component={TextInputAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <label htmlFor=\"postalCode\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>\n                  <strong>Postal code</strong>\n                </Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"postalCode\"\n                id=\"postalCode\"\n                component={TextInputAdapter}\n                height=\"25px\"\n                width=\"300px\"\n              />\n            </div>\n\n            <ButtonsContainer\n              buttonLink={false}\n              cancel={true}\n              nextPage=\"Confirm information\"\n            />\n          </form>\n        )}\n      />\n    )}\n  </ApolloConsumer>\n)\n\nContactInfoForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n","/** @jsx jsx */\nimport PropTypes from 'prop-types'\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { ApolloConsumer } from 'react-apollo'\nimport { I18n, i18nMark } from '@lingui/react'\nimport { Trans } from '@lingui/macro'\nimport { Form, Field } from 'react-final-form'\nimport { Checkbox } from '../../components/checkbox'\nimport { ButtonsContainer } from '../../components/buttons-container'\nimport { Text } from '../../components/text'\nimport { TextArea } from '../../components/text-area'\nimport { finalFormAdapter } from '../../utils/finalFormAdapter'\nimport { getImpact } from '../../utils/queriesAndMutations'\n\nconst CheckboxAdapter = finalFormAdapter(Checkbox)\nconst TextAreaAdapter = finalFormAdapter(TextArea)\n\nconst howWereYouAffected = [\n  i18nMark('Device or account hacked'),\n  i18nMark('Information stolen'),\n  i18nMark('Money lost'),\n  i18nMark('Reputation damaged'),\n  i18nMark('Safety threatened'),\n  i18nMark('Wellbeing affected'),\n  i18nMark('No impact'),\n]\n\nconst CheckboxStyle = styled('label')`\n  margin-bottom: 8pt;\n`\nconst Fieldset = styled('fieldset')`\n  margin: 0;\n  padding: 0;\n  border: none;\n`\n\nconst validate = () => {\n  return {}\n}\nexport const ImpactStatementInfoForm = props => (\n  <ApolloConsumer>\n    {client => (\n      <Form\n        initialValues={getImpact(client)}\n        onSubmit={data => props.onSubmit(client, data)}\n        validate={validate}\n        render={({ handleSubmit }) => (\n          <form onSubmit={handleSubmit}>\n            <Fieldset>\n              <legend>\n                <Text marginTop={[5, null, 6]}>\n                  <Trans>\n                    <strong>What was the impact of the scam?</strong>\n                  </Trans>\n                </Text>\n              </legend>\n\n              <div>\n                <I18n>\n                  {({ i18n }) =>\n                    howWereYouAffected.map(key => {\n                      return (\n                        <CheckboxStyle key={key}>\n                          <Field\n                            name=\"howWereYouAffected\"\n                            component={CheckboxAdapter}\n                            type=\"checkbox\"\n                            value={key}\n                            label={i18n._(key)}\n                          />\n                        </CheckboxStyle>\n                      )\n                    })\n                  }\n                </I18n>\n              </div>\n            </Fieldset>\n\n            <label htmlFor=\"damage\">\n              <Text marginTop={[5, null, 6]}>\n                <Trans>\n                  <strong>Tell us more about how it impacted you.</strong>\n                </Trans>\n                <Text color=\"darkGray\" mt=\"6px\" mb=\"8px\">\n                  <Trans>\n                    For example: the amount of money, the information taken,\n                    what else was affected\n                  </Trans>\n                </Text>\n              </Text>\n            </label>\n\n            <div>\n              <Field\n                name=\"damage\"\n                id=\"damage\"\n                component={TextAreaAdapter}\n                height=\"50px\"\n                width=\"100%\"\n              />\n            </div>\n\n            <ButtonsContainer\n              buttonLink={false}\n              cancel={true}\n              nextPage=\"Contact info\"\n            />\n          </form>\n        )}\n      />\n    )}\n  </ApolloConsumer>\n)\n\nImpactStatementInfoForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n","/** @jsx jsx */\nimport React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { css, jsx } from '@emotion/core'\nimport { ApolloConsumer } from 'react-apollo'\nimport { Trans } from '@lingui/macro'\nimport { I18n, i18nMark } from '@lingui/react'\nimport { Form, Field } from 'react-final-form'\nimport { Container } from '../../components/container'\nimport { ButtonsContainer } from '../../components/buttons-container'\nimport { TextArea } from '../../components/text-area'\nimport { Button } from '../../components/button'\nimport { Text } from '../../components/text'\nimport { H2, H3 } from '../../components/header'\nimport { P } from '../../components/paragraph'\nimport { Ul } from '../../components/unordered-list'\nimport { Li } from '../../components/list-item'\nimport { FileUpload } from '../../components/file-upload'\nimport { finalFormAdapter } from '../../utils/finalFormAdapter'\nimport { getScammerDetails } from '../../utils/queriesAndMutations'\nimport upload from '../../images/upload.svg'\n\nconst TextAreaAdapter = finalFormAdapter(TextArea)\n\nexport const ScammerDetailsFormWrapped = props => {\n  const { client } = props\n  const cached = getScammerDetails(client)\n  const [files, setFiles] = useState(cached.files.map(file => ({ name: file })))\n  const [fileDescriptions, setFileDescriptions] = useState(\n    cached.fileDescriptions,\n  )\n  const [scammerDetails, setScammerDetails] = useState(cached.scammerDetails)\n  const [status, setStatus] = useState('')\n  i18nMark('fileUpload.removed')\n  i18nMark('fileUpload.added')\n  useEffect(() => {\n    if (status) {\n      document.getElementById('status').focus()\n    }\n  }, [status])\n\n  const onChange = e => {\n    if (e.target.id === 'scammerDetails') {\n      setScammerDetails(e.target.value)\n    } else if (e.target.id.indexOf('file-description') > -1) {\n      const index = Number(e.target.id.substring(17))\n      let newFileDescriptions = JSON.parse(JSON.stringify(fileDescriptions))\n      newFileDescriptions[index] = e.target.value\n      setFileDescriptions(newFileDescriptions)\n    } else if (e.target.files && e.target.files[0]) {\n      setStatus('fileUpload.added')\n      setFiles(files.concat(e.target.files[0]))\n      setFileDescriptions(fileDescriptions.concat(''))\n    }\n  }\n\n  const removeFile = index => {\n    let newFiles = files.filter((_, fileIndex) => index != fileIndex)\n    let newFileDescriptions = fileDescriptions.filter(\n      (_, fileIndex) => index != fileIndex,\n    )\n    setFiles(newFiles)\n    setFileDescriptions(newFileDescriptions)\n    setStatus('fileUpload.removed')\n  }\n\n  const localSubmit = client => {\n    const data = {\n      scammerDetails,\n      files: files.map(f => f.name),\n      fileDescriptions,\n    }\n    props.onSubmit(client, data)\n  }\n  return (\n    <ApolloConsumer>\n      {client => (\n        <Form\n          onSubmit={() => localSubmit(client)}\n          render={({ handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <P>\n                <Trans id=\"scammerDetail.details\">Think about including things such as:</Trans>\n              </P>\n              <Ul>\n                <Li>\n                  <Trans id=\"scammerDetail.detail1\">Who the scammer claimed to be</Trans>\n                </Li>{' '}\n                <Li>\n                  <Trans id=\"scammerDetail.detail2\">Where they asked you to send things</Trans>\n                </Li>\n                <Li>\n                  <Trans id=\"scammerDetail.detail3\">What language they used to communicate</Trans>\n                </Li>\n                <Li>\n                  <Trans id=\"scammerDetail.detail4\">Any screenshots, messages, or receipts</Trans>\n                </Li>\n              </Ul>\n              <label htmlFor=\"scammerDetails\">\n                <Text marginTop={[5, null, 6]}>\n                <strong><Trans id=\"scammerDetail.summary\">       \n                      What do you know about where the scam came from?\n                  </Trans></strong>\n                  <Text color=\"darkGray\" mt=\"6px\" mb=\"8px\">\n                    <Trans id=\"scammerDetail.reminder\">\n                      Remember to include any email addresses, phone numbers, or\n                      website links\n                    </Trans>\n                  </Text>\n                </Text>\n              </label>\n              <div>\n                <Field\n                  input={{ value: scammerDetails, onChange }}\n                  name=\"scammerDetails\"\n                  id=\"scammerDetails\"\n                  component={TextAreaAdapter}\n                  height=\"100px\"\n                  width=\"100%\"\n                />\n              </div>\n              <br></br>\n              <Container\n                marginTop={[2, null, 5]}\n                marginBottom={[2, 5, 5]}\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent={['flex-start', 'center', 'flex-start']}\n                textAlign=\"center\"\n              >\n                <FileUpload\n                  onChange={onChange}\n                  width={['auto', '100%', 'auto']}\n                  paddingLeft=\"1.5rem\"\n                  paddingRight=\"1.5rem\"\n                  paddingBottom=\"0.6rem\"\n                  paddingTop=\"0.6rem\"\n                  css={css`\n                    display: flex;\n                    justify-content: center;\n                    img {\n                      width: 1rem;\n                      margin-right: 0.6rem;\n                    }\n                  `}\n                >\n                  <img alt=\"upload icon\" src={upload} />\n                  <span>\n                    <Trans id=\"scammerDetail.addFileButtom\">Add file</Trans>\n                  </span>\n                </FileUpload>\n              </Container>\n              <I18n>\n                {({ i18n }) => (\n                  <React.Fragment>\n                    <H2 fontSize={[4, null, 5]} lineHeight={[4, null, 5]}>\n                      {i18n.plural({\n                        value: files.length,\n                        one: '# file attached',\n                        other: '# files attached',\n                      })}\n                    </H2>\n\n                    {status ? (\n                      <Text\n                        tabindex={-1}\n                        id=\"status\"\n                        css={css`\n                          :focus {\n                            outline: 0px solid transparent;\n                          }\n                        `}\n                      >\n                        {i18n._(status)}\n                      </Text>\n                    ) : null}\n                  </React.Fragment>\n                )}\n              </I18n>\n\n              <Container>\n                {files.map((f, index) => (\n                  <React.Fragment key={index}>\n                    <H3 marginTop={[4, null, 5]} fontSize={[2, null, 4]}>\n                      {f.name}\n                    </H3>\n\n                    <label htmlFor={`file-description-${index}`}>\n                      <Text>\n                        <Trans id=\"scammerDetail.fileDescription\">Describe what this file shows</Trans>\n                      </Text>\n                    </label>\n                    <div>\n                      <Field\n                        input={{ value: fileDescriptions[index], onChange }}\n                        name={`file-description-${index}`}\n                        id={`file-description-${index}`}\n                        component={TextAreaAdapter}\n                        height=\"50px\"\n                      />\n                    </div>\n\n                    <Button\n                      float=\"right\"\n                      backgroundColor=\"crimson\"\n                      type=\"button\"\n                      onClick={() => removeFile(index)}\n                    >\n                      <Trans id=\"scammerDetail.removeFileButton\">Remove file</Trans>\n                    </Button>\n                  </React.Fragment>\n                ))}\n              </Container>\n              <ButtonsContainer\n                buttonLink={false}\n                cancel={true}\n                nextPage=\"Impact of scam\"\n              />\n            </form>\n          )}\n        />\n      )}\n    </ApolloConsumer>\n  )\n}\n\nScammerDetailsFormWrapped.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  client: PropTypes.any.isRequired,\n}\n\nexport const ScammerDetailsForm = props => (\n  <ApolloConsumer>\n    {client => <ScammerDetailsFormWrapped client={client} {...props} />}\n  </ApolloConsumer>\n)\n","/** @jsx jsx */\nimport { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx } from '@emotion/core'\nimport { ApolloConsumer } from 'react-apollo'\nimport { Trans } from '@lingui/macro'\nimport { Form, Field } from 'react-final-form'\nimport { Text } from '../../components/text'\nimport { ButtonsContainer } from '../../components/buttons-container'\nimport { TextInput } from '../../components/TextInput'\nimport { finalFormAdapter } from '../../utils/finalFormAdapter'\nimport { getTimeFrame } from '../../utils/queriesAndMutations'\n\nconst TextInputAdapter = finalFormAdapter(TextInput)\n\nclass TimeFrameInfoFormWrapped extends Component {\n  localOnSubmit = (client, data) => {\n    const { onSubmit } = this.props\n    onSubmit(client, data)\n  }\n\n  render() {\n    return (\n      <ApolloConsumer>\n        {client => (\n          <Form\n            initialValues={getTimeFrame(client)}\n            onSubmit={data => this.localOnSubmit(this.props.client, data)}\n            render={({ handleSubmit }) => (\n              <form onSubmit={handleSubmit}>\n                <label htmlFor=\"startDate\">\n                  <Text marginTop={[5, null, 6]}>\n                  <strong><Trans id=\"timeFramePage.startDate\">\n                      Approximate start\n                    </Trans></strong>\n                  </Text>\n                  <Text color=\"darkGray\" mt=\"6px\" mb=\"8px\">\n                    <Trans id=\"timeFramePage.startDateExample\">For example: 2019-04-28</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <Field\n                    name=\"startDate\"\n                    id=\"startDate\"\n                    component={TextInputAdapter}\n                    height=\"25px\"\n                    width=\"300px\"\n                  />\n                </div>\n\n                <label htmlFor=\"endDate\">\n                  <Text marginTop={[5, null, 6]}>\n                  <strong><Trans id=\"timeFramePage.endDate\">\n                      Approximate end\n                    </Trans></strong>\n                  </Text>\n                  <Text color=\"darkGray\" mt=\"6px\" mb=\"8px\">\n                    <Trans id=\"timeFramePage.endDateExample\">For example: 2019-04-28</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <Field\n                    name=\"endDate\"\n                    id=\"endDate\"\n                    component={TextInputAdapter}\n                    height=\"25px\"\n                    width=\"300px\"\n                  />\n                </div>\n                <ButtonsContainer\n                  cancel={true}\n                  buttonLink={false}\n                  nextPage=\"What happened\"\n                />\n              </form>\n            )}\n          />\n        )}\n      </ApolloConsumer>\n    )\n  }\n}\n\nTimeFrameInfoFormWrapped.propTypes = {\n  client: PropTypes.any.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n}\n\nexport const TimeFrameInfoForm = props => (\n  <ApolloConsumer>\n    {client => <TimeFrameInfoFormWrapped client={client} {...props} />}\n  </ApolloConsumer>\n)\n","/** @jsx jsx */\nimport PropTypes from 'prop-types'\nimport { jsx } from '@emotion/core'\nimport { ApolloConsumer } from 'react-apollo'\nimport { Trans } from '@lingui/macro'\nimport { Form, Field } from 'react-final-form'\nimport { TextArea } from '../../components/text-area'\nimport { Text } from '../../components/text'\nimport { finalFormAdapter } from '../../utils/finalFormAdapter'\nimport { getWhatHappened } from '../../utils/queriesAndMutations'\nimport { ButtonsContainer } from '../../components/buttons-container'\n\nconst TextAreaAdapter = finalFormAdapter(TextArea)\n\nexport const WhatHappenedForm = props => (\n  <ApolloConsumer>\n    {client => (\n      <Form\n        initialValues={getWhatHappened(client)}\n        onSubmit={data => props.onSubmit(client, data)}\n        render={({ handleSubmit }) => (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"whatHappened\">\n              <Text marginTop={[5, null, 6]}>\n                <Trans id=\"whatHappendPage.summary\">\n                  <strong>What happened?</strong>\n                </Trans>\n              </Text>\n              <Text color=\"darkGray\" mt=\"6px\" mb=\"8px\">\n                <Trans id=\"whatHappendPage.hint\">\n                  Tell us about it in your own words.\n                </Trans>\n              </Text>\n              <Field\n                name=\"whatHappened\"\n                id=\"whatHappened\"\n                component={TextAreaAdapter}\n                height=\"100px\"\n                width=\"100%\"\n              />\n            </label>\n            <ButtonsContainer\n              buttonLink={false}\n              cancel={true}\n              nextPage=\"Scammer details\"\n            />\n          </form>\n        )}\n      />\n    )}\n  </ApolloConsumer>\n)\n\nWhatHappenedForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport { HttpLink } from 'apollo-link-http'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport fetch from 'isomorphic-unfetch'\nimport { ApolloProvider, renderToStringWithData } from 'react-apollo'\nimport { LanguageSwitching } from './LanguageSwitching'\nimport { HelmetProvider } from 'react-helmet-async'\nimport express from 'express'\nimport requestLanguage from 'express-request-language'\nimport { ServerLocation } from '@reach/router'\nimport App from './App'\n\nlet assets, publicDir\n\nconst {\n  RAZZLE_SERVER_SIDE_API_URI, // Razzle strips env vars that are not prefixed\n} = process.env\n\nif (process.env.NODE_ENV === 'test') {\n  assets = { client: { css: {} } }\n  publicDir = 'public'\n} else {\n  assets = require(process.env.RAZZLE_ASSETS_MANIFEST)\n  publicDir = process.env.RAZZLE_PUBLIC_DIR\n}\n\nconst server = express()\nserver\n  .disable('x-powered-by')\n  .use(express.static(publicDir))\n  .use(\n    requestLanguage({\n      languages: ['en', 'fr'],\n    }),\n  )\n  .get('/assets', (_req, res) => {\n    res.status(200).send(JSON.stringify(assets))\n  })\n  .get('/monitoring/alive', (_req, res) => {\n    res.status(200).send('yes')\n  })\n  .use('/public', express.static(__dirname + '/public'))\n  .use('/static', express.static('static'))\n  .get('/monitoring/ready', (_req, res) => {\n    res.status(200).send('yes')\n  })\n  .get('/*', async (req, res) => {\n    const cache = new InMemoryCache()\n\n    // Add defaults for form fields\n    cache.writeData({\n      data: {\n        language: req.language,\n        doneForms: false,\n        scamInfo: JSON.stringify({}),\n        lostMoney: JSON.stringify({}),\n        suspectInfo: JSON.stringify({}),\n        files: [],\n        contactInfo: JSON.stringify({}),\n        timeFrame: JSON.stringify({}),\n        whatHappened: JSON.stringify({}),\n        scammerDetails: JSON.stringify({}),\n        impact: JSON.stringify({}),\n        tellUsMore: JSON.stringify({}),\n        surveyInfo: JSON.stringify({}),\n      },\n    })\n\n    const client = new ApolloClient({\n      ssrMode: true,\n      link: new HttpLink({\n        uri: RAZZLE_SERVER_SIDE_API_URI,\n        fetch,\n      }),\n      cache,\n      resolvers: {},\n    })\n\n    const helmetContext = {}\n\n    let markup\n    try {\n      markup = await renderToStringWithData(\n        <HelmetProvider context={helmetContext}>\n          <ApolloProvider client={client}>\n            <ServerLocation url={req.url}>\n              <LanguageSwitching>\n                <App />\n              </LanguageSwitching>\n            </ServerLocation>\n          </ApolloProvider>\n        </HelmetProvider>,\n      )\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error('Data fetching during SSR Failed:', e)\n    }\n\n    const { helmet } = helmetContext\n\n    res\n      .set({ 'Content-Language': req.language })\n      .status(200)\n      .send(\n        `<!DOCTYPE html>\n      <html ${helmet.htmlAttributes.toString()}>\n        <head>\n          ${helmet.title.toString()} ${helmet.meta.toString()}\n          ${helmet.link.toString()}\n          ${\n            assets.client.css\n              ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">`\n              : ''\n          }\n          ${\n            process.env.NODE_ENV === 'production'\n              ? `<script src=\"${assets.client.js}\" defer></script>`\n              : `<script src=\"${assets.client.js}\" defer crossorigin></script>`\n          }\n        </head>\n        <body ${helmet.bodyAttributes.toString()}>\n          <div id=\"root\">${markup}</div>\n        </body>\n      </html>`,\n      )\n  })\n\nexport default server\n","const FONT_SIZES = [\n  '12rem',\n  '14px',\n  '16px',\n  '19px',\n  '24px',\n  '27px',\n  '36px',\n  '48px',\n  '80px',\n]\n\nconst LINE_HEIGHTS = [\n  15 / 12,\n  20 / 14,\n  20 / 16,\n  25 / 19,\n  30 / 24,\n  30 / 27,\n  40 / 36,\n  50 / 48,\n  80 / 80,\n]\nconst SPACING = ['0px', '5px', '10px', '15px', '20px', '30px', '40px', '50px']\n\nexport const BREAKPOINTS = ['320px', '641px', '769px']\n\nconst colors = {\n  white: '#FFF',\n  black: '#000',\n  blue: '#003a66',\n  lightBlue: '#2b8cc4',\n  purple: '#4c2c92',\n  yellow: '#ffbf47',\n  focusColor: '#ffbf47',\n  infoCard: '#e8e8e8',\n  crimson: '#dc143c',\n  green: '#008000',\n  darkGreen: '#00692f',\n  darkGray: '#767676',\n}\n\nconst theme = {\n  fontSans: 'robotoregular, sans-serif',\n  fontSizes: FONT_SIZES,\n  lineHeights: LINE_HEIGHTS,\n  space: SPACING,\n  breakpoints: BREAKPOINTS,\n\n  checkboxes: {\n    size: '24px',\n    labelSize: '28px',\n  },\n\n  radioButtons: {\n    size: '24px',\n    labelSize: '28px',\n  },\n\n  colors: colors,\n\n  textStyles: {\n    caps: {\n      textTransform: 'uppercase',\n      letterSpacing: '0.2em',\n    },\n  },\n\n  colorStyles: {\n    link: {\n      color: colors.blue,\n      '&:focus': {\n        backgroundColor: colors.focusColor,\n        outline: `3px solid ${colors.focusColor}`,\n      },\n      '&:visited': {\n        color: colors.purple,\n      },\n      '&:hover': {\n        color: colors.lightBlue,\n      },\n    },\n    button: {\n      cursor: 'pointer',\n      color: colors.white,\n      backgroundColor: colors.green,\n      '&:focus': {\n        outline: `3px solid ${colors.focusColor}`,\n      },\n      '&:hover': {\n        backgroundColor: colors.darkGreen,\n      },\n    },\n    footerLink: {\n      color: '#FFF',\n      '&:focus': {\n        outline: `3px solid ${colors.focusColor}`,\n      },\n    },\n\n    inputField: {\n      color: colors.black,\n      '&:focus': {\n        outline: `3px solid ${colors.focusColor}`,\n      },\n    },\n\n    textArea: {\n      color: colors.black,\n      '&:focus': {\n        outline: `3px solid ${colors.focusColor}`,\n      },\n    },\n  },\n}\n\nexport default theme\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport {\n  fontSize,\n  lineHeight,\n  space,\n  fontWeight,\n  colorStyle,\n  display,\n} from 'styled-system'\nimport { cleanProps } from './cleanProps'\nimport PropTypes from 'prop-types'\n\nexport const asAnchor = AnchorType => {\n  const Anchor = props => <AnchorType {...props}>{props.children}</AnchorType>\n\n  Anchor.propTypes = {\n    children: PropTypes.any,\n  }\n\n  const StyledAnchor = styled(Anchor, {\n    shouldForwardProp: prop => cleanProps(prop),\n  })`\n    font-family: ${({ theme }) => theme.fontSans};\n    margin: 0;\n    ${fontSize};\n    ${lineHeight};\n    ${space};\n    ${colorStyle};\n    ${fontWeight};\n    ${display};\n  `\n\n  StyledAnchor.propTypes = {\n    ...fontSize.propTypes,\n    ...lineHeight.propTypes,\n    ...space.propTypes,\n    ...colorStyle.propTypes,\n    ...fontWeight.propTypes,\n    ...display.propTypes,\n  }\n\n  return StyledAnchor\n}\n","export const cleanProps = prop => {\n  if (!styledSystemProps.includes(prop) && prop !== 'as') return true\n  return false\n}\n\nexport const styledSystemProps = [\n  'margin',\n  'marginTop',\n  'marginRight',\n  'marginBottom',\n  'marginLeft',\n  'padding',\n  'paddingTop',\n  'paddingRight',\n  'paddingBottom',\n  'paddingLeft',\n  'm',\n  'mt',\n  'mr',\n  'mb',\n  'ml',\n  'mx',\n  'my',\n  'p',\n  'pt',\n  'pr',\n  'pb',\n  'pl',\n  'px',\n  'py',\n  'color',\n  'bg',\n  'backgroundColor',\n  'width',\n  'fontSize',\n  'fontWeight',\n  'lineHeight',\n  'textAlign',\n  'fontStyle',\n  'letterSpacing',\n  'display',\n  'maxWidth',\n  'minWidth',\n  'height',\n  'minHeight',\n  'maxHeight',\n  'size',\n  'verticalAlign',\n  'alignItems',\n  'alignContent',\n  'justifyItems',\n  'justifyContent',\n  'flexWrap',\n  'flexBasis',\n  'flexDirection',\n  'flex',\n  'justifySelf',\n  'alignSelf',\n  'order',\n  'gridGap',\n  'gridColumnGap',\n  'gridRowGap',\n  'gridColumn',\n  'gridRow',\n  'gridAutoFlow',\n  'gridAutoColumns',\n  'gridAutoRows',\n  'gridTemplateColumns',\n  'gridTemplateRows',\n  'gridTemplateAreas',\n  'gridArea',\n  'border',\n  'borderWidth',\n  'borderStyle',\n  'borderColor',\n  'borderTop',\n  'borderRight',\n  'borderBottom',\n  'borderLeft',\n  'borderRadius',\n  'borders',\n  'boxShadow',\n  'opacity',\n  'overflow',\n  'background',\n  'backgroundImage',\n  'backgroundSize',\n  'backgroundPosition',\n  'backgroundRepeat',\n  'position',\n  'zIndex',\n  'top',\n  'right',\n  'bottom',\n  'left',\n  'buttons',\n  'textStyles',\n  'colorStyles',\n  'colors',\n]\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { color, fontSize, fontWeight, lineHeight, space } from 'styled-system'\n\nexport const finalFormAdapter = Input => {\n  const FinalFormInput = ({ input, ...rest }) => <Input {...input} {...rest} />\n\n  FinalFormInput.propTypes = {\n    input: PropTypes.shape({\n      value: PropTypes.any.isRequired,\n      onChange: PropTypes.func.isRequired,\n      onBlur: PropTypes.func,\n      onFocus: PropTypes.func,\n      ...fontSize.propTypes,\n      ...fontWeight.propTypes,\n      ...lineHeight.propTypes,\n      ...space.propTypes,\n      ...color.propTypes,\n    }),\n  }\n  return FinalFormInput\n}\n","import gql from 'graphql-tag'\n\nexport const GET_LANGUAGE_QUERY = gql`\n  query GetLanguage {\n    language @client\n  }\n`\nexport const FLAGGINGS_WITHIN = gql`\n  query($identifier: String!, $startDate: DateTime!, $endDate: DateTime!) {\n    stats {\n      flaggingsWithin(\n        identifier: $identifier\n        startDate: $startDate\n        endDate: $endDate\n      ) {\n        identifier\n        summaryTotal\n        summary {\n          date\n          total\n        }\n      }\n    }\n  }\n`\n\nexport const GET_STATS_QUERY = gql`\n  query GetStats {\n    stats {\n      reportCount\n    }\n  }\n`\n\nexport const FLAG_IDENTIFIER_MUTATION = gql`\n  mutation flagIdentifier($identifier: String) {\n    flagIdentifier(identifier: $identifier) {\n      identifier\n    }\n  }\n`\n\nexport const SUBMIT_REPORT_MUTATION = gql`\n  mutation submitReport(\n    $source: String!\n    $scamInfo: scamInfoInput!\n    $lostMoney: lostMoneyInput!\n    $suspectInfo: suspectInfoInput!\n    $files: [String]!\n    $contactInfo: contactInfoInput!\n    $surveyInfo: surveyInfo!\n  ) {\n    submitReport(\n      source: $source\n      scamInfo: $scamInfo\n      lostMoney: $lostMoney\n      suspectInfo: $suspectInfo\n      files: $files\n      contactInfo: $contactInfo\n      surveyInfo: $surveyInfo\n    ) {\n      reportID\n    }\n  }\n`\n\nexport const UPLOAD_FILE_MUTATION = gql`\n  mutation uploadFile($file: Upload!, $fileDescription: String!) {\n    uploadFile(file: $file, fileDescription: $fileDescription) {\n      success\n      errorMessage\n      md5\n    }\n  }\n`\n\nexport const getDoneForms = client => {\n  let { doneForms } = client.readQuery({\n    query: gql`\n      query readCache {\n        doneForms\n      }\n    `,\n  })\n  return doneForms\n}\n\nexport const getSurveyInfo = client => {\n  const { surveyInfo } = client.readQuery({\n    query: gql`\n      query readCache {\n        surveyInfo\n      }\n    `,\n  })\n  const { surveyID, ResponseID } = JSON.parse(surveyInfo)\n  return {\n    surveyID: surveyID ? surveyID : '',\n    ResponseID: ResponseID ? ResponseID : '',\n  }\n}\n\n// P1 cache queries\n\nexport const getScamInfo = client => {\n  let { scamInfo } = client.readQuery({\n    query: gql`\n      query readCache {\n        scamInfo\n      }\n    `,\n  })\n  let {\n    howWereYouContacted,\n    otherMethodOfContact,\n    whenWereYouContacted,\n    scamDetails,\n  } = JSON.parse(scamInfo)\n  return {\n    howWereYouContacted: howWereYouContacted ? howWereYouContacted : [],\n    otherMethodOfContact: otherMethodOfContact ? otherMethodOfContact : '',\n    whenWereYouContacted: whenWereYouContacted ? whenWereYouContacted : '',\n    scamDetails: scamDetails ? scamDetails : '',\n  }\n}\n\nexport const getLostMoney = client => {\n  let { lostMoney } = client.readQuery({\n    query: gql`\n      query readCache {\n        lostMoney\n      }\n    `,\n  })\n  let {\n    lostAmount,\n    lostCurrency,\n    lostOtherCurrency,\n    lostMethodsOfPayment,\n    lostOtherMethodOfPayment,\n  } = JSON.parse(lostMoney)\n\n  return {\n    lostAmount: lostAmount ? lostAmount : '',\n    lostCurrency: lostCurrency ? lostCurrency : '',\n    lostOtherCurrency: lostOtherCurrency ? lostOtherCurrency : '',\n    lostMethodsOfPayment: lostMethodsOfPayment ? lostMethodsOfPayment : [],\n    lostOtherMethodOfPayment: lostOtherMethodOfPayment\n      ? lostOtherMethodOfPayment\n      : '',\n  }\n}\n\nexport const getSuspectInfo = client => {\n  let { suspectInfo } = client.readQuery({\n    query: gql`\n      query readCache {\n        suspectInfo\n      }\n    `,\n  })\n  let {\n    suspectName,\n    suspectAddress,\n    suspectLanguage,\n    otherSuspectLanguage,\n    suspectPhone,\n    suspectEmail,\n    suspectWebsite,\n    suspectIP,\n  } = JSON.parse(suspectInfo)\n  return {\n    suspectName: suspectName ? suspectName : '',\n    suspectAddress: suspectAddress ? suspectAddress : '',\n    suspectLanguage: suspectLanguage ? suspectLanguage : [],\n    otherSuspectLanguage: otherSuspectLanguage ? otherSuspectLanguage : '',\n    suspectPhone: suspectPhone ? suspectPhone : '',\n    suspectEmail: suspectEmail ? suspectEmail : '',\n    suspectWebsite: suspectWebsite ? suspectWebsite : '',\n    suspectIP: suspectIP ? suspectIP : '',\n  }\n}\n\nexport const getFiles = client => {\n  const { files } = client.readQuery({\n    query: gql`\n      query readCache {\n        files\n      }\n    `,\n  })\n  return files ? files : []\n}\n\nexport const getContactInfo = client => {\n  const { contactInfo } = client.readQuery({\n    query: gql`\n      query readCache {\n        contactInfo\n      }\n    `,\n  })\n  let {\n    userIsTheVictim,\n    contactInfoName,\n    contactInfoEmail,\n    contactInfoPhone,\n  } = JSON.parse(contactInfo)\n\n  return {\n    userIsTheVictim: userIsTheVictim ? userIsTheVictim : '',\n    contactInfoName: contactInfoName ? contactInfoName : '',\n    contactInfoEmail: contactInfoEmail ? contactInfoEmail : '',\n    contactInfoPhone: contactInfoPhone ? contactInfoPhone : '',\n  }\n}\n\n// P2 cache queries\n\nexport const getTimeFrame = client => {\n  const queryResult = client.readQuery({\n    query: gql`\n      query readCache {\n        timeFrame\n      }\n    `,\n  })\n  const { startDate, endDate } = JSON.parse(queryResult.timeFrame)\n  return {\n    startDate: startDate ? startDate : '',\n    endDate: endDate ? endDate : '',\n  }\n}\n\nexport const getWhatHappened = client => {\n  const queryResult = client.readQuery({\n    query: gql`\n      query readCache {\n        whatHappened\n      }\n    `,\n  })\n  let { whatHappened } = JSON.parse(queryResult.whatHappened)\n\n  return {\n    whatHappened: whatHappened ? whatHappened : '',\n  }\n}\n\nexport const getScammerDetails = client => {\n  const queryResult = client.readQuery({\n    query: gql`\n      query readCache {\n        scammerDetails\n      }\n    `,\n  })\n  let { scammerDetails, files, fileDescriptions } = JSON.parse(\n    queryResult.scammerDetails,\n  )\n\n  return {\n    scammerDetails: scammerDetails ? scammerDetails : '',\n    files: files ? files : [],\n    fileDescriptions: fileDescriptions ? fileDescriptions : [],\n  }\n}\n\nexport const getImpact = client => {\n  const queryResult = client.readQuery({\n    query: gql`\n      query readCache {\n        impact\n      }\n    `,\n  })\n  let { howWereYouAffected, otherImpact, damage } = JSON.parse(\n    queryResult.impact,\n  )\n  return {\n    howWereYouAffected: howWereYouAffected ? howWereYouAffected : [],\n    otherImpact: otherImpact ? otherImpact : '',\n    damage: damage ? damage : '',\n  }\n}\n\nexport const getP2ContactInfo = client => {\n  const queryResult = client.readQuery({\n    query: gql`\n      query readCache {\n        contactInfo\n      }\n    `,\n  })\n  let { fullName, email, phone, postalCode } = JSON.parse(\n    queryResult.contactInfo,\n  )\n  return {\n    fullName: fullName ? fullName : '',\n    email: email ? email : '',\n    phone: phone ? phone : '',\n    postalCode: postalCode ? postalCode : '',\n  }\n}\n\nexport const getTellUsMore = client => {\n  const queryResult = client.readQuery({\n    query: gql`\n      query readCache {\n        tellUsMore\n      }\n    `,\n  })\n  let { tellUsMore } = JSON.parse(queryResult.tellUsMore)\n\n  return {\n    tellUsMore: tellUsMore ? tellUsMore : '',\n  }\n}\n\nexport const SUBMIT_P2_REPORT_MUTATION = gql`\n  mutation submitReportP2(\n    $source: String!\n    $timeFrame: timeFrame!\n    $whatHappened: whatHappened!\n    $impact: impact!\n    $scammerDetails: scammerDetails!\n    $contactInfo: P2ContactInfoInput!\n    $surveyInfo: surveyInfo!\n  ) {\n    submitReportP2(\n      source: $source\n      timeFrame: $timeFrame\n      whatHappened: $whatHappened\n      impact: $impact\n      scammerDetails: $scammerDetails\n      contactInfo: $contactInfo\n      surveyInfo: $surveyInfo\n    ) {\n      reportID\n    }\n  }\n`\n","module.exports = require(\"@babel/polyfill\");","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/extends\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/objectWithoutProperties\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"@babel/runtime/helpers/taggedTemplateLiteral\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@cdssnc/logdriver\");","module.exports = require(\"@emotion/core\");","module.exports = require(\"@emotion/styled-base\");","module.exports = require(\"@lingui/react\");","module.exports = require(\"@reach/component-component\");","module.exports = require(\"@reach/router\");","module.exports = require(\"apollo-cache-inmemory\");","module.exports = require(\"apollo-client\");","module.exports = require(\"apollo-link-http\");","module.exports = require(\"emotion-theming\");","module.exports = require(\"express\");","module.exports = require(\"express-request-language\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"http\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"process\");","module.exports = require(\"prop-types\");","module.exports = require(\"query-string\");","module.exports = require(\"razzle-dev-utils/prettyNodeErrors\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-final-form\");","module.exports = require(\"react-ga\");","module.exports = require(\"react-helmet-async\");","module.exports = require(\"recompose\");","module.exports = require(\"styled-system\");"],"mappingsuBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAEA;;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA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AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AALA;AAWA;AAAA;AACA;AAAA;AAAA;AAOA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AAbA;AAsBA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAcA;AACA;AACA;AACA;AAJA;AA3JA;AAJA;AADA;AAFA;AA+KA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvNA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAZA;AAeA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AACA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;A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AA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AAHA;AArBA;AAHA;AADA;AAFA;AAuCA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA,aAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AADA;AAKA;AACA;AAEA;AACA;AAIA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AADA;AAkBA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAUA;AAhCA;AAAA;AAAA;AAqCA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAxCA;AAoCA;AApCA;AAAA;AACA;AADA;AAAA;AAAA;AAgDA;AACA;AACA;AAlDA;AAoDA;AAEA;AACA;AAAA;AACA;AAxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AAAA;AAAA;AAoGA;;;;;;;;;;;;AChIA;AAAA;AAAA;AAYA;AAWA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AAFA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAWA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AADA;AAFA;AAvCA;AA1BA;AA0EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpHA;AAEA;AAQA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AASA;AASA;AACA;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAaA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AAEA;AAKA;AAmBA;AAQA;AAQA;AAwBA;AAUA;AAAA;AAEA;AADA;AADA;AACA;AAOA;AACA;AAEA;AAAA;AAEA;AADA;AADA;AACA;AADA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AAGA;AAAA;AAEA;AADA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AAAA;AAEA;AADA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AAEA;AAAA;AAEA;AADA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAEA;AAAA;AAEA;AADA;AADA;AACA;AAOA;AACA;AAEA;AAAA;AAEA;AADA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAGA;AACA;AACA;AADA;AACA;AAFA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AACA;AAFA;AAAA;AACA;AASA;AACA;AADA;AAGA;AAEA;AACA;AACA;AADA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AADA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AADA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AADA;AACA;AAFA;AAAA;AACA;AASA;AACA;AADA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AChsourceRoot":""}