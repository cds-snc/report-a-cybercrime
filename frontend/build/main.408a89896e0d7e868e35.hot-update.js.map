{"version":3,"file":"main.408a89896e0d7e868e35.hot-update.js","sources":["webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./src/FileUpload.js","webpack:///./src/Home.js","webpack:///./src/components/button-link/index.js","webpack:///./src/components/button/index.js","webpack:///./src/components/container/index.js","webpack:///./src/components/file-upload/index.css","webpack:///./src/components/file-upload/index.js","webpack:///./src/components/header/index.js","webpack:///./src/components/header/presets.js","webpack:///./src/components/input/index.js","webpack:///./src/components/label/index.js","webpack:///./src/components/list-item/index.js","webpack:///./src/components/paragraph/index.js","webpack:///./src/components/text-area/index.js","webpack:///./src/components/text/index.js","webpack:///./src/components/unordered-list/index.js","webpack:///./src/utils/asAnchor.js","webpack:///./src/utils/cleanProps.js","webpack:///./src/utils/finalFormAdapter.js","webpack:///external \"@babel/runtime/helpers/assertThisInitialized\"","webpack:///external \"@babel/runtime/helpers/defineProperty\""],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/** @jsx jsx */\nimport { Component } from 'react'\nimport { jsx } from '@emotion/core'\nimport { Form, Field } from 'react-final-form'\nimport { P } from './components/paragraph'\nimport { Button } from './components/button'\nimport { FileUpload } from './components/file-upload'\nimport { finalFormAdapter } from './utils/finalFormAdapter'\n\nconst FileUploadAdapter = finalFormAdapter(FileUpload)\n\nexport class FileUploadPage extends Component {\n  state = {\n    file: undefined,\n  }\n\n  onChange = e => {\n    this.setState({ file: e.target.files[0] })\n  }\n\n  submit = () => {\n    alert('not actually uploaded: ' + this.state.file.name)\n  }\n\n  validate = () => {}\n\n  render() {\n    return (\n      <Form\n        margin=\"20px\"\n        onSubmit={this.submit}\n        validate={this.validate}\n        render={({ handleSubmit }) => (\n          <form onSubmit={handleSubmit}>\n            <Field\n              component={FileUploadAdapter}\n              onChange={this.onChange}\n              accept=\".jpg, .jpeg, .png\"\n            >\n              Upload Image\n            </Field>\n\n            <P mt={4}>\n              {this.state.file\n                ? this.state.file.name\n                : 'No files currently selected for upload'}\n            </P>\n            <div>\n              <Button type=\"submit\">Submit</Button>\n            </div>\n          </form>\n        )}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport { Router } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport styled from '@emotion/styled'\nimport { PhaseBanner } from './components/phase-banner'\nimport { Summary } from './Summary'\nimport { PageNotFound } from './PageNotFound'\nimport { Page1 } from './Page1'\nimport { Page2 } from './Page2'\nimport { FileUploadPage } from './FileUpload'\n\nconst Root = styled('div')`\n  margin: 20pt;\n`\n\nconst Screen = styled('div')`\n  margin-top: 30pt;\n`\n\nexport const Home = () => (\n  <Root>\n    <PhaseBanner phase={<Trans>ALPHA</Trans>} phaseColor=\"purple\">\n      <Trans>\n        This site will be changing as we test ideas and learn from people like\n        you.\n      </Trans>\n    </PhaseBanner>\n    <Screen>\n      <Router>\n        <PageNotFound default />\n        <Page1 path=\"/\" />\n        <Page2 path=\"/flag\" />\n        <Summary path=\"/summary\" />\n        <FileUploadPage path=\"/fileuploader\" />\n      </Router>\n    </Screen>\n  </Root>\n)\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { fontSize, fontWeight, lineHeight, space, color } from 'styled-system'\nimport PropTypes from 'prop-types'\nimport { cleanProps } from '../../utils/cleanProps'\n\nconst BaseButtonLink = styled('button', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  background: none;\n  border: none;\n  color: white;\n  ${fontSize};\n  ${fontWeight};\n  ${lineHeight};\n  ${color};\n  ${space};\n  text-decoration: underline;\n  &:hover {\n    cursor: pointer;\n  }\n  &:focus {\n    outline: 3px solid ${({ theme }) => theme.colors.focusColor};\n  }\n`\n\nexport const ButtonLink = props => (\n  <BaseButtonLink\n    fontSize={[1, null, 2]}\n    fontWeight=\"normal\"\n    lineHeight={[1, null, 2]}\n    color=\"white\"\n    {...props}\n  />\n)\n\nButtonLink.propTypes = {\n  children: PropTypes.node,\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport {\n  fontSize,\n  fontWeight,\n  lineHeight,\n  space,\n  colorStyle,\n  color,\n} from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\nimport PropTypes from 'prop-types'\n\nconst BaseButton = styled('button', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  margin: 0;\n  border: 0;\n  ${fontSize};\n  ${fontWeight};\n  ${lineHeight};\n  ${colorStyle};\n  ${color};\n  ${space};\n`\n\nexport const Button = props => (\n  <BaseButton\n    fontSize={[2, null, 3]}\n    fontWeight=\"normal\"\n    lineHeight={[2, null, 3]}\n    colors=\"button\"\n    mt={[2, null, 3]}\n    py={1}\n    px={[2, null, 3]}\n    {...props}\n  />\n)\n\nButton.propTypes = {\n  children: PropTypes.node,\n}\n","/** @jsx jsx **/\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\nimport PropTypes from 'prop-types'\n\nimport {\n  alignItems,\n  alignContent,\n  justifyContent,\n  flexWrap,\n  flexBasis,\n  flexDirection,\n  width,\n  height,\n  color,\n  borders,\n  borderColor,\n  flex,\n  justifySelf,\n  display,\n  alignSelf,\n  space,\n  textAlign,\n  position,\n  top,\n  right,\n  bottom,\n  left,\n  zIndex,\n} from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\n\nexport const Container = styled('div', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  ${alignItems}\n  ${alignContent}\n  ${justifyContent}\n  ${flex}\n  ${flexWrap}\n  ${flexBasis}\n  ${flexDirection}\n  ${width}\n  ${height}\n  ${color}\n  ${display}\n  ${space}\n  ${justifySelf}\n  ${alignSelf}\n  ${borders}\n  ${borderColor}\n  ${textAlign}\n  ${position}\n  ${top}\n  ${bottom}\n  ${left}\n  ${right}\n  ${zIndex}\n`\nexport const Content = props => (\n  <main\n    css={css`\n      flex: 1 0 auto;\n    `}\n  >\n    <Container m=\"auto\" width={[9 / 10, null, 4 / 5]} {...props}>\n      {props.children}\n    </Container>\n  </main>\n)\n\nContent.propTypes = {\n  children: PropTypes.any,\n}\n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#uploader:focus + label {\\n  outline: 3px solid #ffbf47;\\n}\\n\", \"\"]);\n\n// exports\n","/** @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx } from '@emotion/core'\nimport { fontSize, fontWeight, lineHeight, space, color } from 'styled-system'\nimport { Label } from '../label'\nimport { Input } from '../input'\nrequire('./index.css')\n\nexport const FileUpload = ({ onChange, accept, ...props }) => {\n  return (\n    <React.Fragment>\n      <Input\n        type=\"file\"\n        id=\"uploader\"\n        name=\"uploader\"\n        accept={accept}\n        onChange={onChange}\n        width=\"0\"\n      />\n      <Label colors=\"button\" padding={1} htmlFor=\"uploader\" {...props}>\n        {props.children}\n      </Label>\n    </React.Fragment>\n  )\n}\n\nFileUpload.defaultProps = {\n  accept: undefined,\n  fontWeight: '400',\n  fontSize: [2, null, 3],\n  lineHeight: [2, null, 3],\n}\n\nFileUpload.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  accept: PropTypes.string,\n  ...fontSize.propTypes,\n  ...fontWeight.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...color.propTypes,\n}\n","import {\n  fontSize,\n  lineHeight,\n  space,\n  color,\n  fontWeight,\n  textAlign,\n} from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\n\nexport const Header = styled('span', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  margin: 0;\n  ${fontSize};\n  ${lineHeight};\n  ${space};\n  ${color};\n  ${fontWeight};\n  ${textAlign};\n`\n\nHeader.propTypes = {\n  as: PropTypes.string.isRequired,\n  ...fontSize.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...color.propTypes,\n  ...fontWeight.propTypes,\n  ...textAlign.propTypes,\n}\n\nexport { H1, H2, H3, H4, H5, H6 } from './presets'\n","import React from 'react'\nimport { Header } from '.'\nimport PropTypes from 'prop-types'\n\nexport const H1 = props => (\n  <Header\n    as=\"h1\"\n    fontSize={[5, null, 7]}\n    lineHeight={[5, null, 7]}\n    mb={4}\n    fontWeight=\"bold\"\n    {...props}\n  >\n    {props.children}\n  </Header>\n)\n\nH1.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const H2 = props => (\n  <Header\n    as=\"h2\"\n    fontSize={[5, null, 6]}\n    lineHeight={[5, null, 6]}\n    mb={4}\n    fontWeight=\"bold\"\n    {...props}\n  >\n    {props.children}\n  </Header>\n)\n\nH2.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const H3 = props => (\n  <Header\n    as=\"h3\"\n    fontSize={[4, null, 5]}\n    lineHeight={[4, null, 5]}\n    mb={4}\n    fontWeight=\"bold\"\n    {...props}\n  >\n    {props.children}\n  </Header>\n)\n\nH3.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const H4 = props => (\n  <Header\n    as=\"h4\"\n    fontSize={[3, null, 4]}\n    lineHeight={[3, null, 4]}\n    mb={4}\n    fontWeight=\"bold\"\n    {...props}\n  >\n    {props.children}\n  </Header>\n)\n\nH4.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const H5 = props => (\n  <Header\n    as=\"h5\"\n    fontSize={[2, null, 3]}\n    lineHeight={[2, null, 3]}\n    mb={4}\n    fontWeight=\"bold\"\n    {...props}\n  >\n    {props.children}\n  </Header>\n)\n\nH5.propTypes = {\n  children: PropTypes.any,\n}\n\nexport const H6 = props => (\n  <Header\n    as=\"h6\"\n    fontSize={[2, null, 3]}\n    lineHeight={[2, null, 3]}\n    mb={4}\n    fontWeight=\"bold\"\n    {...props}\n  >\n    {props.children}\n  </Header>\n)\n\nH6.propTypes = {\n  children: PropTypes.any,\n}\n","import styled from '@emotion/styled'\nimport { cleanProps } from '../../utils/cleanProps'\nimport {\n  height,\n  width,\n  space,\n  borders,\n  borderColor,\n  display,\n  position,\n  top,\n  right,\n  bottom,\n  left,\n  zIndex,\n} from 'styled-system'\n\nexport const Input = styled('input', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  ${height};\n  ${width};\n  ${space};\n  ${borders};\n  ${borderColor};\n  ${display};\n  ${position};\n  ${top};\n  ${right};\n  ${bottom};\n  ${left};\n  ${zIndex};\n`\n","import styled from '@emotion/styled'\nimport { cleanProps } from '../../utils/cleanProps'\nimport {\n  fontSize,\n  fontWeight,\n  lineHeight,\n  space,\n  color,\n  colorStyle,\n  display,\n  border,\n  borderColor,\n  width,\n  height,\n  position,\n  zIndex,\n  top,\n  right,\n  bottom,\n  left,\n} from 'styled-system'\n\nexport const Label = styled('label', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  ${fontSize};\n  ${fontWeight};\n  ${lineHeight};\n  ${space};\n  ${color};\n  ${colorStyle};\n  ${display};\n  ${border};\n  ${borderColor};\n  ${width};\n  ${height};\n  ${position};\n  ${zIndex};\n  ${top};\n  ${right};\n  ${bottom};\n  ${left};\n`\n","import {\n  fontSize,\n  lineHeight,\n  space,\n  color,\n  fontWeight,\n  display,\n} from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\nimport styled from '@emotion/styled'\n\nexport const ListItem = styled('li', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  margin: 0;\n  ${fontSize};\n  ${lineHeight};\n  ${space};\n  ${color};\n  ${fontWeight};\n  ${display};\n`\n\nListItem.propTypes = {\n  ...fontSize.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...color.propTypes,\n  ...fontWeight.propTypes,\n  ...display.propTypes,\n}\n\nexport { Li } from './presets'\n","import styled from '@emotion/styled'\nimport { fontSize, lineHeight, space, color, fontWeight } from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\n\nexport const Paragraph = styled('p', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  margin: 0;\n  ${fontSize};\n  ${lineHeight};\n  ${space};\n  ${color};\n  ${fontWeight};\n`\n\nParagraph.propTypes = {\n  ...fontSize.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...color.propTypes,\n  ...fontWeight.propTypes,\n}\n\nexport { P, Lead } from './presets'\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport {\n  display,\n  fontSize,\n  lineHeight,\n  space,\n  color,\n  colorStyle,\n  fontWeight,\n  width,\n  height,\n  borders,\n} from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\n\nexport const StyledTextArea = styled('textarea', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  margin: 0;\n  ${display};\n  ${fontSize};\n  ${lineHeight};\n  ${space};\n  ${colorStyle};\n  ${color};\n  ${fontWeight};\n  ${width};\n  ${height};\n  ${borders}\n`\nStyledTextArea.propTypes = {\n  ...display.propTypes,\n  ...fontSize.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...colorStyle.propTypes,\n  ...color.propTypes,\n  ...fontWeight.propTypes,\n  ...width.propTypes,\n  ...height.propTypes,\n}\n\nexport const TextArea = props => (\n  <StyledTextArea\n    display=\"block\"\n    fontSize={[2, null, 3]}\n    lineHeight={[2, null, 3]}\n    colors=\"textArea\"\n    width={['300px', null, '600px']}\n    height={['200px', null, '300px']}\n    {...props}\n  >\n    {props.children}\n  </StyledTextArea>\n)\n\nTextArea.propTypes = {\n  children: PropTypes.any,\n}\n","import styled from '@emotion/styled'\nimport {\n  fontSize,\n  fontWeight,\n  lineHeight,\n  space,\n  color,\n  display,\n  border,\n  borderColor,\n  width,\n  height,\n  position,\n  zIndex,\n  top,\n  right,\n  bottom,\n  left,\n  textAlign,\n} from 'styled-system'\nimport { cleanProps } from '../../utils/cleanProps'\n\nexport const StyledSpan = styled('span', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  margin: 0;\n  ${fontSize};\n  ${fontWeight};\n  ${lineHeight};\n  ${space};\n  ${color};\n  ${display};\n  ${border};\n  ${borderColor};\n  ${width};\n  ${height};\n  ${position};\n  ${zIndex};\n  ${top};\n  ${right};\n  ${bottom};\n  ${left};\n  ${textAlign}\n`\nexport { Text } from './presets'\n","import { fontSize, lineHeight, space, color, fontWeight } from 'styled-system'\nimport styled from '@emotion/styled'\nimport { cleanProps } from '../../utils/cleanProps'\n\nexport const UnorderedList = styled('ul', {\n  shouldForwardProp: prop => cleanProps(prop),\n})`\n  font-family: ${({ theme }) => theme.fontSans};\n  margin: 0;\n  padding: 0;\n  ${fontSize};\n  ${lineHeight};\n  ${space};\n  ${fontWeight};\n  ${color};\n`\nUnorderedList.propTypes = {\n  ...fontSize.propTypes,\n  ...lineHeight.propTypes,\n  ...space.propTypes,\n  ...color.propTypes,\n  ...fontWeight.propTypes,\n}\n\nexport { Ul } from './presets'\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport {\n  fontSize,\n  lineHeight,\n  space,\n  fontWeight,\n  colorStyle,\n  display,\n} from 'styled-system'\nimport { cleanProps } from './cleanProps'\nimport PropTypes from 'prop-types'\n\nexport const asAnchor = AnchorType => {\n  const Anchor = props => <AnchorType {...props}>{props.children}</AnchorType>\n\n  Anchor.propTypes = {\n    children: PropTypes.any,\n  }\n\n  const StyledAnchor = styled(Anchor, {\n    shouldForwardProp: prop => cleanProps(prop),\n  })`\n    font-family: ${({ theme }) => theme.fontSans};\n    margin: 0;\n    ${fontSize};\n    ${lineHeight};\n    ${space};\n    ${colorStyle};\n    ${fontWeight};\n    ${display};\n  `\n\n  StyledAnchor.propTypes = {\n    ...fontSize.propTypes,\n    ...lineHeight.propTypes,\n    ...space.propTypes,\n    ...colorStyle.propTypes,\n    ...fontWeight.propTypes,\n    ...display.propTypes,\n  }\n\n  return StyledAnchor\n}\n","export const cleanProps = prop => {\n  if (!styledSystemProps.includes(prop) && prop !== 'as') return true\n  return false\n}\n\nexport const styledSystemProps = [\n  'margin',\n  'marginTop',\n  'marginRight',\n  'marginBottom',\n  'marginLeft',\n  'padding',\n  'paddingTop',\n  'paddingRight',\n  'paddingBottom',\n  'paddingLeft',\n  'm',\n  'mt',\n  'mr',\n  'mb',\n  'ml',\n  'mx',\n  'my',\n  'p',\n  'pt',\n  'pr',\n  'pb',\n  'pl',\n  'px',\n  'py',\n  'color',\n  'bg',\n  'backgroundColor',\n  'width',\n  'fontSize',\n  'fontWeight',\n  'lineHeight',\n  'textAlign',\n  'fontStyle',\n  'letterSpacing',\n  'display',\n  'maxWidth',\n  'minWidth',\n  'height',\n  'minHeight',\n  'maxHeight',\n  'size',\n  'verticalAlign',\n  'alignItems',\n  'alignContent',\n  'justifyItems',\n  'justifyContent',\n  'flexWrap',\n  'flexBasis',\n  'flexDirection',\n  'flex',\n  'justifySelf',\n  'alignSelf',\n  'order',\n  'gridGap',\n  'gridColumnGap',\n  'gridRowGap',\n  'gridColumn',\n  'gridRow',\n  'gridAutoFlow',\n  'gridAutoColumns',\n  'gridAutoRows',\n  'gridTemplateColumns',\n  'gridTemplateRows',\n  'gridTemplateAreas',\n  'gridArea',\n  'border',\n  'borderWidth',\n  'borderStyle',\n  'borderColor',\n  'borderTop',\n  'borderRight',\n  'borderBottom',\n  'borderLeft',\n  'borderRadius',\n  'borders',\n  'boxShadow',\n  'opacity',\n  'overflow',\n  'background',\n  'backgroundImage',\n  'backgroundSize',\n  'backgroundPosition',\n  'backgroundRepeat',\n  'position',\n  'zIndex',\n  'top',\n  'right',\n  'bottom',\n  'left',\n  'buttons',\n  'textStyles',\n  'colorStyles',\n  'colors',\n]\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { color, fontSize, fontWeight, lineHeight, space } from 'styled-system'\n\nexport const finalFormAdapter = Input => {\n  const FinalFormInput = ({ input, ...rest }) => <Input {...input} {...rest} />\n\n  FinalFormInput.propTypes = {\n    input: PropTypes.shape({\n      value: PropTypes.any.isRequired,\n      onChange: PropTypes.func.isRequired,\n      onBlur: PropTypes.func,\n      onFocus: PropTypes.func,\n      ...fontSize.propTypes,\n      ...fontWeight.propTypes,\n      ...lineHeight.propTypes,\n      ...space.propTypes,\n      ...color.propTypes,\n    }),\n  }\n  return FinalFormInput\n}\n","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AADA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AARA;AAUA;AACA;AACA;AAZA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAeA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAQA;AAAA;AAMA;AAAA;AAhBA;AAJA;AA0BA;AA3CA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAdA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAGA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","sourceRoot":""}