{"version":3,"file":"main.3c8fc5b44136bae736d3.hot-update.js","sources":["webpack:///./src/FileUploadPage.js","webpack:///./src/FilesToUpload.js","webpack:///./src/MoneyLostPage.js","webpack:///./src/SuspectInfoPage.js","webpack:///./src/forms/MoneyLostForm.js"],"sourcesContent":["/** @jsx jsx */\nimport { Component } from 'react'\nimport { navigate } from '@reach/router'\nimport { Trans } from '@lingui/macro'\nimport { css, jsx } from '@emotion/core'\nimport { ApolloConsumer } from 'react-apollo'\nimport { Container } from './components/container'\nimport { Text } from './components/text'\nimport { H1, H2 } from './components/header'\nimport { Button } from './components/button'\nimport { ButtonLink } from './components/button-link'\nimport { FileUpload } from './components/file-upload'\nimport { TrackPageViews } from './TrackPageViews'\nimport { P } from './components/paragraph'\n\nexport class FileUploadPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      files: [],\n    }\n  }\n\n  onChange = e => {\n    this.setState({ files: this.state.files.concat(e.target.files[0]) })\n  }\n\n  removeFile = index => {\n    let newFiles = this.state.files\n    newFiles.splice(index, 1)\n    this.setState({ files: newFiles })\n  }\n\n  submitAndNavigate = client => {\n    const files = this.state.files.map(file => file.name)\n    const data = { files }\n    client.writeData({ data }) // TODO: actually upload files\n    navigate('/contactinfoquestion')\n  }\n\n  render() {\n    const { files } = this.state\n\n    return (\n      <Container>\n        <TrackPageViews />\n        <H1 fontSize={[5, null, 6]} marginBottom=\"70px\">\n          <Trans>Upload supporting files</Trans>\n        </H1>\n        <Container\n          width=\"300px\"\n          marginBottom={[2, null, 3]}\n          css={css`\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n          `}\n        >\n          <FileUpload\n            onChange={this.onChange}\n            paddingLeft=\"15px\"\n            paddingRight=\"15px\"\n          >\n            <Trans>Attach file</Trans>\n          </FileUpload>\n        </Container>\n        <P>\n          <Trans>\n            {' '}\n            Supporting files could include copies of emails, text messages, and\n            receipts. Any documentation could serve as evidence for police.\n          </Trans>\n        </P>\n        <H2 fontSize={[3, null, 5]} marginTop={[5, null, 6]}>\n          {files.length} <Trans>files attached</Trans>\n        </H2>\n\n        <Container>\n          {files.map((f, index) => (\n            <Container\n              width=\"300px\"\n              marginBottom={[2, null, 3]}\n              key={index}\n              css={css`\n                display: flex;\n                flex-direction: row;\n                justify-content: space-between;\n              `}\n            >\n              <Text>{f.name}</Text>\n              <Button\n                float=\"right\"\n                marginTop={0}\n                backgroundColor=\"crimson\"\n                type=\"button\"\n                onClick={() => this.removeFile(index)}\n              >\n                <Trans>Remove</Trans>\n              </Button>\n            </Container>\n          ))}\n        </Container>\n\n        <ApolloConsumer>\n          {client => (\n            <Container>\n              <Container\n                width=\"300px\"\n                marginTop={[7, null, 8]}\n                css={css`\n                  display: flex;\n                  flex-direction: row;\n                  justify-content: space-between;\n                `}\n              >\n                <Button onClick={() => this.submitAndNavigate(client)}>\n                  <Trans>Next</Trans>\n                </Button>\n              </Container>\n\n              <Container\n                width=\"300px\"\n                marginTop={[2, null, 3]}\n                css={css`\n                  display: flex;\n                  flex-direction: column;\n                  justify-content: space-between;\n                `}\n              >\n                <ButtonLink type=\"button\" color=\"black\">\n                  <Trans>Cancel Report</Trans>\n                </ButtonLink>\n              </Container>\n            </Container>\n          )}\n        </ApolloConsumer>\n      </Container>\n    )\n  }\n}\n","/**@jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from './components/header'\nimport { P } from './components/paragraph'\nimport { ButtonLink } from './components/link'\nimport { TrackPageViews } from './TrackPageViews'\nimport { Container } from './components/container'\n\nconst CenterContent = styled('div')`\n  max-width: 750px;\n  margin: auto;\n`\n\nconst bottomBarContainer = css`\n  display: flex;\n  width: 90%;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\nexport const FilesToUpload = () => (\n  <CenterContent>\n    <TrackPageViews />\n    <H1 fontSize={[5, null, 6]}>\n      <Trans>Upload suppporting files</Trans>\n    </H1>\n    <P>\n      <Trans>\n        Do you have any documents, images, screenshots, or receipts?\n      </Trans>\n    </P>\n    <Container css={bottomBarContainer}>\n      <ButtonLink mb={[3, null, 5]} to=\"/uploadfiles\">\n        <Trans>Yes</Trans>\n      </ButtonLink>\n      <ButtonLink mb={[3, null, 5]} to=\"/contactinfoquestion\">\n        <Trans>No</Trans>\n      </ButtonLink>\n    </Container>\n  </CenterContent>\n)\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { navigate } from '@reach/router'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from './components/header'\nimport { P } from './components/paragraph'\nimport { TrackPageViews } from './TrackPageViews'\nimport { MoneyLostForm } from './forms/MoneyLostForm'\n\nconst CenterContent = styled('div')`\n  max-width: 750px;\n  margin: auto;\n`\n\nconst submitAndNavigate = (client, data) => {\n  client.writeData({ data })\n  navigate('/uploadfilesquestion')\n}\n\nexport const MoneyLostPage = () => (\n  <CenterContent>\n    <H1>\n      <Trans>Specify money lost</Trans>\n    </H1>\n    <P>\n      <Trans>\n        We won't be able to recover the money, but understanding the impact of\n        the scam can help build a case.\n      </Trans>\n    </P>\n    <TrackPageViews />\n    <MoneyLostForm onSubmit={submitAndNavigate} />\n  </CenterContent>\n)\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { navigate } from '@reach/router'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { H1 } from './components/header'\nimport { P } from './components/paragraph'\nimport { TrackPageViews } from './TrackPageViews'\nimport { SuspectInfoForm } from './forms/SuspectInfoForm'\n\nconst CenterContent = styled('div')`\n  max-width: 750px;\n  margin: auto;\n`\n\nconst submitAndNavigate = (client, data) => {\n  client.writeData({ data })\n  navigate('/moneylostquestion')\n}\n\nexport const SuspectInfoPage = () => (\n  <CenterContent>\n    <H1>\n      <Trans>Add scammer details</Trans>\n    </H1>\n    <P>\n      <Trans>\n        Any clues about who might be responsible can help police identify\n        suspects.\n      </Trans>\n    </P>\n    <TrackPageViews />\n    <SuspectInfoForm onSubmit={submitAndNavigate} />\n  </CenterContent>\n)\n","/** @jsx jsx */\nimport React from 'react'\nimport { navigate } from '@reach/router'\nimport PropTypes from 'prop-types'\nimport { css, jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { Trans } from '@lingui/macro'\nimport { I18n, i18nMark } from '@lingui/react'\nimport { Form, Field } from 'react-final-form'\nimport { Container } from '../components/container'\nimport { Checkbox } from '../components/checkbox'\nimport { TextArea } from '../components/text-area'\nimport { Button } from '../components/button'\nimport { ButtonLink } from '../components/button-link'\nimport { Text } from '../components/text'\nimport { ApolloConsumer } from 'react-apollo'\nimport { finalFormAdapter } from '../utils/finalFormAdapter'\n\nconst CheckboxAdapter = finalFormAdapter(Checkbox)\nconst TextAreaAdapter = finalFormAdapter(TextArea)\n\nconst methodsOfPayment = [\n  i18nMark('credit card'),\n  i18nMark('cash'),\n  i18nMark('gift card'),\n  i18nMark('other'),\n]\n\nconst CheckboxStyle = styled('label')`\n  margin-bottom: 8pt;\n`\n\nconst validate = () => {\n  return {}\n}\n\nexport const MoneyLostForm = ({ onSubmit }) => (\n  <ApolloConsumer>\n    {client => (\n      <Form\n        onSubmit={data => onSubmit(client, data)}\n        validate={validate}\n        render={({ handleSubmit, values }) => (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"lostAmount\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>How much money was lost?</Trans>\n              </Text>\n              <Text>\n                <br></br>\n                <Trans>Amount</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"lostAmount\"\n                id=\"lostAmount\"\n                component={TextAreaAdapter}\n                height=\"25px\"\n                width=\"200px\"\n              />\n            </div>\n\n            <label htmlFor=\"lostCurrency\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>Currency</Trans>\n              </Text>\n            </label>\n            <div>\n              <Field\n                name=\"lostCurrency\"\n                id=\"lostCurrency\"\n                component={TextAreaAdapter}\n                height=\"25px\"\n                width=\"200px\"\n              />\n            </div>\n\n            <label htmlFor=\"lostMethodsOfPayment\">\n              <Text marginTop={[4, null, 5]}>\n                <Trans>What method of payment was used?</Trans>\n              </Text>\n              <br></br>\n            </label>\n            <div>\n              <I18n>\n                {({ i18n }) =>\n                  methodsOfPayment.map(key => {\n                    return (\n                      <CheckboxStyle key={key}>\n                        <Field\n                          name=\"lostMethodsOfPayment\"\n                          id=\"lostMethodsOfPayment\"\n                          component={CheckboxAdapter}\n                          type=\"checkbox\"\n                          value={key}\n                          label={i18n._(key)}\n                        />\n                      </CheckboxStyle>\n                    )\n                  })\n                }\n              </I18n>\n            </div>\n\n            {values.lostMethodsOfPayment &&\n            values.lostMethodsOfPayment.indexOf('other') > -1 ? (\n              <React.Fragment>\n                <label htmlFor=\"lostOtherMethodOfPayment\">\n                  <Text>\n                    <Trans>Other</Trans>\n                  </Text>\n                </label>\n                <div>\n                  <Field\n                    name=\"lostOtherMethodOfPayment\"\n                    id=\"lostOtherMethodOfPayment\"\n                    component={TextAreaAdapter}\n                    height=\"25px\"\n                    width=\"200px\"\n                  />\n                </div>\n              </React.Fragment>\n            ) : (\n              ''\n            )}\n\n            <Container\n              width=\"305px\"\n              marginTop={[3, null, 4]}\n              css={css`\n                display: flex;\n                flex-direction: row;\n                justify-content: space-between;\n              `}\n            >\n              <Button type=\"submit\">\n                <Trans>Next</Trans>\n              </Button>\n            </Container>\n\n            <Container\n              width=\"300px\"\n              marginTop={[2, null, 3]}\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n              `}\n            >\n              <ButtonLink type=\"button\" color=\"black\">\n                <Trans>Cancel Report</Trans>\n              </ButtonLink>\n            </Container>\n          </form>\n        )}\n      />\n    )}\n  </ApolloConsumer>\n)\n\nMoneyLostForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AAAA;AAAA;AACA;AACA;AAVA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAhBA;AAkBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AArBA;AACA;AADA;AAFA;AAKA;AACA;AAPA;AAAA;AAAA;AAyBA;AACA;AADA;AAGA;AAGA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAHA;AAKA;AAAA;AAIA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AAJA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAnBA;AA0BA;AAGA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AACA;AAAA;AA1BA;AAkCA;AA3HA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAhBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AAMA;AAAA;AAZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AAMA;AAAA;AAZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAdA;AAsBA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAcA;AACA;AACA;AAHA;AASA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AAAA;AAAA;AACA;AAAA;AA7GA;AAHA;AADA;AAFA;AA6HA;AACA;AADA;;;;A","sourceRoot":""}