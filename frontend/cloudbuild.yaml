steps:
  - name: node:11-alpine
    id: ci
    dir: frontend
    entrypoint: npm
    args: ['ci']
    env: ['HUSKY_SKIP_INSTALL=true']

  - name: node:11-alpine
    id: compile-languages
    dir: frontend
    entrypoint: npm
    args: ['run', 'compile']

  - name: node:11-alpine
    id: coverage
    dir: frontend
    entrypoint: npm
    args: ['run', 'coverage']

  - name: node:11-alpine
    id: lint
    dir: frontend
    entrypoint: npm
    args: ['run', 'lint']

  - name: node:11-alpine
    id: translations
    dir: frontend
    entrypoint: npm
    args: ['run', 'check-translations']

  - name: 'gcr.io/cloud-builders/docker'
    dir: 'frontend'
    args:
      [
        'build',
        '--build-arg=RAZZLE_GOOGLE_ANALYTICS_ID=$_RAZZLE_GOOGLE_ANALYTICS_ID',
        '-t',
        'gcr.io/$PROJECT_ID/frontend:$BRANCH_NAME-$SHORT_SHA',
        '-t',
        'gcr.io/$PROJECT_ID/frontend:latest',
        '-f',
        'Dockerfile',
        '.',
      ]
images:
  - 'gcr.io/$PROJECT_ID/frontend:$BRANCH_NAME-$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/frontend:latest'
